Question type,Question,Choice A,Choice B,Choice C,Choice D,Correct Answer,LLM_Answer,LLM_Explanation
MC,Which of the following is not a type of NoSQL database?,Key-Value , Document ,Column ,Relational,1,4,"Relational databases are not NoSQL databases, while Key-Value, Document, and Column databases are NoSQL types."
MC,Logical data independence can be defined as _________________.,The capacity to change the conceptual schema without having to change the external schema.,The capacity to change the external schema without having to change the physical schema.,The capacity to change the physical schema without having to change external schema or application programs.,All of the above.,1,1,The capacity to change the conceptual schema without having to change the external schema.
MC,An external schema is ______.,A collection of views like relations.,A collection of files.,A physical schema.,A collection of relations stored in the database.,1,3,"An external schema is a physical schema that defines how data is organized and stored outside of the database,"
MC,The HAVING clause does which of the following?,Acts like a WHERE clause but is used for groups rather than rows.,Acts like a WHERE clause but is used for rows rather than columns.,Acts like a WHERE clause but is used for columns rather than groups.,Acts EXACTLY like a WHERE clause.,1,1,"The HAVING clause filters groups of rows after the GROUP BY clause has been applied, similar to a WHERE clause but for groups."
MC,An entity (E) has 5 attributes and 3 of them form the composite primary key. The entity has a recursive 1-to-many relationship. How many attributes should there be after transforming the entity (E) to the corresponding table?,4,5,6,None of the above,4,6,The recursive relationship requires an additional attribute to track the relationship.  The composite primary key attributes will be included.
MC,"You have run an SQL statement that asked the DBMS to display data in a table named USER_TABLES. The results include columns of data labeled ""TableName,"" ""NumberOfColumns"" and ""PrimaryKey."" You are looking at:",user data,metadata,a report,indexes,2,2,Metadata about the table structure.
MC,Which of the following searching algorithm is fastest?,binary search,linear search,jump search,all are equally fast,1,1,"Binary search is faster than linear, jump, and other search algorithms, especially on large sorted datasets."
MC,Where is linear searching used?,Used all the time,When the list has only a few elements,When performing a single search in an unordered list,When the list has only a few elements and When performing a single search in an unordered list,4,3,"Linear searching is a simple method for searching an unordered list. It is used when the list has only a few elements or when performing a single search on an unordered list. ,"
MC,How can Jump Search be improved?,Step size should be other than sqrt(n),Cannot be improved,"Begin from the kth item, where k is the step size",Start searching from the end,3,1,"Step size should be other than sqrt(n),"
MC,Which of the following searching algorithm is used with exponential sort after finding the appropriate range?,Jump search,Fibonacci Search,Linear search,Binary search,4,3,"After finding the appropriate range with exponential sort, a linear search is used to find the exact position of the element."
MC,Which of the following searching algorithm is fastest when the input array is not sorted but has uniformly distributed values?,linear search,jump search,interpolation search,binary search,1,1,"Linear search is the fastest for unsorted, uniformly distributed arrays, as it checks each element sequentially."
MC,"What is the time complexity of Z algorithm for pattern searching (m = length of text,  n = length of pattern)?""",O(n),O(m),O(n + m),O(m * n),3,3,"The Z algorithm has a time complexity of O(n + m), where n is the length of the text and m is the length of the pattern. This is because it needs to process both the text and the pattern once."
MC,In which of the cases uniform binary search fails compared to binary search?,Complexity of code,Many searches will be performed on several arrays of the same length,Many searches will be performed on the same array,A table lookup is generally faster than an addition and a shift,1,3,Uniform binary search fails in cases where many searches are performed on the same array (3) as it doesn't leverage pre-calculated information.
MC,Interpolation search is a variation of?,Exponential search,Linear search,Binary search,Jump search,3,3,Interpolation search is a searching algorithm that works on sorted data. It is a variation of binary search.
MC,Which of the following step is taken after finding an element having value greater than the element being searched?,binary search takes place in the forward direction,binary search takes place in a backward direction,linear search takes place in the forward direction,linear search takes place in the backward direction,4,2,Binary search takes place in the backward direction after finding an element greater than the element being searched.
MC,Which of the following is not an advantage of Fibonacci Search?,When the element being searched for has a non uniform access storage,It can be applied efficiently on unsorted arrays,Can be used for large arrays which do not fit in the CPU cache or in the RAM,Can be used in magnetic tapes,2,2,"Question: Which of the following is not an advantage of Fibonacci Search?
1. When the element being searched for has a non uniform access storage
2. It can be applied efficiently on unsorted arrays
3. Can be used for large arrays which do not fit in the CPU cache or in the RAM
4. Can be used in magnetic tapes

[Fibonacci Search is primarily designed for sorted arrays and does not work well on unsorted arrays],"
MC,In which of the following case jump search will be preferred over exponential search?,when the given array is very small in size,when the given array is very large in size,jumping backwards takes significantly more time than jumping forward,jumping forward takes significantly more time than jumping backwards,4,3,Jump search is preferred when jumping forward is significantly faster than jumping backward. This is because jump search works by jumping forward in the array.
MC,What is the best case for linear search?,O(nlogn),O(logn),O(n),O(1),4,4,"When the target element is the first element in the list, the search takes only one comparison, resulting in a time complexity of O(1)."
MC,What is the worst case for linear search?,O(nlogn),O(logn),O(n),O(1),3,3,"When every element in the list needs to be checked, the worst-case time complexity for linear search is O(n)."
MC,What is the best case and worst case complexity of ordered linear search?,"O(nlogn), O(logn)","O(logn), O(nlogn)","O(n), O(1)","O(1), O(n)",4,4,The best case is O(1) when the target is found at the first position. The worst case is O(n) when the target is not present or is in the last position.
MC,"What does the following piece of code do? ""for (int i = 0; i < arr.length-1; i++){for (int j = i+1; j < arr.length; j++){if( (arr[i].equals(arr[j])) && (i != j) ){System.out.println(arr[i]);}}}""",Print the duplicate elements in the array,Print the element with maximum frequency,Print the unique elements in the array,Prints the element with minimum frequnecy,1,1,"The code iterates through an array (arr) to find and print duplicate elements. It compares each element with every element after it. If a match is found, it prints the duplicate element."
MC,Which of the following is a disadvantage of linear search?,Requires more space,Greater time complexities compared to other searching algorithms,Not easy to understand,Not easy to implement,2,2,"Linear search is a simple searching algorithm, but it has a disadvantage of having greater time complexities compared to other searching algorithms."
MC,What is the advantage of recursive approach than an iterative approach?,Consumes less memory,Less code and easy to implement,Consumes more memory,More code has to be written,2,2,"Recursive approaches can solve problems with complex, self-similar structures more elegantly, but they often consume more memory due to repeated function calls."
MC,"Given an input arr = {2,5,7,99,899}; key = 899; What is the level of recursion?",5,2,3,4,3,N/A,"The input array has 5 elements, searching for a specific element involves checking each element. In this case, 899 is the last element. Thus, the level of recursion is 1. Therefore, the correct answer is not listed among the given choices. Answer: N"
MC,"Given an array arr = {45,77,89,90,94,99,100} and key = 99; what are the mid values(corresponding array elements) in the first and second levels of recursion?",90 and 99,90 and 94,89 and 99,89 and 94,1,1,"The question asks for the mid values in the first and second recursive levels of a search operation on the array. The array is sorted, so mid values are calculated as the middle elements of the array in different recursion levels. In this case, after the first recursion, the mid value is 90 and the second recursion is 99. Thus, 90 and 99 are the mid values. ,"
MC,What is the worst case complexity of binary search using recursion?,O(nlogn),O(logn),O(n),O(n2),2,2,The worst-case complexity of binary search using recursion is O(log n) because it repeatedly divides the search space in half.
MC,What is the average case time complexity of binary search using recursion?,O(nlogn),O(logn),O(n),O(n2),2,2,"Binary search, in its recursive form, consistently divides the search space in half, resulting in logarithmic time complexity. This means the time taken increases proportionally to the logarithm of the input size."
MC,Which of the following is not an application of binary search?,To find the lower/upper bound in an ordered sequence,Union of intervals,Debugging,To search in unordered list,4,4,Binary search is not applicable to unordered lists because it requires the list to be sorted.
MC,Binary Search can be categorized into which of the following?,Brute Force technique,Divide and conquer,Greedy algorithm,Dynamic programming,2,2,Binary search is a divide-and-conquer algorithm. It repeatedly divides the search interval in half.
MC,"Given an array arr = {5,6,77,88,99} and key = 88; How many iterations are done until the element is found?",1,3,4,2,4,3,"The element 88 is found at index 3. Therefore, 4 iterations are needed to find the element."
MC,"Given an array arr = {45,77,89,90,94,99,100} and key = 100; What are the mid values(corresponding array elements) generated in the first and second iterations?",90 and 99,90 and 100,89 and 94,94 and 99,1,1,"The mid values generated in the first and second iterations for the array {45,77,89,90,94,99,100} and key 100 are 90 and 99 respectively based on binary search logic."
MC,What is the time complexity of binary search with iteration?,O(nlogn),O(logn),O(n),O(n2),2,2,Binary search with iteration has a time complexity of O(log n) because it repeatedly divides the search interval in half.
MC,Which of the following sorting algorithms is the fastest for sorting small arrays?,Quick sort,Shell sort,Insertion sort,Heap sort,3,3,Insertion sort is generally the fastest for small arrays due to its simplicity and low overhead.
MC,What is the advantage of selection sort over other sorting techniques?,It is faster than any other sorting technique,It is scalable,It works best for inputs which are already sorted,It requires no additional storage space,4,4,"Selection sort is simple to implement, but its performance degrades significantly with larger datasets, making it less efficient than more advanced algorithms like merge sort or quick sort for most practical applications."
MC,Which of the following method is used for sorting in merge sort?,partitioning,merging,exchanging,selection,2,2,Merge sort uses merging to combine sorted sub-arrays.
MC,Which of the following sorting algorithm does not use recursion?,bottom up merge sort,merge sort,heap sort,quick sort,1,1,Bottom-up merge sort is an iterative algorithm that avoids recursion.
MC,Merge sort uses which of the following method to implement sorting?,selection,exchanging,merging,partitioning,3,3,"Merge sort uses the merging method to implement sorting, combining sorted sub-lists into a single sorted list."
MC,Which of the following sorting algorithms is the fastest?,Merge sort,Shell sort,Insertion sort,Quick sort,4,4,"Quick sort is generally considered the fastest in practice for many cases, although its worst-case time complexity can be high."
MC,Quick sort uses which of the following method to implement sorting?,partitioning,selection,exchanging,merging,1,1,"Quick sort uses partitioning to divide the list into smaller sublists,"
MC,"In heap sort, after deleting the last minimum element, the array will contain elements in?",increasing sorting order,tree preorder,tree inorder,decreasing sorting order,4,4,"After deleting the last minimum element in heap sort, the remaining elements will be in decreasing order to maintain the heap property."
MC,Which of the following sorting algorithm is stable?,Introsort,Tim sort,Heap sort,Quick sort,2,2,"Timsort is a stable sorting algorithm, unlike quicksort and heapsort, which are not stable. Introsort is a hybrid algorithm, which can be stable or unstable depending on the implementation."
MC,Which of the following sorting algorithm uses the method of insertion?,selection sort,quick sort,bubble sort,cycle sort,4,4,Insertion sort uses the method of insertion.
MC,Which of the following pair of sorting algorithms are stable?,gnome sort and merge sort,heap sort and merge sort,gnome sort and quick sort,merge sort and selection sort,1,1,Merge sort and gnome sort are stable sorting algorithms.
MC,What is the worst case complexity of bubble sort?,O(nlogn),O(logn),O(n),O(n2),4,4,Bubble sort has a worst-case time complexity of O(n^2) due to nested loops.
MC,What is the average case complexity of bubble sort?,O(nlogn),O(logn),O(n),O(n2),4,4,"Bubble sort has an average and worst-case time complexity of O(n^2), where n is the number of elements being sorted."
MC,Which of the following is not an advantage of optimised bubble sort over other sorting techniques in case of sorted elements?,It is faster,Consumes less memory,Detects whether the input is already sorted,Consumes less time,3,4,"Optimised bubble sort efficiently identifies already sorted input by detecting no swaps during a pass. This early detection feature makes it faster in pre-sorted cases, but it doesn't consume less memory or time in general compared to other efficient techniques."
MC,"The given array is arr = {1, 2, 4, 3}. Bubble sort is used to sort the array elements. How many iterations will be done to sort the array?",4,2,1,0,1,3,"Bubble sort will make multiple passes through the array. For an array of 4 elements, 3 iterations are needed to sort it."
MC,What is the average case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,Merge sort's average case time complexity is O(n log n) because it repeatedly divides the list into halves and merges them.
MC,What is the auxiliary space complexity of merge sort?,O(1),O(log n),O(n),O(n log n),3,3,"The auxiliary space complexity of merge sort is O(n), as it needs to create a temporary array of size n during the merging process."
MC,What is the worst case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,"Merge sort has a worst-case time complexity of O(n log n) due to its divide-and-conquer approach, making it efficient for large datasets."
MC,What will be the best case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,"Merge sort's best, average, and worst-case time complexities are all O(n log n), making it efficient for sorting large datasets."
MC,What is the worst case time complexity of a quick sort algorithm?,O(N),O(N log N),O(N2),O(log N),3,3,The worst-case time complexity of quicksort is O(N^2) because of the potential for unbalanced partitions.
MC,Which of the following methods is the most effective for picking the pivot element?,first element,last element,median-of-three partitioning,random element,3,3,"The median-of-three partitioning method is generally the most effective for selecting the pivot because it tends to produce a more balanced split in the data, leading to better performance in most cases."
MC,Which is the safest method to choose a pivot element?,choosing a random element as pivot,choosing the first element as pivot,choosing the last element as pivot,median-of-three partitioning method,1,1,"Choosing a random element as pivot reduces the risk of worst-case scenarios in quicksort, which can occur with consistently poor pivots."
MC,What is the average running time of a quick sort algorithm?,O(N2),O(N),O(N log N),O(log N),3,3,"Quick sort has an average time complexity of O(N log N), which is efficient for sorting large datasets."
MC,Which is the worst method of choosing a pivot element?,first element as pivot,last element as pivot,median-of-three partitioning,random element as pivot,1,1,"The worst method is choosing the first or last element as pivot because it might lead to worst-case time complexity in certain input arrays. This is because the pivot element might always be the smallest or largest, making the partitioning ineffective."
MC,Which among the following is the best cut-off range to perform insertion sort within a quick sort?,N=0-5,N=5-20,N=20-30,N>30,2,2,"Insertion sort is efficient for small sub-arrays. A common cut-off range for insertion sort within quick sort is typically N=0-10 or N=10-20. In such range, the overhead of quick sort algorithms is greater than insertion sort, so insertion sort will be more efficient."
MC,"The given array is arr = {2,3,4,1,6}. What are the pivots that are returned as a result of subsequent partitioning?",1 and 3,3 and 1,2 and 6,6 and 2,1,N/A,"[Explanation:  Determining pivots from an array through partitioning algorithms depends on the specific partitioning strategy used and can vary.  Information is not available beyond November 2023.  Therefore, no definitive answer can be determined.  Answer: Cannot be determined]"
MC,What is the average case complexity of QuickSort?,O(nlogn),O(logn),O(n),O(n2),1,1,"The average case complexity of QuickSort is O(n log n), because it divides the input array into smaller sub-arrays recursively."
MC,Depth First Search is equivalent to which of the traversal in the Binary Trees?,Pre-order Traversal,Post-order Traversal,Level-order Traversal,In-order Traversal,1,1,"Depth First Search is a graph traversal algorithm that explores as far as possible along each branch before backtracking.  In a Binary Tree, Depth First Search is equivalent to the Pre-order Traversal which visits the root first, then the left subtree, and finally the right subtree."
MC,"Time Complexity of DFS is? (V ??number of vertices, E ??number of edges)",O(V + E),O(V),O(E),O(V*E),1,1,"The time complexity of Depth First Search (DFS) is O(V+E), where V is the number of vertices and E is the number of edges.  This is because DFS visits each vertex and edge exactly once, making its runtime proportional to the sum of the number of vertices and edges in the graph."
MC,The Data structure used in standard implementation of Breadth First Search is?,Stack,Queue,Linked List,Tree,1,2,"The Data structure used in standard implementation of Breadth First Search is a Queue, because it follows the FIFO (First-In, First-Out) principle, processing nodes level by level."
MC,The Depth First Search traversal of a graph will result into?,Linked List,Tree,Graph with back edges,Array,2,3,"DFS traversal results in a graph with back edges, not a linked list, tree, or array."
MC,Which of the following is not an application of Depth First Search?,For generating topological sort of a graph,For generating Strongly Connected Components of a directed graph,Detecting cycles in the graph,Peer to Peer Networks,4,4,Depth-first search (DFS) is unsuitable for peer-to-peer networks because it doesn't efficiently handle the dynamic nature and distributed structure of such networks.
MC,When the Depth First Search of a graph is unique?,When the graph is a Binary Tree,When the graph is a Linked List,When the graph is a n-ary Tree,When the graph is a ternary Tree,2,N/A,Depth First Search (DFS) is not unique for any of the given graph types.  The order of traversal depends on the specific algorithm and the graph's structure.  Answer: N/A
MC,"Regarding implementation of Depth First Search using stacks, what is the maximum distance between two nodes present in the stack? (considering each edge length 1)",Can be anything,0,At most 1,Insufficient Information,1,3,"The maximum distance between two nodes in a stack during DFS is at most 1, as each stack operation adds/removes only one node."
MC,"In Depth First Search, how many times a node is visited?",Once,Twice,Equivalent to number of indegree of the node,Thrice,3,1,"In Depth First Search, a node is visited only once,"
MC,Breadth First Search is equivalent to which of the traversal in the Binary Trees?,Pre-order Traversal,Post-order Traversal,Level-order Traversal,In-order Traversal,3,3,Breadth-First Search is not directly equivalent to any specific binary tree traversal.
MC,"Time Complexity of Breadth First Search is? (V ??number of vertices, E ??number of edges)",O(V + E),O(V),O(E),O(V*E),1,1,"Breadth-First Search visits all vertices and edges. So, the time complexity is O(V + E)."
MC,"Regarding implementation of Breadth First Search using queues, what is the maximum distance between two nodes present in the queue? (considering each edge length 1)",Can be anything,0,At most 1,Insufficient Information,3,3,"The maximum distance between two nodes in a queue during BFS implementation, with each edge length 1, is at most 1.  This is because nodes at the same level have the same distance from the source."
MC,"In BFS, how many times a node is visited?",Once,Twice,Equivalent to number of indegree of the node,Thrice,3,1,A node in a BFS is visited only once.
MC,The first step in the naïve greedy algorithm is?,adding flows with higher values,reversing flow if required,analysing the zero flow,calculating the maximum flow using trial and error,3,1,The first step in the naïve greedy algorithm is adding flows with higher values.
MC,Dijkstra's Algorithm is the prime example for ___________,Dynamic programming,Back tracking,Branch and bound,Greedy algorithm,4,4,"Dijkstra's Algorithm finds the shortest path between nodes in a graph using a greedy approach, prioritizing the node with the smallest known distance."
MC,Which of the following is/are property/properties of a dynamic programming problem?,Optimal substructure,Overlapping subproblems,Greedy approach,Both optimal substructure and overlapping subproblems,4,4,Dynamic programming problems exhibit optimal substructure and overlapping subproblems. A greedy approach is not a property of dynamic programming.
MC,Which of the following problems should be solved using dynamic programming?,Mergesort,Binary search,Longest common subsequence,Quicksort,3,3,"Dynamic programming is used to solve optimization problems with overlapping subproblems, such as the longest common subsequence."
MC,Which of the following problems can?t be solved using recursion?,Factorial of a number,Nth fibonacci number,Length of a string,Problems without base case,4,4,Problems without a base case cannot be solved using recursion because recursion relies on a base case to stop the recursive calls and avoid an infinite loop.
MC,Recursion is similar to which of the following?,Switch Case,Loop,If-else,if elif else,2,2,"Recursion is a programming technique where a function calls itself.  It's similar to a loop because it repeats a block of code, but recursion uses function calls to achieve this repetition,"
MC,"What will happen when the below code snippet is executed? ""void my_recursive_function(){   my_recursive_function();}int main(){   my_recursive_function();   return 0;}""",The code will be executed successfully and no output will be generated,The code will be executed successfully and random output will be generated,The code will show a compile time error,The code will run for some time and stop when the stack overflows,4,4,"The code has a recursive function call that calls itself without a base case. This will lead to an infinite recursion, and the program will eventually crash due to stack overflow."
MC,"How many times is the recursive function called, when the following code is executed? ""void my_recursive_function(int n){     if(n == 0)     return;     printf(""%d "",n);     my_recursive_function(n-1);}int main(){     my_recursive_function(10);     return 0;}""",9,10,11,12,3,2,"The function calls itself repeatedly, decreasing the input value by 1 each time until it reaches 0.  It prints the value of n in each call. Since the function starts with n=10 and decrements until n=0, it will print 10 through 1. Therefore there are 10 calls to the function."
MC,Which of the following statements is true?,Recursion is always better than iteration,Recursion uses more memory compared to iteration,Recursion uses less memory compared to iteration,Iteration is always better and simpler than recursion,2,2,Recursion can be elegant but often uses more memory due to function calls. Iteration is generally more straightforward for simple tasks.
MC,When does the ArrayIndexOutOfBoundsException occur?,Compile-time,Run-time,Not an error,Not an exception at all,2,2,The ArrayIndexOutOfBoundsException occurs at run-time when an attempt is made to access an array element using an index that is outside the bounds of the array.
MC,What are the advantages of arrays?,Objects of mixed data types can be stored,Elements in an array cannot be sorted,Index of first element of an array is 1,Easier to store elements of same data type,4,4,"Arrays are efficient for storing elements of the same data type.  They allow easy access to elements using their index, and  elements can be sorted."
MC,What are the disadvantages of arrays?,Data structure like queue or stack cannot be implemented,There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size,Index value of an array can be negative,Elements are sequentially accessed,2,2,"Arrays have a fixed size, leading to potential memory waste if not all slots are used."
MC,"Assuming int is of 4bytes, what is the size of int arr[15];?",15,19,11,60,4,4,"Assuming 4 bytes for each integer, an array of 15 integers requires 15 * 4 = 60 bytes."
MC,"In general, the index of the first element in an array is __________",0,-1,2,1,1,1,"In general, arrays start at index 0,"
MC,Elements in an array are accessed _____________,randomly,sequentially,exponentially,logarithmically,1,2,"Elements in an array are accessed sequentially, starting from the first element."
MC,The postfix form of the expression (A+ B)*(C*D- E)*F / G is?,AB+ CD*E ??FG /**,AB + CD* E ??F **G /,AB + CD* E ??*F *G /,AB + CDE * ??* F *G /,3,1,The postfix form of the expression (A+ B)*(C*D- E)*F / G is 1. AB+ CD*E ??FG /**.
MC,What data structure would you most likely see in non recursive implementation of a recursive algorithm?,Linked List,Stack,Queue,Tree,2,3,"Queue is commonly used in non-recursive implementations, as it allows for processing elements in a first-in, first-out (FIFO) manner."
MC,The prefix form of A-B/ (C * D ^ E) is?,-/*^ACBDE,-ABCD*^DE,-A/B*C^DE,-A/BC*^DE,3,4,-A/BC*^DE
MC,"What is the result of the following operation? Top (Push (S, X))",X,X+S,S,XS,1,1,"The operation Top(Push(S, X)) pushes the element X onto the stack S and then returns the top element which is X. Therefore the result is X,"
MC,The prefix form of an infix expression (p+q)-(r*t) is?,+pq-*rt,#NAME?,#NAME?,-+*pqrt,3,3,"-+pqr*t ,"
MC,Which data structure is used for implementing recursion?,Queue,Stack,Array,List,2,2,"Stacks are used for implementing recursion. They use LIFO(Last-In, First-Out) principle to store function calls."
MC,Linked list data structure offers considerable saving in _____________,Computational Time,Space Utilization,Space Utilization and Computational Time,Speed Utilization,3,2,Linked list data structure offers considerable saving in Space Utilization.
MC,Which of the following points is/are not true about Linked List data structure when it is compared with an array?,Arrays have better cache locality that can make them better in terms of performance,It is easy to insert and delete elements in Linked List,Random access is not allowed in a typical implementation of Linked Lists,Access of elements in linked list takes less time than compared to arrays,4,4,"Linked Lists are dynamic, allowing easy insertion/deletion, but random access is slow due to sequential traversal. Arrays offer better cache locality and faster random access."
MC,"What does the following function do for a given Linked List with first node as head? ""void fun1(struct node* head){    if(head == NULL)    return;    fun1(head->next);    printf(""%d  "", head->data);}""",Prints all nodes of linked lists,Prints all nodes of linked list in reverse order,Prints alternate nodes of Linked List,Prints alternate nodes in reverse order,2,2,The function prints the nodes of the linked list in reverse order because it recursively calls itself on the next node and then prints the current node's data.
MC,Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?,Insertion Sort,Quick Sort,Heap Sort,Merge Sort,4,4,"Merge Sort can be applied to linked lists with minimal time complexity, O(n log n),  because it doesn't require random access; the algorithm's inherent divide-and-conquer approach makes it suitable for linked lists."
MC,Which of the following is not a disadvantage to the usage of array?,Fixed size,There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size,Insertion based on position,Accessing elements at specified positions,4,4,Accessing elements at specified positions is not a disadvantage. Arrays are well-suited for fast access using indices.
MC,What is the time complexity of inserting at the end in dynamic arrays?,O(1),O(n),O(logn),Either O(1) or O(n),4,4,"Inserting at the end of a dynamic array usually takes O(1) time, but can be O(n) if resizing is needed,"
MC,What is the time complexity to count the number of elements in the linked list?,O(1),O(n),O(logn),O(n2),2,2,"To count elements in a linked list, you traverse the entire list once.  This means the time complexity is O(n),"
MC,What is the space complexity for deleting a linked list?,O(1),O(n),Either O(1) or O(n),O(logn),1,1,"Deleting a linked list involves traversing the list once to find the node to be deleted, which takes linear time. This means the space complexity is O(1) because it doesn't depend on the size of the input."
MC,Which of these is not an application of a linked list?,To implement file systems,For separate chaining in hash-tables,To implement non-binary trees,Random Access of elements,4,4,"Random Access of elements is not an application of a linked list, because linked lists do not allow direct access to elements."
MC,_________________ operations do not preserve non-matched tuples.,Left outer join,Inner join,Natural join,Right outer join,2,2,Inner join operations do not preserve non-matched tuples.
MC,Which forms have a relation that contains information about a single entity?,4NF,2NF,5NF,3NF,4,1,
MC,The top level of the hierarchy consists of ______ each of which can contain _____.,"Schemas, Catalogs","Schemas, Environment","Environment, Schemas","Catalogs, Schemas",4,3,"The top level of the hierarchy consists of Environments, each of which can contain Schemas."
MC,_______ indicates the maximum number of entities that can be involved in a relationship.,Greater Entity Count,Minimum cardinality,Maximum cardinality,ERD,3,3,Maximum cardinality indicates the maximum number of entities that can be involved in a relationship.
MC,"Why the following statement is erroneous? {SELECT dept_name, ID, avg (salary)FROM instructorGROUP BY dept_name;}",Dept_id should not be used in group by clause,Group by clause is not valid in this query,Avg(salary) should not be selected,None,1,4,The query is erroneous because the ID column should not be part of the SELECT statement.
MC,Which of the following is not the utility of DBMS?,Backup,Data Loading,Process Organization,File organization,3,4,"DBMS does not deal with file organization.  DBMS handles data loading, backup, and process organization."
MC,For designing a normal RDBMS which of the following normal form is considered adequate?,4NF,3NF,2NF,5NF,2,2,"For designing a normal RDBMS, 3NF is considered adequate.  It eliminates redundant data and ensures data integrity."
MC,"__________ command is used in SQL to issue multiple CREATE TABLE, CREATE VIEW and GRANT statements in a single transaction.",CREATE CLUSTER,CREATE PACKAGE,CREATE SCHEMA,All of the mentioned,3,3,"CREATE SCHEMA command is used to issue multiple CREATE TABLE, CREATE VIEW, and GRANT statements in a single transaction,"
MC,A table is in BCNF if it is in 3NF and if every determinant is a ___________ key.,Dependent,Normal,Candidate,Both Normal and Candidate,3,3,A table is in BCNF if it is in 3NF and if every determinant is a candidate key.
MC,A table is in 3NF if it is in 2NF and if it has no ____________,Functional Dependencies,Transitive Dependencies,Trivial Functional Dependency,Multivalued Dependencies,2,2,"A table is in 3NF if it is in 2NF and if it has no Transitive Dependencies,"
MC,Every constraint on the table is a logical consequence of the table?s,Fourth normal form,Fifth normal form,Domain/key normal form,None of the Mentioned,3,3,"Every constraint on the table is a logical consequence of the table's Domain/key normal form,"
MC,"Anomalies are avoided by splitting the offending relation into multiple relations, is also known as",Accupressure,Decomposition,Precomposition,Both Decomposition and Precomposition,2,2,"Anomalies are avoided by splitting the offending relation into multiple relations, is also known as decomposition,"
MC,"Every time attribute A appears, it is matched with the same value of attribute B, but not the same value of attribute C. Therefore, it is true that:",A -> B,A -> C,"A -> (B,C)","(B,C) -> A",1,3,"Attribute A is always associated with a specific B value, but a different C value each time. Therefore, A is linked to both B and C, independently, and the correct answer is the relationship of A to both B and C,"
MC,"When the values in one or more attributes being used as a foreign key must exist in another set of one or more attributes in another table, we have created a(n):",Transitive Dependency,Insertion Anomaly,Referential Integrity Constraint,Normal Form,3,3,"When values in a foreign key must match values in another table's primary key, it creates a Referential Integrity Constraint."
MC,Which of the following is not a restriction for a table to be a relation?,The cells of the table must contain a single value,All of the entries in any column must be of the same kind,The columns must be ordered,No two rows in a table may be identical,3,3,"The columns must be ordered is not a restriction for a table to be a relation. Relations can be represented with unordered columns,"
MC,Which of the following gives a logical structure of the database graphically?,Entity-relationship diagram,Entity diagram,Database diagram,Architectural representation,1,1,An entity-relationship diagram gives a graphical representation of the entities and their relationships in a database.
MC,The entity relationship set is represented in E-R diagram as,Double diamonds,Undivided rectangles,Dashed lines,Diamond,4,3,"The entity relationship set is represented in E-R diagram as dashed lines,"
MC,The Rectangles divided into two parts represents,Entity set,Relationship set,Attributes of a relationship set,Primary key,1,1,"The Rectangles divided into two parts represents Entity set,"
MC,Consider a directed line(->) from the relationship set advisor to both entity sets instructor and student. This indicates _________ cardinality,One to many,One to one,Many to many,Many to one,2,1,"The relationship indicates that one advisor can advise multiple instructors and multiple students. This signifies a one-to-many cardinality,"
MC,We indicate roles in E-R diagrams by labeling the lines that connect ___________ to __________,"Diamond , diamond","Rectangle, diamond","Rectangle, rectangle","Diamond, rectangle",4,2,We indicate roles in E-R diagrams by labeling the lines that connect rectangle to diamond.
MC,An entity set that does not have sufficient attributes to form a primary key is termed a __________,Strong entity set,Variant set,Weak entity set,Variable set,3,3,"A weak entity set, lacking sufficient attributes for a primary key, depends on a strong entity set."
MC,"For a weak entity set to be meaningful, it must be associated with another entity set, called the",Identifying set,Owner set,Neighbour set,Strong entity set,1,4,"For a weak entity set to be meaningful, it must be associated with another entity set, which is the strong entity set that determines the primary key of the weak entity set."
MC,Weak entity set is represented as,Underline,Double line,Double diamond,Double rectangle,4,2,"Weak entity set is represented as a double-line,"
MC,"If you were collecting and storing information about your music collection, an album would be considered a(n) _____",Relation,Entity,Instance,Attribute,2,3,"An album is an instance of a music collection, a specific example of a type of music."
MC,What term is used to refer to a specific record in your music database; for instance; information stored about a specific album?,Relation,Instance,Table,Column,2,2,"Instance is used to refer to a specific record,"
MC,Does RDBMS have ACID properties?,Follows ACID properties,Doesn't follow ACID properties,Depends on the data stored in the database,Can't say,3,1,RDBMS typically follows ACID properties for data consistency and reliability.
MC,What is a relation in RDBMS?,Key,Table,Row,Data Types,2,2,"A relation in RDBMS is a table,"
MC,Dynamic hashing allows us to?,Accommodate the growth of the database,Accommodate the shrinkage of the database,Allows modification of hash function,All of the mentioned,4,4,Dynamic hashing allows us to accommodate the growth and shrinkage of the database.  It does not allow modification of the hash function.
MC,Which of the following constraints RDBS doesn?t check before creating the tables?,Not null,Primary keys,Data Structure,Data integrity,3,4,Data integrity is a broad concept and isn't a constraint directly checked by RDBMS before table creation.
MC,Which of the following is the correct option for the given query? {SELECT DISTINCT name FROM RDBMSWHERE ID IS NOT NULL;},The query gives all the possible RDBMS names where a finite value exists for ID,The query gives the RDBMS names where a finite value exists for ID and it excludes identical names,The query gives the names of the RDBMS that have a null ID and it also excludes identical names,The query is syntactically wrong,2,1,"The query gives all the possible RDBMS names where a finite value exists for ID,"
MC,Which of the following is the correct output for the given query? {(SELECT databaseid FROM RDBMS  WHERE SECTION = 'c') EXCEPT (SELECT databaseid FROM RDBMS WHERE id < 10);},All the values of the databaseid for which section is c and id > 10,All the values of the databaseid for which section not c and id > 10,All the values of the databaseid for which section is c and id < 10,All the values of the databaseid for which section not c and id < 10,1,1,The query finds database IDs where the section is 'c' and the id is greater than 10.
MC,Which of the following commands do we use to delete a relation (RDBMS) from a database?,delete table RDBMS,drop table RDBMS,delete from RDBMS,drop relation RDBMS,2,2,The correct command to delete a relation (table) from a database is 'drop table'.
MC,"If RDBMS1, RDBMS2, RDBMS3 are attributes in a relation and S is another relation, which of the following is an incorrect specification of an integrity constraint?","foreign key(RDBMS1, RDBMS2)","foreign key(RDBMS1, RDBMS2) references S","primary key(RDBMS1, RDBMS2, RDBMS3)",primary key(RDBMS1),1,1,"If RDBMS1, RDBMS2, RDBMS3 are attributes in a relation and S is another relation, a foreign key cannot be defined without a corresponding table.  foreign key(RDBMS1, RDBMS2) references S is incorrect because it needs to reference a column in the relation S to be a valid constraint. ,"
MC,Which of the following is the time of temporal data that record when a fact was recorded in a database?,Enter time,Exit time,Valid time,Transaction time,4,4,Transaction time is the time when a fact was recorded in a database.
MC,________ deletes a data item from a database.,Insert(RDBMS),Drop(RDBMS),Delete(RDBMS),None of the mentioned,3,3,The DELETE statement deletes data from a table.
MC,Which of the following is a good database management practice?,Adding redundant attributes,Not specifying primary keys,Removing redundant attributes,None of the mentioned,3,3,Removing redundant attributes is a good database management practice to avoid data redundancy and inconsistencies.
MC,What is an Instance of a Database?,The state of the database system at any given point of time,The entire set of attributes of the Database put together in a single relation,The initial values inserted into the Database immediately after its creation,The logical design of the database system,1,1,"The state of the database system at any given point of time,"
MC,"If the database modifications occur while the transaction is still active, the transaction is said to use the __________ modification technique",Immediate,Deferred,More than one of the mentioned,None of the mentioned,1,1,"If database modifications occur while the transaction is still active, the transaction is said to use the immediate modification technique."
MC,If a transaction does not modify the database until it has committed it is said to use a _______ modification technique,Immediate,Deferred,More than one of the mentioned,None of the mentioned,2,2,Deferred modification technique ensures a transaction does not affect the database until it commits.
MC,The dependency rules specified by the database designer are known as _______,Functional dependencies,Designer dependencies,Database rules,None of the mentioned,1,1,"Functional dependencies are the dependency rules specified by the database designer, which specify how data values in one table column depend on data values in another table column."
MC,What does the following query do? {UPDATE student SET marks = marks*1.10;},It decreases the marks of all the students by 90%,It increases the marks of all the students by 10%,It is syntactically wrong,It increases the marks of all the students by 110%,2,2,It increases the marks of all students by 10%.
MC,"Observe the given SQL query and choose the correct option.{SELECT database_name, RDBMS (DISTINCT bankuser_name) FROM depositor, account WHERE depositor.account_number = account.account_number GROUP BY branch_id}",The query is syntactically correct and gives the correct answer,The query is syntactically wrong,The query is syntactically correct but gives the wrong answer,The query contains one or more wrongly named clauses,2,2,The query is syntactically wrong.  It is missing the bankuser_name column from the GROUP BY clause.
MC,"for each tuple tr in r do begin {FOR each tuple ts IN s do BEGIN test pair (tr , ts ) TO see IF they satisfy the JOIN condition _ IF they do, ADD tr ??ts TO the RESULT; END END} What type of join is this?",Block nested loop join,Nested loop join,Hash join,Equi join,2,2,"Nested loop join is a join algorithm that iterates through each tuple in one relation and compares it to every tuple in another relation. This algorithm is simple to implement and understand but can be inefficient for large relations. The given code snippet describes the nested loop join algorithm where the algorithm iterates through each tuple in the first relation r and compares it to each tuple in the second relation s to check if the tuples satisfy the join condition, if they do the resulting tuple is added to the result. This is a classic nested-loop join algorithm,"
MC,Which product is returned in a join query have no join condition:,Equijoins,Cartesian,Both Equijoins and Cartesian,None of the mentioned,2,2,"A cartesian product or cartesian join is a join query without a join condition, returning all possible combinations of rows from both tables."
MC,Which is a join condition contains an equality operator:,Equijoins,Cartesian,Both Equijoins and Cartesian,None of the mentioned,1,1,Equijoins are join conditions that use an equality operator to match rows from two tables based on a common attribute.
MC,Which join refers to join records from the write table that have no matching key in the left table are include in the result set:,Left outer join,Right outer join,Full outer join,Half outer join,2,2,Right outer join includes records from the right table that have no matching key in the left table.
MC,Which operation are allowed in a join view:,UPDATE,INSERT,DELETE,All of the mentioned,4,4,No DML operations are allowed on a join view.
MC,Which view that contains more than one table in the top-level FROM clause of the SELECT statement:,Join view,Datable join view,Updatable join view,All of the mentioned,3,1,A join view contains multiple tables in the FROM clause of the SELECT statement.
MC,Which of the following is a fundamental operation in relational algebra?,Set intersection,Natural join,Assignment,None of the mentioned,4,1,"Set intersection and natural join are fundamental operations in relational algebra. Assignment, while useful, is not a fundamental operation."
MC,"The ___________ operation, denoted by - allows us to find tuples that are in one relation but are not in another.",Union,Set-difference,Difference,Intersection,2,2,"The set-difference operation, denoted by -, allows us to find tuples that are in one relation but are not in another."
MC,Which is a unary operation:,Selection operation,Primitive operation,Projection operation,Generalized selection,4,2,"A unary operation operates on a single relation, whereas a binary operation operates on two relations. Primitive operations are unary operations. Generalized selection is a selection operation that can handle more complex conditions."
MC,"In precedence of set operators, the expression is evaluated from",Left to left,Left to right,Right to left,From user specification,2,2,"In precedence of set operators, the expression is evaluated from left to right,"
MC,Which of the following is not outer join?,Left outer join,Right outer join,Full outer join,All of the mentioned,4,4,4. All of the mentioned are outer joins.
MC,"An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A.This is called as",One-to-many,One-to-one,Many-to-many,Many-to-one,2,2,"This describes a one-to-one relationship between entities in A and B, where each entity in one set corresponds to exactly one entity in the other set."
MC,"An entity in A is associated with at most one entity in B. An entity in B, however, can be associated with any number (zero or more) of entities in A.",One-to-many,One-to-one,Many-to-many,Many-to-one,4,1,"An entity in A can be associated with only one entity in B, but an entity in B can have multiple entities in A. This defines a one-to-many relationship."
MC,Data integrity constraints are used to:,Control who is allowed access to the data,Ensure that duplicate records are not entered into the table,Improve the quality of data entered for a specific property,Prevent users from changing the values stored in the table,3,3,Data integrity constraints are used to ensure that data is accurate and consistent.
MC,"Establishing limits on allowable property values, and specifying a set of acceptable, predefined options that can be assigned to a property are examples of:",Attributes,Data integrity constraints,Method constraints,Referential integrity constraints,2,2,Data integrity constraints are used to specify allowable property values and predefined options.
MC,______ is a special type of integrity constraint that relates two relations & maintains consistency across the relations.,Entity Integrity Constraints,Referential Integrity Constraints,Domain Integrity Constraints,Domain Constraints,2,2,Referential Integrity Constraints enforce consistency between related tables by ensuring that foreign keys in one table have corresponding values in the related table.
MC,Which one of the following uniquely identifies the elements in the relation?,Secondary Key,Primary key,Foreign key,Composite key,2,2,A primary key uniquely identifies each row in a table.
MC,Drop Table cannot be used to drop a table referenced by a _________ constraint.,Local Key,Primary Key,Composite Key,Foreign Key,4,4,Foreign key constraints prevent dropping a table if it's referenced by another table.
MC,____________ is preferred method for enforcing data integrity,Constraints,Stored Procedure,Triggers,Cursors,1,1,"Constraints are preferred method for enforcing data integrity as they directly define the rules that data must follow,"
MC,The total participation by entities is represented in E-R diagram as,Dashed line,Double line,Double rectangle,Circle,2,2,"The total participation by entities in an E-R diagram is represented by a double line. This indicates that every entity instance must participate in the relationship. ,"
MC,"Given the basic ER and relational models, which of the following is INCORRECT?",An attribute of an entity can have more than one value,An attribute of an entity can be composite,"In a row of a relational table, an attribute can have more than one value","In a row of a relational table, an attribute can have exactly one value or a NULL value",3,1,"An attribute of an entity can have more than one value is incorrect because in a relational model, each attribute in a table cell has a single value or NULL."
MC,Which of the following indicates the maximum number of entities that can be involved in a relationship?,Minimum cardinality,Maximum cardinality,ERD,Greater Entity Count,2,2,Maximum cardinality indicates the maximum number of entities that can be involved in a relationship.
MC,In E-R diagram generalization is represented by,Ellipse,Dashed ellipse,Rectangle,Triangle,4,2,"Generalization in an E-R diagram is represented by a dashed ellipse,"
MC,What is a relationship called when it is maintained between two entities?,Unary,Binary,Ternary,Quaternary,2,2,A binary relationship is maintained between two entities.
MC,Key to represent relationship between tables is called,Primary key,Secondary Key,Foreign Key,None of the mentioned,3,3,"A foreign key is a key in a table that refers to the primary key in another table. This establishes a relationship between the two tables,"
MC,A window into a portion of a database is,Schema,View,Query,Data dictionary,2,2,"A window into a portion of a database is a View.  It's a specific subset of data, like a virtual table."
MC,We can use the following three rules to find logically implied functional dependencies. This collection of rules is called,Axioms,Armstrong's axioms,Armstrong,Closure,2,2,Armstrong's axioms are a set of inference rules used to deduce functional dependencies in database design. They are used to find logically implied functional dependencies.
MC,Which of the following is not Armstrong's Axiom?,Reflexivity rule,Transitivity rule,Pseudotransitivity rule,Augmentation rule,3,3,Pseudotransitivity rule is not an Armstrong's Axiom. It's a property that sometimes arises from functional dependencies. The other options are axioms of Armstrong's Axioms.
MC,"The relation employee(ID,name,street,Credit,street,city,salary) is decomposed into {employee1 (ID, name), employee2 (name, street, city, salary)} This type of decomposition is called",Lossless decomposition,Lossless-join decomposition,All of the mentioned,None of the mentioned,4,4,"This decomposition does not preserve the original information.  Therefore, it is not a lossless-join decomposition."
MC,"Inst_dept (ID, name, salary, dept name, building, budget) is decomposed into {instructor (ID, name, dept name, salary), department (dept name, building, budget)} This comes under",Lossy-join decomposition,Lossy decomposition,Lossless-join decomposition,Both Lossy and Lossy-join decomposition,4,1,This decomposition can lead to data loss as the original table can't be reconstructed from the decomposed tables.
MC,There are two functional dependencies with the same set of attributes on the left side of the arrow:,A->BC,A->B,B->C,None of the mentioned,1,1,"There are two functional dependencies with the same set of attributes on the left side of the arrow:  1. A->BC  2. A->B. The functional dependency A->BC can be decomposed into A->B and A->C. Thus,  the functional dependency A->B and A->C have the same attributes on the left."
MC,"Consider a relation R(A,B,C,D,E) with the following functional dependencies: {ABC -> DE, D -> AB} The number of superkeys of R is:",2,7,10,12,3,3,"The closure of ABC is ABCDE, and the closure of D is D. Since ABC is a superkey and D is a superkey and each attribute can be combined with another to form superkey, there are 10 superkeys in total."
MC,"Suppose we wish to find the ID's of the employees that are managed by people who are managed by the employee with ID 123. Here are two possible queries: I.{SELECT ee.empID FROM Emps ee, Emps ff WHERE ee.mgrID = ff.empID AND ff.mgrID = 123;} II.{SELECT empID FROM Emps WHERE mgrID IN (SELECT empID FROM Emps WHERE mgrID = 123);} Which, if any, of the two queries above will correctly (in SQL2) get the desired set of employee ID?s?",Both I and II,I only,II only,Neither I nor I,1,3,Query II is correct because it filters the Emps table by the mgrID values returned from the inner query. This inner query finds all empIDs that are managed by employee 123.
MC,"Suppose now that R(A,B) and S(A,B) are two relations with r and s tuples, respectively (again, not necessarily distinct). If m is the number of (not necessarily distinct) tuples in the result of the SQL query: {R intersect S;} Then which of the following is the most restrictive, correct condition on the value of m?","m = min(r,s)",0 <= m <= r + s,"min(r,s) <= m <= max(r,s)","0 <= m <= min(r,s)",4,4,"If R and S are relations with r and s tuples respectively, the intersection (R intersect S) will contain at most the minimum number of tuples from both relations. Therefore, the most restrictive condition on m (number of tuples in the intersection) is 0 <= m <= min(r,s)."
MC,"Suppose relation R(A,B,C,D,E) has the following functional dependencies: {A -> B, B -> C, BC -> A, A -> D, E -> A, D -> E}",A,E,"B, C",None of the mentioned,4,1,"Given the functional dependencies, A determines B, and B determines C, implying BC functionally determines A. This creates a cycle, meaning A can be determined by B and C, which in turn can be determined by A. E determines A, and D determines E. The closure of A includes B, C, D, and E; similarly, the closure of E includes A, B, C, D, E. Hence A functionally determines B, C, D, and E, and E functionally determines A, B, C, and D. Thus, A is the key, and therefore the correct answer is A."
MC,Which of the following is an attribute that can uniquely identify a row in a table?,Secondary key,Candidate key,Foreign key,Alternate key,2,2,A candidate key is an attribute or set of attributes that can uniquely identify a row in a table.
MC,Which of the following terms does refer to the correctness and completeness of the data in a database?,Data security,Data constraint,Data independence,Data integrity,4,4,Data integrity refers to the accuracy and consistency of data in a database.
MC,The relationship between DEPARTMENT and EMPLOYEE is a,One-to-one relationship,One-to-many relationship,Many-to-many relationship,Many-to-one relationship,2,2,"A department can have many employees, and an employee belongs to only one department, hence a one-to-many relationship."
MC,A table can be logically connected to another table by defining a,Super key,Candidate key,Primary key,Unique key,3,3,A primary key is used to logically connect tables.
MC,"If the state of the database no longer reflects a real state of the world that the database is supposed to capture, then such a state is called",Consistent state,Parallel state,Durable state,Inconsistent state,4,4,"If the database state doesn't match the real world, it's inconsistent."
MC,Ensuring isolation property is the responsibility of the,Recovery-management component of the DBMS,Concurrency-control component of the DBMS,Transaction-management component of the DBMS,Buffer management component in DBMS,2,2,Concurrency-control component of the DBMS ensures isolation property by managing concurrent transactions.
MC,Which of the following is a NoSQL Database Type?,SQL,Document databases,JSON,All of the mentioned,2,2,"Document databases are a type of NoSQL database, which are not relational."
MC,Point out the wrong statement.,Non Relational databases require that schemas be defined before you can add data,NoSQL databases are built to allow the insertion of data without a predefined schema,NewSQL databases are built to allow the insertion of data without a predefined schema,All of the mentioned,1,1,Non Relational databases require that schemas be defined before you can add data. NewSQL databases are built to allow the insertion of data without a predefined schema.
MC,"""Sharding"" a database across many server instances can be achieved with _______________",LAN,SAN,MAN,All of the mentioned,2,2,Sharding a database involves distributing data across multiple servers.  A SAN (Storage Area Network) is commonly used for this.
MC,Most NoSQL databases support automatic __________ meaning that you get high availability and disaster recovery.,processing,scalability,replication,all of the mentioned,3,3,Most NoSQL databases support automatic replication meaning that you get high availability and disaster recovery.
MC,Which of the following are the simplest NoSQL databases?,Key-value,Wide-column,Document,All of the mentioned,1,1,"Key-value stores are the simplest NoSQL databases, storing data as key-value pairs."
MC,"________ stores are used to store information about networks, such as social connections.",Key-value,Wide-column,Document,Graph,4,4,"Graph stores are specialized for network data, storing relationships between entities."
MC,NoSQL databases is used mainly for handling large volumes of ______________ data.,unstructured,structured,semi-structured,all of the mentioned,1,1,"NoSQL databases are designed for handling large volumes of unstructured data,"
MC,What does the BCNF decomposition algorithm do?,States a method to decompose a relation satisfying BCNF,States a method for joining two relations satisfying BCNF,States a method to decompose a relational schema such that there are no multiple occurrences,None of the mentioned,1,1,"The BCNF decomposition algorithm states a method to decompose a relation satisfying BCNF,"
MC,The 3NF decomposition algorithm is also called as _______,3NF normal algorithm,3NF synthesis algorithm,3NF generator,Functional dependence algorithm,2,2,"The 3NF decomposition algorithm is used to decompose a table into multiple tables to remove redundancy and dependency issues, so the answer isn't a normal algorithm or generator. It's based on functional dependencies, not a synthesis approach."
MC,Which of the following is desirable in a database design with functional dependencies?,BCNF,Losslessness,Dependency preservation,All of the mentioned,4,4,"A database design with functional dependencies should be in BCNF to avoid update anomalies and ensure data integrity.  Losslessness ensures that the decomposition does not lose information, and dependency preservation guarantees that the decomposed relations retain the functional dependencies of the original relation.  All of these properties are desirable"
MC,The _______ is a set of all functional and multi values dependencies implied by a set of functional dependencies,Star,Closure,Derivation,Evolution,2,2,"The closure of a set of functional dependencies is a set of all functional and multi-valued dependencies implied by those dependencies,"
MC,A functional dependency f on R is _______ by a set of functional dependencies F on r if every instance of r(R) that satisfies f also satisfies F.,Logically Defined,Logically Derived,Logically implied,None of the mentioned,3,3,A functional dependency f on R is logically implied by a set of functional dependencies F on R if every instance of r(R) that satisfies f also satisfies F.
MC,"If F is a set of functional dependencies, then the closure of F is denoted by?",F*,Fo,F+,F,3,3,"If F is a set of functional dependencies, then the closure of F is denoted by F+."
MC,"If a functional dependency is reflexive, B is a subset of A and A is the set of attributes, then",B->A holds,A->B holds,AB->C holds,None of the mentioned,2,2,"If a functional dependency is reflexive, B is a subset of A, and A is the set of attributes, then A->B holds. This is because every attribute in B is also in A, meaning B is functionally determined by A."
MC,"If A->B, A-> C then which of the following is true?",A->BC,A->B,A->C,All of the mentioned,4,1,"If A implies B and A implies C, then A implies the conjunction of B and C (A->BC)."
MC,"If B is an attribute and A->B, Then B is said to be ________ by a.",Logically implied,Functionally implied,Logically determined,Functionally determined,4,4,"Functionally determined by A,"
MC,We say that a decomposition having the property F'+ = F+ is a __________ decomposition.,Dependency losing,Dependency preserving,Lossless,None of the mentioned,2,2,A decomposition having the property F'+ = F+ is a dependency preserving decomposition.
MC,"A _________ Fc for F is a set of dependencies such that F logically implies all dependencies in Fc, and Fc logically implies all dependencies in F.",Canonical cover,Complete cover,Canonical dependency,Canonical clause,1,2,"A Complete cover for F is a set of dependencies such that F logically implies all dependencies in Fc, and Fc logically implies all dependencies in F."
MC,Which data structure is needed to convert infix notation to postfix notation?,Tree,Hashing,Stack,Queue,3,3,Stack is used to store operators.
MC,What data structure would you most likely see in the non-recursive implementation of a recursive algorithm?,Stack,Linked List,Tree,Queue,1,4,"A queue is a common data structure used in non-recursive implementations of recursive algorithms, enabling the execution of tasks in a first-in, first-out (FIFO) manner, mimicking the order of function calls."
MC,"In a linked list, each node contains a minimum of two fields. One field is the data field; the second field is?",Pointer to character,Pointer to integer,Pointer to node,Node,3,3,"The second field is a pointer to the next node in the list, enabling traversal."
MC,Which of the following real-world scenarios would you associate with a stack data structure?,Piling up of chairs,People standing in a line,Offer services based on priority,Tatkal Ticket Booking in IRCTC,1,1,"Piling up of chairs is a perfect example of a stack, where the last item added is the first one removed."
MC,What does 'stack underflow' refer to?,Accessing item from an undefined stack,Adding items to a full stack,Removing items from an empty stack,Index out of bounds exception,3,3,"Removing items from an empty stack,"
MC,Array implementation of a stack is not dynamic. Which of the following statements supports this argument?,Space allocation for array is fixed,User unable to give input for stack ops,A runtime exception halts execution,Improper program compilation,1,1,1. Space allocation for array is fixed. Array implementation of a stack has a pre-defined size.
MC,"In linked list implementation of a queue, where does a new element get inserted?",At the head of link list,At the center position in the link list,At the tail of the link list,At any position in the linked list,3,3,"In a linked list implementation of a queue, a new element is inserted at the tail of the linked list."
MC,"In a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into a NONEMPTY queue?",Only front pointer,Only rear pointer,Both front and rear pointer,No pointer will be changed,2,2,"Only rear pointer will change during an insertion in a non-empty queue, as insertion is always at the rear."
MC,"In a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into an EMPTY queue?",Only front pointer,Only rear pointer,Both front and rear pointer,No pointer will be changed,3,3,"During insertion into an empty queue, both the front and rear pointers will be updated to point to the new element."
MC,"In linked list implementation of a queue, from where is the item deleted?",At the head of link list,At the center position in the link list,At the tail of the link list,Node before the tail,1,1,"In a linked list implementation of a queue, the item is deleted from the head of the linked list. This is because a queue follows the FIFO (First-In, First-Out) principle, and the first element inserted is the first one to be removed."
MC,"In a queue, the important condition for a queue to be empty is?",FRONT is null,REAR is null,LINK is empty,FRONT==REAR-1,1,1,"In a queue, the important condition for a queue to be empty is FRONT is null."
MC,The elements of a linked list are stored,In a structure,In an array,Anywhere the computer has space for them,In contiguous memory locations,3,3,The elements of a linked list are stored anywhere the computer has space for them.
MC,The type of expression in which the operator succeeds its operands is?,Infix Expression,Prefix Expression,Postfix Expression,Both Prefix and Postfix Expressions,3,3,Postfix expressions are expressions in which the operator appears after its operands.
MC,"In infix to postfix conversion algorithm, the operators are associated from?",Right to left,Left to right,Center to left,Center to right,2,2,"In infix to postfix conversion, operators are associated from left to right.  This means that operators with the same precedence are evaluated from left to right."
MC,What is a hash table?,A structure that maps values to keys,A structure that maps keys to values,A structure used for storage,A structure used to implement stack and queue,2,2,"A hash table is a data structure that maps keys to values. It is used to store and retrieve data efficiently,"
MC,What is direct addressing?,Distinct array position for every possible key,Fewer array positions than keys,Fewer keys than array positions,Same array position for all keys,1,1,Direct addressing uses a distinct array position for every possible key.
MC,What is a hash function?,A function has allocated memory to keys,A function that computes the location of the key in the array,A function that creates an array,A function that computes the location of the values in the array,2,2,"A hash function computes an index into an array based on an input value, enabling fast data retrieval."
MC,Which of the following is not a technique to avoid a collision?,Make the hash function appear random,Use the chaining method,Use uniform hashing,Increasing hash table size,4,4,"Increasing the hash table size is one way to avoid collisions, but it does not directly relate to how the hash function works."
MC,What is the advantage of the hash table over a linked list?,Faster access of data,Easy to implement,Very efficient for less number of entries,Exhibit good locality of reference,1,1,"Hash tables offer faster data access compared to linked lists due to their direct addressing method,"
MC,Which of the following trait of a hash function is most desirable?,It should cause less collisions,It should cause more collisions,It should occupy less space,It should be easy to implement,1,1,"A hash function with fewer collisions is more desirable because it leads to faster lookups and better performance in data structures that use hashing, such as hash tables."
MC,What is the hash function used in the division method?,h(k) = k/m,h(k) = k mod m,h(k) = m/k,h(k) = m mod k,2,2,"The division method uses the modulo operator to map keys to slots, where h(k) = k mod m."
MC,Which of the following schemes does quadratic probing come under?,Rehashing,Extended hashing,Separate chaining,Open addressing,4,4,"Quadratic probing is a form of open addressing,"
MC,Which among the following is the best technique to handle collision?,Quadratic probing,Linear probing,Double hashing,Separate chaining,1,3,Double hashing is the best technique to handle collision as it reduces clustering and avoids primary clustering by using a secondary hash function.
MC,What is the formula used in quadratic probing?,Hash key = key mod table size,Hash key=(hash(x)+F(i)) mod table size,Hash key=(hash(x)+F(i2)) mod table size,H(x) = x mod 17,3,3,"The formula used in quadratic probing is Hash key=(hash(x)+F(i2)) mod table size, where i is the probe number and F(i2) is a quadratic function of i,"
MC,What is the hash function used in Double Hashing?,(h1(k) - i*h2(k))mod m,h1(k) + h2(k),(h1(k) + i*h2(k))mod m,(h1(k) + h2(k))mod m,3,1,"(h1(k) - i*h2(k))mod m,"
MC,Which of the following is not a collision resolution technique?,Separate chaining,Linear probing,Quadratic probing,Extendible hashing,4,4,"Extendible hashing is not a collision resolution technique, the others are methods used in hash tables to handle collisions when multiple keys map to the same index."
MC,Which of the following operations are done in a hash table?,Insert only,Search only,Insert and search,Replace,3,3,"Hash tables support both insertion and searching operations, and also allow for replacement."
MC,Which of the following is identical to that of a separate chaining hash node?,Linked list,Array,Stack,Queue,1,1,A separate chaining hash node is a linked list.
MC,Which of the following is a disadvantage of using separate chaining using linked lists?,It requires many pointers,It requires linked lists,It uses array,It does not resolve collision,1,1,"1. It requires many pointers, leading to increased memory consumption."
MC,What is a skip list?,A linked list with size value in nodes,A linked list that allows faster search within an ordered sequence,A linked list that allows slower search within an ordered sequence,A tree which is in the form of linked list,2,2,"A skip list is a linked list that allows faster search within an ordered sequence,"
MC,The nodes in a skip list may have many forward references. Their number is determined,Probabilistically,Randomly,Sequentially,Orthogonally,1,1,"The number of forward references in a skip list node is determined probabilistically, using random choices,"
MC,Which of the following is an advantage of open addressing over separate chaining?,It is simpler to implement,Table never gets full,It is less sensitive to hash function,It has better cache performance,1,1,Open addressing is simpler to implement than separate chaining.
MC,How many children does a binary tree have?,2,Any number of children,0 or 1 or 2,0 or 1,3,3,"A binary tree can have 0, 1, or 2 children. Each node can have at most two children, which are called the left child and the right child."
MC,"To represent hierarchical relationship between elements, Which data structure is suitable?",Queue,Stack,Tree,Graph,3,3,"To represent hierarchical relationships, a tree data structure is most suitable, as it naturally models parent-child connections."
MC,What is/are the disadvantages of implementing tree using normal arrays?,Difficulty in knowing children nodes,Difficulty in finding the parent of a node,Have to know the maximum number of nodes before creation of trees,Difficult to implement,3,1,Implementing trees with normal arrays makes it hard to find parent nodes and children.  You also need to know the maximum number of nodes beforehand.
MC,Advantages of linked list representation of binary trees over arrays?,Dynamic size,Ease of insertion/deletion,Ease in randomly accessing a node,Both dynamic size and ease in insertion/deletion,4,4,Linked lists offer dynamic sizing and easier insertion/deletion compared to arrays.
MC,Disadvantages of linked list representation of binary trees over arrays?,Randomly accessing is not possible,Extra memory for a pointer is needed,Difficulty in deletion,Random access is not possible and extra memory with every element,4,4,"Disadvantages of linked list representation of binary trees over arrays include needing extra memory for pointers with each node, making random access impossible."
MC,"If binary trees are represented in arrays, what formula can be used to locate a left child, if the parent node has an index i?",2i+1,2i+2,i+1,i+2,1,1,"To find the left child of a node at index i in a binary tree represented as an array, the formula 2i + 1 is used."
MC,Using what formula can a parent node be located in an array?,(i+1)/2,(i-1)/2,i/2,2i/2,2,3,"Using the index of a child node, the parent node's index can be approximately determined by dividing the child's index by two."
MC,Which of the following properties are obeyed by all three tree - traversals?,Left subtrees are visited before right subtrees,Right subtrees are visited before left subtrees,Root node is visited before left subtree,Root node is visited before right subtree,1,3,"Property 3 is obeyed by all three tree traversals, as the root node is visited before the left subtree. In preorder traversal, the root is visited first, then left, then right. In inorder traversal, the left subtree is visited first, then the root, then the right subtree. In postorder traversal, the left subtree is visited first, then the right subtree, and finally the root."
MC,"A binary search tree contains values 7, 8, 13, 26, 35, 40, 70, 75. Which one of the following is a valid post-order sequence of the tree provided the pre-order sequence as 35, 13, 7, 8, 26, 70, 40 and 75?","7, 8, 26, 13, 75, 40, 70, 35","26, 13, 7, 8, 70, 75, 40, 35","7, 8, 13, 26, 35, 40, 70, 75","8, 7, 26, 13, 40, 75, 70, 35",4,4,"Post-order traversal visits the left subtree, then the right subtree, and then the root. Given the pre-order sequence 35, 13, 7, 8, 26, 70, 40, 75, and considering that the tree is a binary search tree.The correct post-order sequence is 8, 7, 26, 13, 40, 75, 70, 35."
MC,"In a binary search tree, which of the following traversals would print the numbers in the ascending order?",Level-order traversal,Pre-order traversal,Post-order traversal,In-order traversal,4,4,In-order traversal visits nodes in ascending order.
MC,What is a full binary tree?,Each node has exactly zero or two children,Each node has exactly two children,All the leaves are at the same level,Each node has exactly one or two children,1,1,A full binary tree is a tree in which each node has either zero or two children.
MC,What is a complete binary tree?,Each node has exactly zero or two children,"A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from right to left","A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from left to right",A tree in which all nodes have degree 2,3,3,"A complete binary tree is a binary tree which is completely filled, with the possible exception of the bottom level, which is filled from left to right."
MC,Which of the following is false about a binary search tree?,The left child is always lesser than its parent,The right child is always greater than its parent,The left and right sub-trees should also be binary search trees,In order sequence gives decreasing order of elements,4,4,"In a binary search tree, the left subtree contains values less than the parent, and the right subtree contains values greater than the parent.  Left and right subtrees must also be binary search trees.  The inorder traversal gives a sorted (increasing) order of elements, not decreasing."
MC,What is the main characteristic of a B Tree?,Each node has a variable number of children within a specified range,Nodes are arranged in a binary structure,Tree height is logarithmic in the number of elements,All nodes store the same number of keys,1,1,A B-tree's key characteristic is that each node contains a variable number of children within a specified range.
MC,"In a B Tree, what property does the order m define?",Maximum number of children a node can have,Maximum height of the tree,Maximum number of keys a node can have,Maximum number of nodes in the tree,1,1,The order m in a B-Tree defines the maximum number of children a node can have.
MC,Which of the following operations can be performed efficiently using a B Tree?,Multiplication of sparse matrices,"Insertion, deletion, and search of keys in a database",Finding the shortest path in a graph,Balancing a binary search tree,2,2,"B Trees are optimized for searching, inserting, and deleting data. They excel at tasks like database operations, where frequent key lookups are needed."
MC,What is a significant advantage of using B Trees in database systems?,They require less memory than binary search trees,They ensure minimal disk I/O operations,They do not require balancing,They can store any type of data without conversion,2,2,"B-Trees minimize disk access by structuring data for efficient retrieval,"
MC,How do B+ Trees differ from B Trees?,"B+ Trees are binary trees, while B Trees are multi-way trees","In B+ Trees, all keys are stored in leaf nodes and internal nodes act as routing guides","B+ Trees do not allow duplicates, while B Trees do","B+ Trees have a fixed height, while B Trees have variable height",2,2,"B+ Trees store all keys in leaf nodes, with internal nodes guiding search, differing from B-Trees that may store keys in internal nodes."
MC,What is the advantage of B+ Trees over B Trees in terms of range queries?,B+ Trees require fewer comparisons for range queries,B+ Trees provide faster access to individual keys,"Leaf nodes of B+ Trees are linked, providing efficient full-range scans","B+ Trees have a simpler structure, making range queries more straightforward",3,3,"B+ Trees' linked leaf nodes enable efficient full-range scans, making range queries faster."
MC,"In a B+ Tree, where are the actual records pointed to by the keys stored?",In every node,Only in root nodes,Only in internal nodes,Only in leaf nodes,4,4,The actual records are pointed to by the keys stored in the leaf nodes.
MC,Why are B+ Trees preferred in database indexing over B Trees?,B+ Trees provide faster insertion and deletion operations,The linked leaf nodes in B+ Trees make sequential access faster,B+ Trees require less disk space,B+ Trees are easier to implement,2,2,"B+ Trees' linked leaf nodes enable faster sequential access for database queries, crucial for tasks like range searches."
MC,What is the key property of an AVL Tree?,Every node has at most two children,The tree is a complete binary tree,The difference in height between the left and right subtrees of any node is at most 1,All leaf nodes are at the same level,3,3,"The key property of an AVL Tree is that the difference in height between the left and right subtrees of any node is at most 1. This ensures that the tree remains balanced, allowing for efficient search, insertion, and deletion operations."
MC,What is the time complexity of insertion in an AVL Tree?,O(1),O(log n),O(n),O(n log n),2,2,The time complexity of insertion in an AVL tree is O(log n) because AVL trees are self-balancing binary search trees that maintain a balance factor to prevent the worst-case scenario of O(n).
MC,Which of the following operations can cause an AVL Tree to become unbalanced?,Searching for a node,Inserting a node,Traversing the tree,Computing the height of the tree,2,2,"Inserting a node can cause an AVL tree to become unbalanced because it might require rotations to re-establish the balance,"
MC,What mechanism is used to maintain the balance of an AVL Tree after insertion or deletion?,Red-Black balancing,Splay operation,Tree rotations,B-tree splitting,3,3,Tree rotations are used to maintain the balance of an AVL tree after insertion or deletion.
MC,"In the context of AVL Trees, what is a rotation?",Swapping the values of two nodes,Moving a subtree to a different location,Changing the structure of the tree without altering the in-order sequence of elements,Changing the root of the tree,3,3,A rotation in an AVL tree is a restructuring operation performed on the tree to maintain its balance.  It involves moving a subtree to a different location within the tree without altering the in-order sequence of elements.
MC,What is the maximum number of rotations needed to balance an AVL Tree after a single insertion?,1,2,3,4,2,2,The maximum number of rotations needed to rebalance an AVL tree after a single insertion is 2.
MC,How does the height of an AVL Tree compare to the height of a perfectly balanced binary tree?,It is always the same,It can be up to twice as large,"It can be larger, but no more than log n","It can be smaller, but no less than log n",3,1,"AVL trees maintain balance, limiting height to logarithmic, whereas perfectly balanced trees also have a height of log n."
MC,Which of the following is true about the deletion operation in an AVL Tree?,It cannot cause the tree to become unbalanced,It may require rebalancing through rotations,It is always performed without rotations,It is less complex than deletion in a binary search tree,2,2,Deletion in an AVL tree may require rebalancing through rotations to maintain the height-balance property.
MC,What is a distinctive feature of a Red-Black Tree?,Each node is colored either red or black,Each node can have up to three children,The tree is always perfectly balanced,All leaf nodes are at the same depth,1,1,"[Red-Black trees guarantee balanced structure, ensuring logarithmic time complexity for operations like search, insertion, and deletion.  Each node has a color attribute, red or black.],"
MC,Which of these properties must a Red-Black Tree satisfy?,Every red node must have two black child nodes,Every path from a node to its descendant NIL nodes has the same number of black nodes,All leaf nodes are black,All of the above,4,4,All of the above properties must be satisfied by a Red-Black Tree.
MC,What is the time complexity of insertion and deletion operations in a Red-Black Tree?,O(1),O(log n),O(n),O(n log n),2,2,Insertion and deletion operations in a Red-Black Tree have a time complexity of O(log n) because Red-Black trees are self-balancing binary search trees.
MC,What action is performed to maintain the Red-Black properties after an insertion or deletion?,Splitting the tree,Recoloring nodes and performing rotations,Swapping sibling nodes,Converting the tree to a binary search tree and then back to a red-black tree,2,2,Recoloring nodes and performing rotations to maintain the Red-Black properties after an insertion or deletion.
MC,"In a Red-Black Tree, what does the property ""the tree has the same number of black nodes on any path from a node to a descendant leaf"" ensure?",The tree is perfectly balanced,"The tree is height-balanced, with the longest path no more than twice the length of the shortest path",All paths have the same length,The tree is a full binary tree,2,2,"The property ensures the tree is height-balanced, with the longest path no more than twice the length of the shortest path."
MC,Which of the following operations may cause a violation of Red-Black Tree properties?,Searching for a node,Inserting a node,Traversing the tree,Computing the height of the tree,2,2,"Inserting a node may cause a violation of Red-Black Tree properties because it requires rebalancing operations,"
MC,What is the maximum height of a Red-Black Tree with n nodes?,2log?2(n+1),log?2n,n,2n,1,1,"The maximum height of a Red-Black Tree with n nodes is 2log?2(n+1).  This is because a Red-Black Tree is a self-balancing binary search tree, and the height of a balanced binary search tree is logarithmic in the number of nodes."
MC,Why are Red-Black Trees important in computer science?,"They provide a worst-case guarantee for insertion, deletion, and search operations",They are easier to implement than binary search trees,They require less memory than AVL trees,They do not require rebalancing after every insertion or deletion,1,1,"Red-Black trees offer guaranteed logarithmic time complexity for fundamental operations, ensuring efficiency."
MC,What is a Splay Tree?,A tree where recently accessed elements are quick to access again,A perfectly balanced binary search tree,A binary tree with unique height properties,A tree where each node has exactly two children,1,1,"A splay tree is a self-adjusting binary search tree with the property that frequently accessed elements are moved closer to the root, thus improving the average search time."
MC,What is the key operation used in Splay Trees to maintain tree properties?,Splitting,Coloring,Splaying,Rotating,3,3,"The key operation in Splay Trees is Splaying, which restructures the tree to bring frequently accessed nodes closer to the root."
MC,What does the splaying operation in a Splay Tree do?,Moves a node to the root through a series of rotations,Swaps two child nodes,Ensures all leaf nodes are at the same depth,Balances the tree perfectly after every operation,1,1,"Moves a node to the root through a series of rotations,"
MC,"What is the time complexity of search, insert, and delete operations in a Splay Tree in the amortized case?",O(1),O(log n),O(n),O(n log n),2,2,"Splay trees have amortized time complexity of O(log n) for search, insert, and delete operations."
MC,Which of the following scenarios best demonstrates the advantage of a Splay Tree?,When the tree is accessed randomly and there are no frequently accessed nodes,When certain nodes are accessed frequently and need to be accessed quickly,When the tree is used for one-time write and read operations,When the tree requires frequent rebalancing to maintain strict height balance,2,2,"When certain nodes are accessed frequently and need to be accessed quickly, a Splay Tree's self-adjusting nature moves frequently accessed nodes to the top, optimizing future lookups."
MC,What property does a Splay Tree use to ensure that recently accessed elements are quick to access again?,The tree rebalances itself after every operation,Nodes are colored red or black to indicate their access frequency,Frequently accessed nodes are moved closer to the root,Leaf nodes are linked together for faster sequential access,3,3,"Frequently accessed nodes are moved closer to the root,"
MC,"In a Splay Tree, what happens after an element is accessed (searched, inserted, or deleted)?",The tree is left unchanged,The accessed element is moved to the root of the tree,The tree is completely rebuilt,The accessed element is moved to a leaf position,2,2,The accessed element is moved closer to the root of the tree by rotations to optimize future searches.
MC,Why might Splay Trees not be suitable in an environment with parallel or concurrent operations?,"Because the structure of the tree changes frequently, making it hard to predict",Because they are more memory-intensive than other trees,Because splay operations are not thread-safe,Because they do not support concurrent modifications well due to the restructuring after operations,4,4,"Because splay operations require restructuring the tree after each operation, making them unsuitable for concurrent modifications."
MC,Which of the following is true about Depth-First Search (DFS) of a graph?,It traverses by exploring the highest-depth nodes first before backtracking,It can be implemented using a queue data structure,It is used to compute the shortest path in a graph,It can get trapped in loops or cycles if the graph is cyclic and not properly handled,4,1,"DFS traverses the graph depth-wise, exploring as far as possible along each branch before backtracking."
MC,What is the time complexity of Breadth-First Search (BFS) on a graph?,O(V),O(V + E),O(E),O(log V),2,2,"The time complexity of Breadth-First Search (BFS) on a graph is O(V + E), where V is the number of vertices and E is the number of edges.  This is because BFS visits each vertex and edge at most once, leading to a linear time complexity."
MC,"In Breadth-First Search (BFS), which data structure is typically used to hold the nodes that are next to be visited?",Stack,Queue,Priority Queue,Linked List,2,2,"In Breadth-First Search (BFS), a queue is used to store nodes to be visited next, ensuring nodes at the same level are processed before moving to the next level."
MC,Which of the following scenarios is more efficiently solved using Depth-First Search (DFS)?,Finding the shortest path in a weighted graph,Finding connected components in a graph,Finding the minimum spanning tree,Implementing Dijkstra`s algorithm,2,2,Finding connected components in a graph is more efficiently solved using Depth-First Search (DFS). It systematically explores all reachable nodes from a starting point.
MC,What is a key characteristic of Breadth-First Search (BFS)?,It is recursive,It visits nodes as far from the root as possible before backtracking,It can be used to detect cycles in a directed graph,It explores all neighbors of a node before moving on to the next level of nodes,4,4,"BFS explores all neighbors at the current level before moving to the next, making it level-by-level."
MC,In which case would you prefer BFS over DFS?,When you need to find paths with the minimum number of edges,When the graph has cycles and you want to avoid getting trapped,When the solution is likely to be far from the root node,When memory usage is a critical concern,1,3,"When the solution is likely to be far from the root node, BFS is preferred because it explores nodes level by level, ensuring you find the shortest path quickly."
MC,Which of the following statements about graph traversal is FALSE?,BFS can be used to find the shortest path in an unweighted graph,DFS can be implemented both recursively and iteratively,BFS always requires more memory than DFS,"In DFS, if a graph is tree-structured, the traversal visits every edge exactly twice",3,3,"Graph traversal, BFS (Breadth-First Search) finds the shortest path in unweighted graphs, while DFS (Depth-First Search) can be implemented recursively or iteratively.  BFS generally uses more memory than DFS, and DFS on tree structures visits every edge twice.  The statement that BFS always requires more memory than DFS is false.  DFS can require more memory in certain cases."
MC,Which data structure is used to implement a graph using an adjacency list?,Array,Linked List,Hash Table,Tree,2,2,Linked Lists are ideal for representing graph edges in adjacency lists because they allow for dynamic addition and removal of vertices and edges.
MC,"In an adjacency matrix representation of a graph, how is an edge between vertices u and v represented?","By setting the value at position (u, v) to 0","By setting the value at position (u, v) to the weight of the edge or 1 if the graph is unweighted","By incrementing the value at position (u, v)",By inserting the value at the end of the matrix,2,2,"In an adjacency matrix, an edge between vertices u and v is represented by setting the value at position (u, v) to the weight of the edge (or 1 for unweighted graphs)."
MC,What is the time complexity of adding a new edge in the adjacency list representation?,O(1),O(V),O(E),O(V + E),1,1,"Adding a new edge in an adjacency list representation takes O(1) time as it just involves inserting a node in the adjacency list of the vertices involved, which is a constant-time operation."
MC,Which of the following statements is true for a dense graph (a graph where the number of edges is close to the maximum number of edges)?,Adjacency list representation is more space-efficient than adjacency matrix,Adjacency matrix representation is more space-efficient than adjacency list,Adjacency matrix representation takes more time for adding a new edge compared to adjacency list,Adjacency list representation takes more time for checking the existence of an edge compared to adjacency matrix,2,2,"Adjacency matrix representation is more space-efficient for dense graphs because it stores only the existing edges, minimizing wasted space,"
MC,"In an adjacency list representation, what does each index of the array represent?",An edge in the graph,A vertex in the graph,The weight of an edge,The total number of vertices,2,2,"Each index of the array represents a vertex in the graph, and the list at that index contains all vertices adjacent to it."
MC,What is the space complexity of a graph with V vertices and E edges when using an adjacency matrix representation?,O(V),O(E),O(V + E),O(V^2),4,4,"An adjacency matrix uses a VxV matrix to represent connections, so the space complexity is proportional to V squared."
MC,Which representation is generally preferred for graphs with lots of vertices but few edges (sparse graphs)?,Adjacency Matrix,Adjacency List,Both are equally preferable,Neither of them is preferable,2,2,Adjacency List is generally preferred for sparse graphs because it uses less space.
MC,How is a self-loop (an edge that connects a vertex to itself) represented in an adjacency matrix?,"By setting the value at position (u, u) to 0","By setting the value at position (u, u) to 1 or the weight of the edge","By leaving the position (u, u) undefined","By setting the value at position (u, u) to -1",2,2,"A self-loop is represented by setting the value at position (u, u) to 1 or the weight of the edge."
MC,What is the average time complexity of Quick Sort?,O(n^2),O(n log n),O(log n),O(n),2,2,Quick Sort has an average time complexity of O(n log n) because it divides the input array into smaller sub-arrays recursively.
MC,What is the worst-case time complexity of Quick Sort?,O(n^2),O(n log n),O(log n),O(n),1,1,"In the worst-case scenario, QuickSort's pivot selection can lead to an uneven split, resulting in a time complexity of O(n^2)."
MC,"In Quick Sort, what is the purpose of the partition operation?",To divide the array into two halves,To sort the entire array,"To rearrange the elements so that all elements less than the pivot are on the left, and all greater are on the right",To find the maximum element of the array,3,3,"To rearrange the elements so that all elements less than the pivot are on the left, and all greater are on the right,"
MC,Which of the following is not a strategy for choosing a pivot in Quick Sort?,Always pick the first element as the pivot,Pick a random element as the pivot,Pick the median as the pivot,Pick the element with the highest value as the pivot,4,4,Picking the element with the highest value as the pivot in QuickSort can lead to worst-case time complexity (O(n^2)) if the input array is already sorted or nearly sorted.
MC,What is the main advantage of Quick Sort over other sorting algorithms like Merge Sort?,Quick Sort is easier to implement,Quick Sort uses less memory,Quick Sort is stable,Quick Sort has a better worst-case time complexity,2,4,"Quick Sort has a better average-case time complexity than Merge Sort, making it generally faster in practice,"
MC,What is a characteristic of Quick Sort when the pivot element is always the greatest or the smallest element?,It results in the best performance,It results in the worst performance,It does not change the performance,It makes Quick Sort a stable sort,2,2,"If the pivot element is always the greatest or smallest, QuickSort degenerates to a linear time algorithm, resulting in the worst performance."
MC,Which of the following is true about Quick Sort?,It is a stable sorting algorithm,It is a comparison-based sorting algorithm,It is not a comparison-based sorting algorithm,It uses a divide and conquer strategy but does not combine the results,2,2,Quick Sort is a comparison-based sorting algorithm that uses a divide and conquer strategy to sort elements.
MC,What is the space complexity of Quick Sort in its general implementation (not the in-place version)?,O(n),O(log n),O(1),O(n log n),2,1,"The space complexity of QuickSort, in its general implementation, is O(n) because it needs space to store the recursive calls on the call stack. In the worst case, the stack depth can reach O(n)."
MC,What is the time complexity of building a heap for Heap Sort?,O(n log n),O(n),O(log n),O(n^2),2,2,Building a heap takes O(n) time.
MC,What is the worst-case time complexity of Heap Sort?,O(n),O(n log n),O(log n),O(n^2),2,2,Heap Sort has a worst-case time complexity of O(n log n) because it involves building a heap and repeatedly extracting the maximum element.
MC,Heap Sort is primarily implemented using which data structure?,Array,Linked List,Binary Tree,Complete Binary Heap,4,4,Heap Sort uses a complete binary heap data structure to sort elements.
MC,Which of the following is a characteristic of a max heap used in Heap Sort?,The value of each node is greater than or equal to the values of its children,The value of each node is less than or equal to the values of its children,All leaf nodes are at the same level,"All levels of the tree, except possibly the last one, are fully filled",1,1,"In a max heap, the value of each node is greater than or equal to the values of its children. This ensures that the largest element is always at the root."
MC,"In Heap Sort, after the initial build heap phase, where is the largest element of the heap?",At the end of the array,At the start of the array,At the middle of the array,At the root of the heap,2,4,The largest element is at the root of the heap because the heap property ensures that the root node is greater than or equal to all its children.
MC,What does the Heapify process do in Heap Sort?,It sorts the entire array,It swaps the first and last elements of the heap,It creates a new heap from an unordered array,It maintains the heap property by adjusting the position of elements in the heap,4,3,"It creates a new heap from an unordered array,"
MC,What is the space complexity of Heap Sort?,O(n),O(log n),O(1),O(n log n),3,3,Heap Sort has a space complexity of O(1) because it sorts the input array in-place without needing extra memory proportional to the input size.
MC,Which of the following statements is true regarding Heap Sort?,Heap Sort is a stable sorting algorithm,Heap Sort is not a comparison-based sorting algorithm,Heap Sort is an in-place sorting algorithm,Heap Sort performs better than Quick Sort in all cases,3,3,Heap Sort is an in-place sorting algorithm that uses a binary heap data structure.
MC,What is the time complexity of Merge Sort in the worst-case scenario?,O(n),O(n log n),O(log n),O(n^2),2,2,"Merge Sort has a time complexity of O(n log n) in the worst, average, and best case scenarios. This is because it repeatedly divides the input list in half until individual elements are reached and then merges them in a sorted order."
MC,Merge Sort is a classic example of which algorithmic principle?,Dynamic Programming,Greedy Algorithm,Divide and Conquer,Backtracking,3,3,"Merge Sort is a sorting algorithm that follows the divide-and-conquer approach by recursively dividing the input into smaller subproblems, sorting them, and then merging the sorted subproblems into a final sorted output."
MC,Which of the following is true about the space complexity of Merge Sort?,It`s in-place and uses O(1) extra space,It uses O(n) extra space,It uses O(log n) extra space,It uses O(n log n) extra space,2,2,"Merge Sort creates temporary arrays during the merging process, requiring O(n) extra space."
MC,"During the merge process in Merge Sort, what happens?",The array is divided into two halves,The individual elements are sorted,Two sorted arrays are combined into one sorted array,The entire array is sorted at once,3,3,"During the merge process in Merge Sort, two sorted arrays are combined into one sorted array,"
MC,What is a significant advantage of Merge Sort?,It is the fastest sorting algorithm,It has the least space complexity among all sorting algorithms,It is a stable sort,It works best on linked lists,3,3,"Merge Sort is a stable sort, preserving the original order of equal elements."
MC,Which of the following is NOT a characteristic of Merge Sort?,It has a consistent running time regardless of the initial order of the elements,It is usually faster than Quick Sort for small datasets,It requires additional memory for the temporary array used during the merge process,It is an in-place sorting algorithm,4,2,"Merge Sort is a divide-and-conquer algorithm that consistently takes O(n log n) time regardless of input order; this makes it suitable for large datasets. While it requires extra space for the temporary array, the consistent time complexity makes it a valuable sorting algorithm."
MC,"In the context of Merge Sort, what does the conquer step involve?",Dividing the array into smaller subarrays,Combining the sorted subarrays into a single sorted array,Sorting the individual subarrays,Swapping elements to ensure the array is sorted,2,2,"Combining the sorted subarrays into a single sorted array,"
MC,How does Merge Sort perform on linked lists compared to arrays?,It performs worse because it`s not a stable sort,It performs better because it doesn`t require random access,Performance is the same as arrays,It cannot be applied to linked lists,2,2,"Merge Sort performs better on linked lists because it doesn't need random access, unlike arrays."
MC,What is the time complexity of the Brute Force Pattern Matching algorithm in the worst-case scenario?,O(n),O(m),O(n + m),O(nm),4,4,"The Brute Force Pattern Matching algorithm compares each character of the text with each character of the pattern. In the worst case, the pattern needs to be compared with every possible starting position in the text, resulting in a time complexity of O(nm), where n is the length of the text and m is the length of the pattern."
MC,"In the context of Brute Force Pattern Matching, what does n represent?",The length of the pattern,The length of the text,The number of matches found,The number of comparisons made,2,2,"The length of the text,"
MC,Which of the following best describes the Brute Force Pattern Matching algorithm?,It pre-processes the pattern to improve matching efficiency,It matches the pattern against the text by checking for a match starting at each position in the text,It uses a hash function to match the pattern with the text,It requires additional memory proportional to the size of the pattern,2,2,"Brute force pattern matching checks each position in the text for a match with the pattern,"
MC,"In Brute Force Pattern Matching, what happens if a mismatch is found?",The algorithm tries to match the next character of the pattern,The pattern is shifted by one position in the text and the matching process starts again,The text is pre-processed again,The algorithm terminates immediately,2,2,"If a mismatch is found in Brute Force Pattern Matching, the pattern is shifted by one position in the text and the matching process starts again,"
MC,What is a major disadvantage of the Brute Force Pattern Matching algorithm?,It cannot handle large patterns,It is too complex to implement,It has a high time complexity in the worst-case scenario,It requires additional space equal to the size of the text,3,3,"The Brute Force pattern matching algorithm checks every possible location in the text to see if the pattern matches. This means the worst-case time complexity is O(m*n), where m is the length of the pattern and n is the length of the text."
MC,When is the Brute Force Pattern Matching algorithm considered efficient?,When the pattern is significantly longer than the text,When the pattern and the text are of similar length,When the pattern is short and the alphabet size is large,When multiple patterns need to be matched in the same text,3,3,"When the pattern is short and the alphabet size is large, the Brute Force algorithm becomes more efficient due to its simplicity."
MC,Which of the following is true about the Brute Force Pattern Matching algorithm?,It requires pre-processing of the text,It is the most efficient pattern matching algorithm in all cases,It does not require any additional memory,It can be optimized to skip some comparisons,3,4,"The Brute Force algorithm checks every possible alignment between the pattern and the text, which makes it inefficient in many cases. It does not need any preprocessing but does need additional memory to store the pattern. It can be optimized to skip comparisons but is not the most efficient method in general."
MC,What is the space complexity of the Brute Force Pattern Matching algorithm?,O(1),O(n),O(m),O(nm),1,2,"The Brute Force Pattern Matching algorithm has a space complexity of O(n) due to the need of storing the input text, and O(m) for the pattern, where n is the length of the text and m is the length of the pattern. This makes the overall space complexity O(n+m), which is often simplified to O(n).,"
MC,What aspect of the Boyer-Moore algorithm makes it perform faster than the Brute Force Pattern Matching algorithm in many cases?,The use of a prefix table,The use of hash functions,The use of Bad Character and Good Suffix heuristics,The use of dynamic programming,3,3,"The Boyer-Moore algorithm utilizes heuristics like Bad Character and Good Suffix to skip multiple characters at a time during pattern matching.This significantly reduces the number of comparisons, leading to faster execution in many cases."
MC,What is the best-case time complexity of the Boyer-Moore Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(m),1,1,"The best-case time complexity of the Boyer-Moore algorithm is O(n/m), where n is the length of the text and m is the length of the pattern. This occurs when the pattern is found quickly, requiring only a few comparisons."
MC,What does the Bad Character Heuristic in the Boyer-Moore algorithm do?,It shifts the pattern by one position when a mismatch occurs,It shifts the pattern to align the last occurrence of the mismatched character in the pattern with the text,It skips alignments that would result in a mismatch,It pre-processes the pattern to find all bad characters,2,3,"It skips alignments that would result in a mismatch,"
MC,What does the Good Suffix Heuristic in the Boyer-Moore algorithm do?,It shifts the pattern based on the information gathered from the matched part of the pattern,It compares the characters from the start of the pattern,It ignores the suffix of the pattern,It shifts the pattern by the length of the good suffix,1,1,"The Good Suffix Heuristic in the Boyer-Moore algorithm shifts the pattern based on the information gathered from the matched part of the pattern to improve search efficiency,"
MC,Which of the following is true about the preprocessing phase of the Boyer-Moore algorithm?,It only computes the bad character table,It only computes the good suffix table,It computes both the bad character and good suffix tables,No preprocessing is done in Boyer-Moore algorithm,3,3,The preprocessing phase of the Boyer-Moore algorithm computes both the bad character and good suffix tables to improve search speed.
MC,"In the context of the Boyer-Moore algorithm, what is the significance of the rightmost occurrence of a character?",It determines how the pattern should be aligned upon a mismatch,It is used to compute the good suffix table,It indicates the end of the pattern,It is used to start the search from the right end of the pattern,1,1,"In the Boyer-Moore algorithm, the rightmost occurrence of a character in the pattern is used to determine how far the pattern should shift to the right upon a mismatch."
MC,What is the worst-case time complexity of the Boyer-Moore Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(mn),2,4,"The Boyer-Moore algorithm typically has a time complexity of O(n/m), where n is the length of the text and m is the length of the pattern. In the worst case, it might degrade to O(nm), but in most practical scenarios, it performs much better. Thus, the worst case time complexity of the Boyer-Moore Pattern Matching algorithm is O(nm)."
MC,Why is the Boyer-Moore algorithm generally faster than other pattern matching algorithms for long patterns?,Because it always processes every character of the text,Because it does not process every character of the text in the worst case,Because it uses extra memory to store the pattern,Because it uses a hash function to match the pattern with the text,2,2,"The Boyer-Moore algorithm skips over parts of the text that cannot possibly contain the pattern, making it faster for long patterns."
MC,What is the key concept behind the KMP algorithm that improves its efficiency compared to brute force pattern matching?,Skipping comparisons based on partial matches,Using a hash function to match the pattern,Shifting the pattern by the length of the mismatch,Recursively dividing the text into smaller parts,1,1,"Skipping comparisons based on partial matches already found in the pattern, avoiding redundant comparisons,"
MC,What does the prefix table (also known as the failure function or LPS array) in the KMP algorithm store?,The length of the longest prefix which is also a suffix for each substring of the pattern,The index of the next character to be compared in the text,The number of characters to be skipped for each mismatch,The hash values of all the prefixes of the pattern,1,1,The prefix table stores the length of the longest proper prefix that is also a suffix for each prefix of the pattern. This helps in efficient string matching by avoiding unnecessary comparisons.
MC,What is the time complexity of the preprocessing phase (building the prefix table) in the KMP algorithm?,O(n),O(m),O(n + m),O(m^2),2,1,"The preprocessing phase (building the prefix table) in the KMP algorithm takes linear time, O(n), where n is the length of the pattern."
MC,"During the pattern matching phase, if a mismatch occurs at position m in the pattern and position n in the text, how does the KMP algorithm proceed?",It starts matching again from the beginning of the pattern,It shifts the pattern by m positions and continues matching,It uses the prefix table to determine the next position in the pattern to compare,It reverses the pattern and starts matching again,3,3,"It uses the prefix table to determine the next position in the pattern to compare,"
MC,What is the worst-case time complexity of the KMP Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(mn),2,3,"The worst-case time complexity of the KMP Pattern Matching algorithm is O(n), where n is the length of the text and m is the length of the pattern. This is because in the worst case, the algorithm may need to compare all characters in the text with all characters in the pattern, and it's not dependent on m."
MC,"In the KMP algorithm, if the prefix table at a position i has a value k, what does it imply?",The next character to match in the text is at position k,The next character to match in the pattern is at position k,The length of the longest proper prefix which is also a suffix up to position i is k,k characters should be skipped in the text,3,3,"The length of the longest proper prefix which is also a suffix up to position i is k,"
MC,How does the KMP algorithm handle the occurrence of a mismatch?,By backtracking in the text,By backtracking in the pattern,By using the prefix table to skip unnecessary comparisons in the pattern,By restarting the search from the next character in the text,3,3,"The KMP algorithm handles a mismatch by using the prefix table to skip unnecessary comparisons in the pattern, thus avoiding redundant checks."
MC,Why is the KMP algorithm considered efficient for pattern matching in strings?,It never reexamines a character in the text that has already been examined,It uses a binary search mechanism,It sorts the pattern and the text before matching,It compares the pattern and text character by character without skipping,1,1,"The KMP algorithm avoids redundant comparisons by using a pre-computed failure function. This allows it to skip over characters in the text that cannot possibly match, hence it never reexamines a character in the text that has already been examined."
MC,What is the primary advantage of using a standard trie for storing strings?,Efficient memory usage,Fast search times for prefixes,In-order traversal of strings,Quick sort of strings,2,2,Fast search times for prefixes are a primary advantage of using a standard trie for storing strings.
MC,"In a standard trie, each node typically represents what?",A full string from the root to the node,A single character,The end of a string,A hash value of the string,2,2,"A single character,"
MC,What is the main difference between a standard trie and a compressed trie (also known as a radix tree)?,Compressed tries store entire strings at each node,Compressed tries combine a sequence of nodes with only one child into a single node,Compressed tries do not allow for the insertion of new strings,Compressed tries require more memory than standard tries,2,2,"Compressed tries combine consecutive nodes with a single child into a single node, reducing redundancy and space consumption."
MC,How does a compressed trie (radix tree) improve upon the space efficiency of a standard trie?,By eliminating all leaf nodes,By using a linked list instead of tree nodes,By merging nodes with single children into one node,By storing characters as bits instead of full characters,3,3,"By merging nodes with single children into one node, a compressed trie reduces the number of nodes, thus improving space efficiency."
MC,What does a suffix trie of a string S represent?,All prefixes of S,All suffixes of S,All substrings of S,All anagrams of S,2,2,"A suffix trie of a string S represents all suffixes of S,"
MC,Which of the following operations can be performed efficiently using a suffix trie?,Finding the longest repeated substring in a string,Sorting a list of unrelated strings,Finding the minimum element in a numeric array,Balancing a binary search tree,1,1,Finding the longest repeated substring in a string can be efficiently done using a suffix trie because it allows for fast searching of suffixes.
MC,What is a potential drawback of using suffix tries?,They cannot store certain types of strings,They can be space-inefficient due to storing all suffixes,They do not support search operations,They only work with binary alphabets,2,2,"Suffix tries can be space-inefficient due to storing all suffixes,"
MC,"In the context of suffix tries, how is the substring search operation performed?",By checking each node for the substring,By traversing the path that corresponds to the characters of the substring,By reversing the trie and searching from the end,By converting the trie into a suffix array and searching,2,2,"By traversing the path that corresponds to the characters of the substring,"
MC,"In an E-R diagram, double lines indicate",Total participation,Multiple participation,Cardinality N,None of the above,1,1,Double lines in an E-R diagram indicate total participation. This means an entity in the relationship must participate in the relationship.
MC,Relationships among relationships can be represented in an E-R model using,Aggregation,Association,Weak entity sets,Weak relationship sets,1,1,Relationships among relationships can be represented in an E-R model using Aggregation.
MC,"In the relational model, cardinality is termed as:",Number of tuples,Number of attributes,Number of tables,Number of constraints,1,1,Cardinality refers to the number of tuples in a relation.
MC,"In the architecture of a database system, external level is the",Physical level,Logical level,Conceptual level,View level,4,4,"The external level in a database architecture is the view level, representing how users interact with the data."
MC,An entity set that does not have sufficient attributes to form a primary key is a,Strong entity set,Weak entity set,Simple entity set,Primary entity set,2,2,"A weak entity set does not have sufficient attributes to form a primary key, relying on a strong entity set for its identification."
MC,"In a Hierarchical model, records are organized as",Graph,List,Links,Tree,4,4,"[Records are arranged in a tree-like structure in a hierarchical model, connecting parent and child records. A graph structure is a broader concept, and lists don't depict hierarchical relationships.]"
MC,"In an E-R diagram, attributes are represented by",Rectangle,Square,Ellipse,Triangle,3,3,Attributes are represented by ellipses in an E-R diagram.
MC,"In an E-R diagram, an entity set is represented by a",Rectangle,Ellipse,Diamond box,Circle,1,1,"An entity set in an E-R diagram is represented by a rectangle,"
MC,A relational database developer refers to a record as,A criteria,A relation,A tuple,An attribute,3,3,"A record in a relational database is a tuple, which represents a row of data."
MC,Which of the following are the properties of entities?,Groups,Table,Attributes,Switchboards,3,3,"Attributes are properties of entities, as they describe characteristics of the entity. Groups, Tables, and Switchboards are not properties of an entity but more likely to be related to entities, or collections of entities."
MC,Which operation is used if we are interested in only certain columns of a table?,PROJECTION,SELECTION,UNION,JOIN,1,1,PROJECTION is used to select specific columns from a table.
MC,Which database level is closest to the users?,External,Internal,Physical,Conceptual,1,2,"Internal level databases are closest to users because they present data in a way that's easy for users to understand, whereas physical and conceptual levels deal with low-level storage and higher-level organization, respectively."
MC,Which are the two ways in which entities can participate in a relationship?,Passive and active,Total and partial,Simple and Complex,All of the above,2,1,Entities can participate in a relationship passively or actively.  Relationships can also be total or partial and simple or complex.
MC,"In an E-R diagram, derived attributes are represented by",Ellipse,Dashed ellipse,Rectangle,Triangle,2,2,"Derived attributes are represented by dashed ellipses in an E-R diagram,"
MC,"In an E-R diagram, a relationship type is represented by",Ellipse,Dashed ellipse,Rectangle,Diamond,4,4,A relationship type in an E-R diagram is represented by a diamond.
MC,Hierarchical model is also called,Tree structure,Plex structure,Normalize structure,Table structure,1,1,"Hierarchical model is a tree structure, so the correct answer is 1."
MC,"In an E-R diagram, generalization is represented by",Ellipse,Dashed ellipse,Rectangle,Triangle,4,4,Generalization in an E-R diagram is represented by a triangle.
MC,"The attribute name could be structured as an attribute consisting of first name, middle initial, and last name. This type of attribute is called",Simple attribute,Composite attribute,Multivalued attribute,Derived attribute,2,2,A composite attribute is an attribute that consists of multiple sub-attributes.
MC,The attribute AGE is calculated from DATE_OF_BIRTH. The attribute AGE is,Single valued,Multi valued,Composite,Derived,4,4,"The attribute AGE is calculated from DATE_OF_BIRTH, making it a derived attribute."
MC,"Student(ID, name, dept_name, tot_credits): In this schema, which attributes form the primary key?",Name,Dept,Tot_cred,ID,4,4,The attribute ID forms the primary key.  It uniquely identifies each student.
MC,"The operation allows the combining of two relations by merging pairs of tuples, one from each relation, into a single tuple.",Select,Join,Union,Intersection,2,2,The operation that combines two relations by merging pairs of tuples is a Join. It matches tuples based on common attributes.
MC,"The result of which operation contains all pairs of tuples from the two relations, regardless of whether their attribute values match?",Join,Cartesian product,Intersection,Set difference,2,2,"The Cartesian product operation returns all possible pairs of tuples from the two relations, regardless of attribute value matches,"
MC,Which of the following creates a virtual relation for storing the query?,Function,View,Procedure,None of the mentioned,2,2,"A view creates a virtual relation for storing the query,"
MC,Which of the following is the syntax for views where v is the view name?,"Create view v as ""query name"";","Create ""query expression"" as view;","Create view v as ""query expression"";","Create view ""query expression"";",3,3,"The correct syntax for creating a view named 'v' is 'Create view v as ""query expression"";'."
MC,Updating the value of the view,Will affect the relation from which it is defined,Will not change the view definition,Will not affect the relation from which it is defined,Cannot determine,1,2,"Updating the view will not change the view definition,"
MC,SQL view is said to be updatable if which of the following conditions are satisfied by the query defining the view?,The from clause has only one database relation,The query does not have a group by or having clause,"The select clause contains only attribute names of the relation and does not have any expressions, aggregates, or distinct specification",All of the mentioned,4,4,"A SQL view is updatable if the query defining it satisfies all the conditions mentioned in options 1, 2, and 3.  This ensures the view's data accurately reflects changes made to the underlying table,"
MC,"An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A. This is called as",One-to-many,One-to-one,Many-to-many,Many-to-one,2,2,"An association where each entity in one set is associated with at most one entity in another set, and vice versa, defines a one-to-one relationship."
MC,A key which is a set of one or more columns that can identify a record uniquely is called?,Natural key,Candidate key,Not Null key,Alternate key,2,2,"A candidate key is a set of one or more columns that can identify a record uniquely,"
MC,"If two relations R and S are joined, then the non-matching tuples of both R and S are ignored in",Left outer join,Right outer join,Full outer join,Inner join,4,4,"Inner join only considers matching tuples. Left and right outer joins keep all tuples from one relation, while full outer join keeps all tuples from both relations."
MC,The common column is eliminated in,Theta join,Outer join,Natural join,Composed join,3,3,The common column is eliminated in a Natural join. A natural join is a type of SQL join that automatically matches rows with the same values in columns with the same names.
MC,Which of the following makes the transaction permanent in the database?,View,Commit,Rollback,Flashback,2,2,Committing a transaction makes changes permanent in a database.
MC,"In order to undo the work of a transaction after the last commit, which one should be used?",View,Commit,Rollback,Flashback,3,3,"To undo a transaction after the last commit, use Rollback. It reverses the changes made in the transaction."
MC,What is ACID properties of Transactions?,"Atomicity, Consistency, Isolation, Database","Atomicity, Consistency, Isolation, Durability","Atomicity, Consistency, Inconsistent, Durability","Automatically, Concurrency, Isolation, Durability",2,2,"ACID properties of Transactions ensure data integrity during operations. Atomicity guarantees all operations succeed or fail as a single unit. Consistency maintains data validity rules, Isolation prevents concurrent transactions from interfering, and Durability ensures committed changes persist even after system failures."
MC,"In order to maintain the consistency during transactions, database provides",Commit,Atomic,Flashback,Retain,2,2,"In order to ensure all parts of a transaction are completed or none are, a database uses the atomic property."
MC,Database locking concept is used to solve the problem of,Lost Update,Uncommitted Dependency,Inconsistent Data,All of the above,4,4,"Database locking is used to prevent multiple transactions from simultaneously accessing and modifying the same data, thereby resolving issues like lost updates, uncommitted dependencies, and inconsistencies."
MC,A lock that allows concurrent transactions to access different rows of the same table is known as a,Field-level lock,Row-level lock,Table-level lock,Database-level lock,1,2,A row-level lock allows multiple transactions to access different rows of the same table concurrently.
MC,Which of the following systems is responsible for ensuring durability?,Recovery system,Atomic system,Concurrency control system,Compiler system,1,1,Recovery systems are designed to ensure durability.  They restore systems to a consistent state after failures.
MC,Which of the following systems is responsible for ensuring isolation?,Recovery system,Atomic system,Concurrency control system,Compiler system,3,3,"Concurrency control systems are responsible for managing concurrent access to shared resources, thus ensuring isolation and preventing conflicts."
MC,A transaction for which all committed changes are permanent is called:,Atomic,Consistent,Isolated,Durable,4,4,"A durable transaction ensures that all committed changes are permanently stored in the database,"
MC,Concurrency control is important for which of the following reasons?,To ensure data integrity when updates occur to the database in a multiuser environment,To ensure data integrity when updates occur to the database in a single-user environment,To ensure data integrity while reading data occurs to the database in a multiuser environment,To ensure data integrity while reading data occurs to the database in a single-user environment,1,1,Concurrency control is crucial for maintaining data accuracy in multi-user database environments where multiple users might update or access the same data simultaneously.
MC,Locking may cause which of the following problems?,Erroneous updates,Deadlock,Versioning,All of the above,2,4,"Locking can lead to incorrect data updates, deadlock situations where processes are blocked indefinitely, and issues with data versioning."
MC,When is a timestamp allotted?,When execution begins,When execution is taking place,When execution is completed,None of the mentioned,1,4,This question cannot be answered as I do not have information beyond November 2023.
MC,"If a schedule S can be transformed into a schedule S' by a series of swaps of non-conflicting instructions, then S and S' are",Non-conflict equivalent,Equal,Conflict equivalent,Isolation equivalent,3,3,"If a schedule S can be transformed into a schedule S' by a series of swaps of non-conflicting instructions, then S and S' are conflict equivalent."
MC,What is the primary purpose of an index in a database?,To sort data,To speed up data retrieval operations,To enforce data integrity,To create backups,2,2,"To speed up data retrieval operations, an index in a database creates a lookup table that allows the database to find specific data quickly."
MC,Which indexing method is best suited for exact-match queries?,Tree-based indexing,Hash-based indexing,Bitmap indexing,None of the above,2,2,"Hash-based indexing is best for exact-match queries because it provides fast lookups based on a direct calculation,"
MC,Which data structure is commonly used in Tree-based indexing?,Array,Linked List,B-Tree or B+ Tree,Hash Table,3,3,"B-Trees or B+ Trees are commonly used in tree-based indexing due to their efficient balancing and search capabilities,"
MC,Which of the following queries is Hash-based indexing NOT well-suited for?,Equality queries,Range queries,Point queries,Both A and C,2,2,"Hash-based indexing is optimized for equality and point queries, but not for range queries."
MC,What is a 'bucket' in the context of Hash-based indexing?,A collection of databases,A collection of keys,A collection of tables,A slot where data can be inserted or retrieved,4,4,"A slot where data can be inserted or retrieved,"
MC,What is the key feature of B-Trees?,The tree is always balanced,The tree allows duplicates,The tree is unbalanced but can be balanced manually,The tree grows in a random fashion,1,1,"B-Trees are self-balancing search trees, meaning their structure ensures a consistent search time."
MC,Which of the following is NOT a type of indexing in DBMS?,Clustered Indexing,Unclustered Indexing,Bounded Indexing,Composite Indexing,3,3,Bounded Indexing is not a standard type of indexing in DBMS.  The other options are common types of indexing.
MC,What does a leaf node in a B+ Tree contain?,Only keys,Only data pointers,Both keys and data pointers,Neither keys nor data pointers,3,3,"Leaf nodes in a B+ tree contain both keys and data pointers,"
MC,Which of the following can be a disadvantage of indexing?,Faster data retrieval,Increased storage space,Improved data integrity,Faster data insertion,2,2,"Indexing can increase storage space due to the creation and maintenance of index structures,"
MC,In which type of index are data and index entries stored together?,Clustered Index,Non-Clustered Index,Hash Index,Bitmap Index,1,1,"A clustered index stores data and index entries together, improving query performance."
MC,A unit of storage that can store one or more records in a hash file organization is denoted as:,Buckets,Disk pages,Blocks,Nodes,1,1,Buckets are used to store one or more records in a hash file organization.
MC,The file organization which allows us to read records that would satisfy the join condition by using one block read is:,Heap file organization,Sequential file organization,Clustering file organization,Hash file organization,3,3,"Clustering file organization allows us to read records that satisfy the join condition by using one block read, thereby improving efficiency."
MC,Which file organization allows records to be stored in any available location?,Sequential,Direct,Heap,Clustered,3,3,"Heap file organization allows records to be stored in any available location in the disk space,"
MC,In which file organization are records stored sequentially based on a key field?,Sequential,Indexed Sequential,Direct,Heap,1,2,"Indexed Sequential file organization stores records sequentially based on a key field,"
MC,Which file organization is efficient for range queries?,Hashing,Heap,Indexed Sequential,Direct,3,3,"Indexed Sequential files are efficient for range queries because they store data in sorted order, allowing for quick access to a range of records."
MC,"In Hashing, the function used to determine the storage location of a record is called:",Hash Function,Key Function,Address Function,Sorting Function,1,1,The function used to determine the storage location of a record in Hashing is called a Hash Function.
MC,Which of the following file organizations allows for quick retrieval based on a unique key?,Heap,Hashing,Indexed Sequential,Sequential,2,2,Hashing allows for quick retrieval using a hash function to map keys to data locations.
MC,"In Indexed Sequential Access Method (ISAM), what is used to locate primary and secondary records?",Key values,Indices,Hash Values,Memory Addresses,2,2,Indices are used to locate primary and secondary records in Indexed Sequential Access Method (ISAM).
MC,Which file organization does not require sorting of data?,Sequential,Indexed Sequential,Heap,Clustered,3,3,Heap file organization does not require sorting of data because records are stored in the order they are inserted.
MC,"In which file organization is data stored in a sorted manner, but allows for additional data to be added easily?",Sequential,Direct,Heap,Dynamic Sequential,4,4,Dynamic Sequential file organization allows for easy addition of data while maintaining sorted order.
MC,What is a drawback of sequential file organization?,Slow read,High storage cost,Slow insert and update,All of the above,3,3,Sequential file organization has slow insertion and update times due to the need to shift data.
MC,"In a Clustered file organization, records from multiple tables that share a common field are stored together in:",Blocks,Buckets,Pages,Clusters,4,4,"In a clustered file organization, records from multiple tables sharing a common field are stored together in Clusters."
MC,Which type of index is created automatically when a primary key constraint is defined?,Clustered Index,Non-Clustered Index,Composite Index,Bitmap Index,1,1,"A clustered index is automatically created when a primary key constraint is defined. It arranges table rows in physical order based on the indexed column(s).,"
MC,What is the primary purpose of query optimization?,Reduce disk storage,Reduce query execution time,Ensure data integrity,None of the above,2,2,"Query optimization is the process of improving the efficiency of queries, which results in reducing query execution time,"
MC,What is the disadvantage of using too many indexes on a table?,Reduced disk storage,Faster data retrieval,Slower data modification operations,Improved data integrity,3,3,"Adding too many indexes slows down data modification operations because the database needs to update multiple indexes,"
MC,What is heap file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,1,1,"Any record can be placed wherever there is a space for the record,"
MC,What is sequential file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,2,2,"Records are stored in a sequential order according to a search key,"
MC,What is hashing file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,3,3,"A hash function is computed on some attribute and that decides the block,"
MC,What is the primary disadvantage of a clustered index?,Slower updates and inserts,Increased storage space,Slower data retrieval,None of the above,1,1,Clustered indexes require more overhead for updates and insertions. This is because the entire index structure needs to be adjusted when data is modified.
MC,What is a secondary index primarily used for?,To enforce data integrity,To speed up data retrieval without affecting physical data order,To reduce storage space,To sort the data physically in the table,2,2,"To speed up data retrieval without affecting physical data order,"
MC,"In a secondary index, each entry is a pair consisting of:",A secondary key and a list of block pointers,A primary key and a data pointer,A secondary key and a data pointer,A primary key and a list of block pointers,1,1,"In a secondary index, each entry maps a secondary key to a list of block pointers."
MC,Which of the following types of index allows for non-unique values?,Primary Index,Clustered Index with a primary key,Secondary Index,None of the above,3,3,Secondary indexes allow non-unique values.
MC,What does a clustered index do?,Sorts the data rows in the table,Creates a separate structure to hold index and data,Allows for faster bitmap operations,Stores data out-of-order for optimized retrieval,1,1,"A clustered index sorts the data rows in a table, making it faster to retrieve data based on the indexed columns."
MC,"SC is incremented with every positive clock transition, unless its ____________________ is active.",CLK input (1),CLR input (2),INC input (3),Enable input (4),2,2,The CLR input is active.
MC,1010 1100 (logic operand) using this digits find out Selective Complement,1000 (NOR Micro Operation)(1),0110 (Ex-OR Micro Operation)(2),0111 (OR Micro Operation)(3),1110 (NAND Micro Operation)(4),2,2,"Selective complement of 1010 1100 is obtained using the exclusive-OR (EX-OR) micro operation. Applying the EX-OR operation bit by bit to 1010 1100 and 1111 1111 results in 0101 0011, which is the selective complement."
MC,A computer system is sometimes subdivided into _______________________ and ______________________.,Hardware and Software (1),Hardware and Microware (2),Software and Registers (3),None of the above (4),1,1,"A computer system is typically divided into hardware and software,"
MC,Register instructions & Input-output instructions have an operation code recognized by the control when D7=and I =,"110, 0/1 (1)","101, 0/1 (2)","111, 0/1 (3)","000, 0/1 (4)",3,1,Register instructions and input-output instructions have an operation code recognized by the control when D7=1 and I=0/1.
MC,One way of constructing a common bus system is with,Tri State Buffer (1),Multiplexer (2),Both a & b (3),None of the above (4),3,3,A common bus system can be constructed using Tri-State Buffers and Multiplexers.
MC,Symbolic representation of Subtraction operation,R3 <- R1 - R2 (1),"R3 <- R1, R2 (2)",R3 <- R1 * R2 (3),R3 <- R1 (4),1,1,"R3 <- R1 - R2 ,"
MC,P: R1 <-- R1 + R2 in this statement P: is a,Symbol (1),Notation (2),Control Signal (3),Control Point (4),3,2,P: R1 <-- R1 + R2 in this statement P: is a notation.
MC,RTL stands for:,Random transfer language (1),Register transfer language (2),Arithmetic transfer language (3),All of these (4),2,2,"Register transfer language is an important concept in computer science and digital design, where it represents data transfers between components."
MC,"Which operations are used for addition, subtraction, increment, decrement, and complement function:",Bus (1),Memory transfer (2),Arithmetic operation (3),All of these (4),4,3,"Arithmetic operation (3) is used for addition, subtraction, increment, decrement, and complement function."
MC,Which language is termed as the symbolic depiction used for indicating the series:,Random transfer language (1),Register transfer language (2),Arithmetic transfer language (3),All of these (4),2,2,"Register transfer language (RTL) is a symbolic language used for indicating the series,"
MC,In which transfer the computer register are indicated in capital letters for depicting its function:,Memory transfer (1),Register transfer (2),Bus transfer (3),None of these (4),2,2,"Register transfer language utilizes capital letters for computer registers to specify their functions,"
MC,The register that includes the address of the memory unit is termed as the ____:,MAR (1),PC (2),IR (3),None of these (4),1,1,The register that stores the memory address is the MAR (Memory Address Register).
MC,The register for the program counter is signified as_____:,MAR (1),PC (2),IR (3),None of these (4),2,2,The program counter (PC) register holds the address of the next instruction to be fetched.
MC,In register transfer the instruction register as:,MAR (1),PC (2),IR (3),None of these (4),3,3,The instruction register (IR) holds the instruction currently being executed.
MC,How many types of micro operations:,2 (1),4 (2),6 (3),8 (4),2,1,The question is unanswerable without more context about the specific micro-operations being referred to.
MC,Which are the operations that a computer performs on data that is put in a register:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),4,4,"A computer performs register transfer, arithmetic, and logical operations on data in a register."
MC,Which micro-operation carries information from one register to another:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),1,1,A register transfer micro-operation transfers data between registers.
MC,Micro operation is shown as:,R1 -> R2 (1),R1 <- R2 (2),Both (3),None (4),2,1,Micro operation is shown as R1 -> R2 (1).
MC,"In memory read, the operation puts memory address onto a register known as:",PC (1),ALU (2),MAR (3),All of these (4),3,3,"In memory read, the operation puts memory address onto a register known as MAR (Memory Address Register)."
MC,Which operation puts memory address in memory address register and data in DR:,Memory read (1),Memory write (2),Both (3),None (4),2,1,Memory read operation puts the memory address in the MAR (Memory Address Register) and data in the MDR (Memory Data Register) when reading data from memory.
MC,Arithmetic operations are carried out by such micro-operations on stored numeric data available in:,Register (1),Data (2),Both (3),None (4),1,1,Arithmetic operations are performed on numeric data stored in registers.
MC,"In arithmetic operation, numbers of registers and the circuits for addition are at _____:",ALU (1),MAR (2),Both (3),None (4),1,1,"Arithmetic operations, including addition, are performed in the Arithmetic Logic Unit (ALU)."
MC,A micro-operation every bit of a register is a:,Constant (1),Variable (2),Both (3),None (4),2,2,A micro-operation every bit of a register is a variable.
MC,Which operation is extremely useful in the serial transfer of data:,Logical micro-operation (1),Arithmetic micro-operation (2),Shift micro-operation (3),None of these (4),3,3,Shift micro-operation is extremely useful in serial transfer of data by shifting bits sequentially.
MC,Which language specifies a digital system that uses specified notation:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),1,1,Register transfer language specifies a digital system using a specified notation. It describes data transfer between registers and other operations.
MC,Which addressing mode executes its instructions within CPU without the necessity of reference memory for operands?,Implied Mode (1),Immediate Mode (2),Direct Mode (3),Register Mode (4),4,4,"Register Mode executes instructions using CPU registers for operands, eliminating memory access."
MC,How is the effective address of base-register calculated?,By addition of index register contents to the partial address in instruction (1),By addition of implied register contents to the partial address in instruction (2),By addition of index register contents to the complete address in instruction (3),By addition of implied register contents to the complete address in instruction (4),1,1,The effective address is calculated by adding the contents of the index register to the partial address in the instruction.
MC,EA stands for:,Effective add (1),Effective absolute (2),Effective address (3),End address (4),3,3,"Effective address,"
MC,In which addressing the operand is actually present in instruction:,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),1,1,Immediate addressing is the addressing mode where the operand is present within the instruction itself.
MC,In which addressing the simplest addressing mode where an operand is fetched from memory is_____,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),2,2,Direct addressing is the simplest addressing mode where an operand is fetched directly from memory location specified by the address.
MC,Which addressing is a way of direct addressing:,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),3,2,"Direct addressing is a way of direct addressing, as it accesses the operand directly from the memory location specified by the address."
MC,In which mode the main memory location holds the EA of the operand:,Immediate addressing (1),Direct addressing (2),Register addressing (3),Indirect addressing (4),4,4,"In indirect addressing mode, the main memory location holds the effective address (EA) of the operand."
MC,Which control refers to the track of the address of instructions:,Data control (1),Register control (2),Program control (3),None of these (4),3,3,"Program control manages the sequence of instructions, and therefore the address of instructions is tracked."
MC,In program control the instruction is set for the statement in a:,Parallel (1),Sequence (2),Both (3),None (4),2,2,"In program control, the instruction is set for the statement in a sequence."
MC,How many types of unconditional jumps used in program control are follows:,1 (1),2 (2),3 (3),4 (4),3,1,"Unconditional jumps in program control, such as 'goto' statements, usually involve a single type of jump instruction."
MC,Which carry is similar to rotate without carry operations:,Rotate carry (1),Rotate through carry (2),Both (3),None (4),2,2,Rotate through carry is similar to rotate without carry operations; Rotate carry also needs a carry bit.
MC,"In the case of a left arithmetic shift, zeros are shifted to the ______:",Left (1),Right (2),Up (3),Down (4),2,2,"In a left arithmetic shift, zeros are shifted to the right."
MC,"In the case of a right arithmetic shift, the sign bit values are shifted to the_____",Left (1),Right (2),Up (3),Down (4),1,2,"In a right arithmetic shift, the sign bit is replicated to maintain the sign, so the sign bit moves to the right."
MC,"In micro-programmed approach, the signals are generated by ______",Machine instructions (1),System programs (2),Utility tools (3),None of the mentioned (4),1,4,"In a microprogrammed approach, control signals are generated by microinstructions, not machine instructions, system programs, or utility tools."
MC,The 2's complement of 1101100 is,0010011 (1),0010100 (2),1100011 (3),0010110 (4),2,2,"To find the 2's complement, first invert all the bits (change 1s to 0s and 0s to 1s). Then add 1 to the result. Inverting 1101100 gives 0010011. Adding 1 to 0010011 results in 0010100."
MC,"The first part represents a signed, fixed-point number called the",Signed (1),Magnitude (2),Exponent (3),Mantissa (4),4,1,"The first part of a signed, fixed-point number is the sign, which determines if the number is positive or negative."
MC,The string of digits 101101 convert into decimal number,43 (1),47 (2),45 (3),41 (4),3,3,"Converting the binary string 101101 to decimal, 1*2^5 + 0*2^4 + 1*2^3 + 1*2^2 + 0*2^1 + 1*2^0 = 32 + 0 + 8 + 4 + 0 + 1 = 45,"
MC,Convert the 237 of octal number into Hexadecimal number,0F9 (1),09E (2),09F (3),08F (4),3,1,Converting 237 from octal to decimal gives 167. Converting 167 from decimal to hexadecimal yields 0A7.
MC,A code in which the total number of 1s in a valid (n+1)bit code word is odd and this code is called an?,Error detecting code,Even parity code,Odd parity code,None of these,3,3,A code in which the total number of 1s in a valid (n+1)bit code word is odd is called an Odd parity code.
MC,Which method/s of representation of numbers occupies large amount of memory than others?,Sign-magnitude (1),1' s complement (2),2' s complement (3),1' s & 2' s complement (4),1,4,1' s & 2' s complement representation of numbers occupy more memory compared to sign magnitude and 1's complement because it needs an extra bit to store the sign and magnitude for both 1's and 2's complement.
MC,Which representation is most efficient to perform arithmetic operations on the numbers?,Sign-magnitude (1),1' s complement (2),2' s complement (3),None of the mentioned (4),3,3,2's complement representation is the most efficient for arithmetic operations because it allows for direct addition and subtraction.
MC,Which method of representation has two representations for 0' ?,Sign-magnitude (1),1' s complement (2),2' s complement (3),None of the mentioned (4),1,1,Sign-magnitude representation has two representations for 0.
MC,When we perform subtraction on -7 and 1 the answer in 2' s complement form is ?,1010 (1),1110 (2),0110 (3),1000 (4),4,4,"-7 - 1 = -8 in 2's complement is 11000. The answer is 1000,"
MC,Add the two BCD numbers: 1001 + 0100 = ?,10101111 (1),01010000 (2),00010011 (3),00101011 (4),3,4,1001 in BCD is 1001. 0100 in BCD is 0100. 1001 + 0100 = 1101 in BCD. The BCD addition converts to decimal 9+4=13 which is 1101 in binary.
MC,Carry out BCD subtraction for (68) - (61) using 10' s complement method.,00000111 (1),01110000 (2),100000111 (3),011111000 (4),1,2,"To perform BCD subtraction using 10's complement, first find the 10's complement of the subtrahend (61). The 10's complement of 61 is 39.  Next, add the minuend (68) and the 10's complement (39). 68 + 39 = 107. Convert the result (107) to BCD.  The BCD representation of 107 is 0001 0000 0111."
MC,Perform BCD addition of (23)BCD + (20)BCD.,00110100 (1),01000011 (2),10011 (3),11100 (4),2,2,"The BCD addition of (23)BCD + (20)BCD is 43 in decimal, which in binary is 01000011."
MC,The Excess-3 representation of (0100)BCD is ?,0110 (1),1110 (2),0111 (3),1100 (4),3,3,"The Excess-3 code for BCD 0100 is obtained by adding 3 to each BCD digit. 0+3 = 3 and 1+3=4. The Excess-3 code for 0100 BCD is 0111,"
MC,When we perform subtraction on -7 and -5 the answer in 2' s complement form is ?,11110 (1),1110 (2),1010 (3),0010 (4),2,1,-7 - (-5) = -2 in 2's complement form is 11111111111111111111111111111110.
MC,"When we subtract -3 from 2, the answer in 2' s complement form is ?",0001 (1),1101 (2),0101 (3),1001 (4),3,3,"In 2's complement, subtracting -3 from 2 is equivalent to adding the 2's complement of -3 to 2. The 2's complement of -3 (in binary) is 0011, which when added to 0010 results in 0101"
MC,When 1101 is used to divide 100010010 the remainder is ?,101 (1),11 (2),0 (3),1 (4),4,4,"When 1101 is used to divide 100010010, the binary division results in a remainder of 1."
MC,Binary coded decimal is a combination of ?,Two binary digits (1),Three binary digits (2),Four binary digits (3),Five binary digits (4),3,3,"Binary coded decimal is a combination of four binary digits,"
MC,The decimal number 10 is represented in its BCD form as ?,10100000 (1),01010111 (2),00010000 (3),00101011 (4),3,3,"In BCD, each decimal digit is represented by its 4-bit binary equivalent.  10 in BCD is 0001 0000,"
MC,In memory-mapped I/O ____________,The I/O devices and the memory share the same address space (1),The I/O devices have a separate address space (2),The memory and I/O devices have an associated address space (3),A part of the memory is specifically set aside for the I/O operation (4),1,1,"In memory-mapped I/O, the I/O devices and the memory share the same address space. This allows for efficient communication and simplifies programming."
MC,The advantage of I/O mapped devices to memory mapped is,The former offers faster transfer of data (1),The devices connected using I/O mapping have a bigger buffer space (2),The devices have to deal with fewer address lines (3),No advantage as such (4),3,1,"I/O mapped devices usually have dedicated control signals, making data transfer faster than memory-mapped I/O."
MC,To overcome the lag in the operating speeds of the I/O device and the processor we use,Buffer spaces (1),Status flags (2),Interrupt signals (3),Exceptions (4),2,1,"Buffer spaces are used to overcome the lag in the operating speeds of the I/O device and the processor by providing a temporary storage area. This allows the processor to continue executing instructions while waiting for the I/O device to complete its operation, thus preventing lag."
MC,The method which offers higher speeds of I/O transfers is,Interrupts (1),Memory mapping (2),Program-controlled I/O (3),DMA (4),4,4,DMA offers higher speeds of I/O transfers by allowing the hardware to directly transfer data to/from memory without CPU intervention.
MC,The process where in the processor constantly checks the status flags is called as,Polling (1),Inspection (2),Reviewing (3),Echoing (4),1,1,Polling is the process where a processor repeatedly checks the status flags to see if an event has occurred.
MC,"Process that periodically checks status of an I/O devices, is known as",Cold swapping (1),I/O instructions (2),Polling (3),Dealing (4),3,3,Process that periodically checks status of an I/O device is known as polling.
MC,A unit on bus that initiates bus requests is called,Slave (1),Controller master (2),Striping (3),Bus master (4),4,4,A unit on a bus that initiates bus requests is called a bus master.
MC,"A scheme in which portions of I/O address space are given to I/O devices, is called",Data mapped (1),Memory-mapped I/O (2),Backplane (3),Both a and b (4),4,2,Memory-mapped I/O is a scheme where portions of the I/O address space are assigned to I/O devices.
MC,The DMA differs from the interrupt mode by,The involvement of the processor for the operation (1),The method accessing the I/O devices (2),The amount of data transfer possible (3),None of the mentioned (4),4,1,"The DMA mode transfers data directly between I/O devices and memory without processor intervention, whereas interrupt mode requires processor involvement for each data transfer."
MC,The DMA transfers are performed by a control circuit called as,Device interface (1),DMA controller (2),Data controller (3),Overlooker (4),2,2,The DMA controller is the control circuit that handles DMA transfers. It manages the data transfer between memory and I/O devices.
MC,"In DMA transfers, the required signals and addresses are given by the",Processor (1),Device drivers (2),DMA controllers (3),The program itself (4),3,3,DMA controllers handle the required signals and addresses in DMA transfers.
MC,After the completion of the DMA transfer the processor is notified by,Acknowledge signal (1),Interrupt signal (2),WMFC signal (3),None of the mentioned (4),2,2,The processor is notified by an interrupt signal (2) after the DMA transfer completes.  This signal alerts the processor to the completion of the data transfer.
MC,The DMA controller has _______ registers,4 (1),2 (2),3 (3),1 (4),3,1,"The DMA controller has multiple registers, and 4 registers are a common configuration."
MC,When the R/W bit of the status register of the DMA controller is set to 1.,Read operation is performed (1),Write operation is performed (2),Read & Write operation is performed (3),None of the mentioned (4),1,2,"When the R/W bit of the status register is set to 1, a write operation is performed."
MC,The controller is connected to the ____,Processor BUS (1),System BUS (2),External BUS (3),None of the mentioned (4),2,2,The controller is connected to the System BUS.
MC,Can a single DMA controller perform operations on two different disks simultaneously?,True (1),False (2),May be (3),None of the above (4),1,2,A single DMA controller cannot perform operations on two different disks simultaneously.  DMA controllers handle data transfer between memory and a single device at a time.
MC,The technique whereby the DMA controller steals the access cycles of the processor to operate is called,Fast conning (1),Memory Con (2),Cycle stealing (3),Memory stealing (4),3,3,Cycle stealing is a technique used by DMA controllers to temporarily take control of the processor's memory access cycles.
MC,The technique where the controller is given complete access to main memory is ________________________,Cycle stealing (1),Memory stealing (2),Memory Con (3),Burst mode (4),4,1,"Cycle stealing allows the controller to access main memory while the CPU is not using it,"
MC,The controller uses _____ to help with the transfers when handling network interfaces.,Input Buffer storage (1),Signal enhancers (2),Bridge circuits (3),All of the mentioned (4),1,3,Bridge circuits are used by controllers to direct data between network interfaces; they manage data transfers.
MC,To overcome the conflict over the possession of the BUS we use ______,Optimizers (1),BUS arbitrators (2),Multiple BUS structure (3),None of the mentioned (4),2,2,BUS arbitrators help manage the conflict over shared bus access.
MC,"If a unit completes its task before the allotted time period, then _______",It'll perform some other task in the remaining time,Its time gets reallocated to a different task,It'll remain idle for the remaining time,None of the mentioned,3,3,"If a unit completes its task before the allotted time period, then it'll remain idle for the remaining time."
MC,"To increase the speed of memory access in pipelining, we make use of _______",Special memory locations,Special purpose registers,Cache,Buffers,3,3,"To increase the speed of memory access in pipelining, we make use of cache. Cache is a special high-speed memory that stores frequently accessed data."
MC,"The instruction, Add #45,R1 does _______",Adds the value of 45 to the address of R1 and stores 45 in that address,Adds 45 to the value of R1 and stores it in R1,Finds the memory location 45 and adds that content to that of R1,None of the mentioned,2,2,"Adds 45 to the value of R1 and stores it in R1,"
MC,"In the case of, Zero-address instruction method the operands are stored in _____",Registers,Accumulators,Push down stack,Cache,3,3,"In the zero-address instruction method, operands are stored in the push-down stack,"
MC,"In the following indexed addressing mode instruction, MOV 5(R1), LOC the effective address is ______",EA = 5+R1,EA = R1,EA = [R1],EA = 5+[R1],4,4,The effective address (EA) is calculated by adding the displacement (5) to the contents of register R1.
MC,"When we use auto increment or auto decrements, which of the following is/are true? 
1) In both, the address is used to retrieve the operand and then the address gets altered 
2) In auto increment, the operand is retrieved first and then the address altered
3) Both of them can be used on general purpose registers as well as memory locations","1, 2, 3",2,"1, 3","2, 3",4,4,"In auto-increment, the operand is fetched first, and then the address is updated.  Auto-decrement first updates the address and then fetches the operand.  Both can be used on registers and memory."
MC,"The effective address of the following instruction is MUL 5(R1,R2).",5+R1+R2,5+(R1*R2),5+[R1]+[R2],5*([R1]+[R2]),3,3,"The effective address is calculated by adding the base address (5) to the sum of the contents of registers R1 and R2. This means that the effective address is 5 + [R1] + [R2].,"
MC,Which method/s of representation of numbers occupies a large amount of memory than others?,Sign-magnitude,1's complement,2's complement,1's & 2's compliment,1,1,"Sign-magnitude method for representing numbers uses more memory compared to 1's complement or 2's complement methods, as it stores both the sign and the magnitude of the number separately."
MC,Which method of representation has two representations for '0'?,Sign-magnitude,1's complement,2's complement,Both Sign-magnitude and 1's complement,4,1,"Sign-magnitude uses two representations for '0', one for positive and one for negative zero."
MC,When we perform subtraction on -7 and 1 the answer in 2's complement form is _________,1010,1110,110,1000,4,4,-7 - 1 = -8 in 2's complement is 1000.
MC,When we perform subtraction on -7 and -5 the answer in 2's complement form is ________,11110,1110,1010,10,2,1,-7 - (-5) = -2 in 2's complement form is 11111111111111111111111111111110.
MC,"For the addition of large integers, most of the systems make use of ______",Fast adders,Full adders,Carry look-ahead adders,None of the mentioned,3,3,Carry look-ahead adders are used for the addition of large integers because they can significantly reduce the delay compared to ripple carry adders.
MC,The register used to store the flags is called as _________,Flag register,Status register,Test register,Log register,2,2,"The register used to store flags is called the status register, which indicates the results of the previous operation."
MC,In the implementation of a Multiplier circuit in the system we make use of _______,Counter,Flip flop,Shift register,Push down stack,3,3,"To implement a Multiplier circuit, Shift registers are utilized for successive multiplications,"
MC,An 24 bit address generates an address space of ______ locations.,1024,4096,2^48,16777216,4,4,"An 24-bit address has 2^24 possible values, which is 16777216 locations."
MC,"If a system is 64 bit machine, then the length of each word will be _______",4 bytes,8 bytes,16 bytes,12 bytes,2,2,"A 64-bit machine has 64 bits per word, which is equivalent to 8 bytes."
MC,"When using the Big Endian assignment to store a number, the sign bit of the number is stored in _____",The higher order byte of the word,The lower order byte of the word,Can't say,None of the mentioned,1,1,The sign bit of a number is stored in the higher-order byte when using Big Endian.
MC,To get the physical address from the logical address generated by CPU we use ____________,MAR,MMU,Overlays,TLB,2,2,"To get the physical address from the logical address, the Memory Management Unit (MMU) is used."
MC,_____ method is used to map logical addresses of variable length onto physical memory.,Paging,Overlays,Segmentation,Paging with segmentation,3,1,Paging method is used to map logical addresses of variable length onto physical memory.
MC,When generating physical addresses from a logical address the offset is stored in __________,Translation look-aside buffer,Relocation register,Page table,Shift register,2,2,"When generating physical addresses from a logical address, the offset is not stored in any of the mentioned options, but instead, directly extracted from the logical address itself, and combined with the base address from the relocation register to form the physical address."
MC,The technique used to store programs larger than the memory is ____________,Overlays,Extension registers,Buffers,Both Extension registers and Buffers,1,1,The technique used to store programs larger than the memory is Overlays.
MC,The unit which acts as an intermediate agent between memory and backing store to reduce process time is ___________,TLB's,Registers,Page tables,Cache,4,4,"Cache acts as an intermediary between memory and backing store, reducing process time by storing frequently accessed data."
MC,Does the Load instruction do the following operation/s?,Loads the contents of a disc onto a memory location,Loads the contents of a location onto the accumulators,Load the contents of the PCB onto the register,None of the mentioned,2,2,The Load instruction loads the contents of a memory location onto the accumulator.
MC,Which of the following techniques used to effectively utilize main memory?,Address binding,Dynamic linking,Dynamic loading,Both Dynamic linking and loading,3,4,"Dynamic loading and linking are techniques for using main memory efficiently by loading and linking code and data only when needed, thereby reducing the amount of memory needed at any one time."
MC,__________ converts the programs written in assembly language into machine instructions.,Machine compiler,Interpreter,Assembler,Converter,3,3,An assembler converts assembly language programs into machine instructions.
MC,The return address of the Sub-routine is pointed to by _______,IR,PC,MAR,Special memory registers,2,2,The return address of the Sub-routine is pointed to by PC.
MC,The order in which the return addresses are generated and used is _________,LIFO,FIFO,Random,Highest priority,1,1,"The order in which return addresses are generated and used is usually LIFO (Last-In, First-Out),"
MC,In case of nested subroutines the return addresses are stored in __________,System heap,Special memory buffers,Processor stack,Registers,3,3,"In case of nested subroutines, the return addresses are stored in the processor stack to keep track of the execution flow."
MC,When parameters are being passed on to the subroutines they are stored in ________,Registers,Memory locations,Processor stacks,All of the mentioned,4,4,"When parameters are passed to subroutines, they are stored in memory locations, registers, or processor stacks depending on the programming language and the calling convention."
MC,The most efficient way of handling parameter passing is by using ______,General purpose registers,Stacks,Memory locations,None of the mentioned,1,2,Using stacks for parameter passing is the most efficient method due to its automatic management of the stack frame.
MC,The most Flexible way of logging the return addresses of the subroutines is by using _______,Registers,Stacks,Memory locations,None of the mentioned,2,2,"Using stacks is the most flexible method for logging subroutine return addresses, as they dynamically allocate memory during program execution."
MC,______ pointer is used to point to parameters passed or local parameters of the subroutine.,Stack pointer,Frame pointer,Parameter register,Log register,2,2,"Frame pointer is used to point to the base of the activation record of the subroutine, which contains parameters passed to the subroutine and local variables."
MC,The reserved memory or private space of the subroutine gets deallocated when _______,The stop instruction is executed by the routine,The pointer reaches the end of the space,When the routine's return statement is executed,None of the mentioned,3,3,"When the routine's return statement is executed, the reserved memory or private space of the subroutine is deallocated."
MC,_____ the most suitable data structure used to store the return addresses in the case of nested subroutines.,Heap,Stack,Queue,List,2,2,"Stack is the most suitable data structure to store return addresses in nested subroutines as it follows the Last-In, First-Out (LIFO) principle."
MC,The data structure suitable for scheduling processes is _______,List,Heap,Queue,Stack,3,3,"A queue is suitable for scheduling processes because it follows the FIFO (First-In, First-Out) principle, ensuring that processes are executed in the order they arrive."
MC,The sub-routine service procedure is similar to that of the interrupt service routine in ________,Method of context switch,Returning,Process execution,Method of context switch & Process execution,4,4,The sub-routine service procedure is similar to the interrupt service routine in method of context switch and process execution.
MC,The usual BUS structure used to connect the I/O devices is ___________,Star BUS structure,Multiple BUS structure,Single BUS structure,Node to Node BUS structure,3,3,The usual BUS structure used to connect the I/O devices is a Single BUS structure.  This is the simplest and most common method.
MC,The method of accessing the I/O devices by repeatedly checking the status flags is ___________,Program-controlled I/O,Memory-mapped I/O,I/O mapped,None of the mentioned,1,1,Program-controlled I/O is a method of accessing I/O devices by repeatedly checking the status flags.
MC,The process wherein the processor constantly checks the status flags is called as ___________,Polling,Inspection,Reviewing,Echoing,1,1,"Polling is a process where the processor repeatedly checks the status flags,"
MC,The interrupt-request line is a part of the ___________,Data line,Control line,Address line,None of the mentioned,2,2,The interrupt-request line is a part of the Control line.
MC,The return address from the interrupt-service routine is stored on the ___________,System heap,Processor register,Processor stack,Memory,3,3,"[The return address is stored on the processor stack to enable the program to resume execution after the interrupt is handled],"
MC,The signal sent to the device from the processor to the device after receiving an interrupt is ___________,Interrupt-acknowledge,Return signal,Service signal,Permission signal,1,1,"The signal sent to the device is an interrupt-acknowledge signal, which is a specific signal used in interrupt-driven systems to tell the device that the processor has received the interrupt and is ready to handle it."
MC,The time between the receiver of an interrupt and its service is ______,Interrupt delay,Interrupt latency,Cycle time,Switching time,2,2,"The time between the interrupt request and the start of its service is called interrupt latency,"
MC,Interrupts form an important part of _____ systems.,Batch processing,Multitasking,Real-time processing,Multi-user,3,3,"Interrupts are crucial for real-time systems, enabling immediate responses to events."
MC,The resistor which is attached to the service line is called _____,Push-down resistor,Pull-up resistor,Break down resistor,Line resistor,2,2,"Pull-up resistor is attached to the service line to maintain a constant voltage level across the service line,"
MC,An interrupt that can be temporarily ignored is ___________,Vectored interrupt,Non-maskable interrupt,Maskable interrupt,High priority interrupt,3,3,"An interrupt that can be temporarily ignored is a Maskable interrupt,"
MC,CPU as two modes privileged and non-privileged. In order to change the mode from privileged to non-privileged.,A hardware interrupt is needed,A software interrupt is needed,Either hardware or software interrupt is needed,A non-privileged instruction (which does not generate an interrupt)is needed,2,2,"A software interrupt is needed to change the CPU mode from privileged to non-privileged,"
MC,How can the processor ignore other interrupts when it is servicing one ___________,By turning off the interrupt request line,By disabling the devices from sending the interrupts,BY using edge-triggered request lines,All of the mentioned,4,1,"By turning off the interrupt request line, the processor can ignore other interrupts while handling the current one."
MC,"In vectored interrupts, how does the device identify itself to the processor?",By sending its device id,By sending the machine code for the interrupt service routine,By sending the starting address of the service routine,None of the mentioned,3,3,"By sending the starting address of the service routine,"
MC,The processor indicates to the devices that it is ready to receive interrupts ________,By enabling the interrupt request line,By enabling the IRQ bits,By activating the interrupt acknowledge line,None of the mentioned,3,3,"By activating the interrupt acknowledge line, the processor signals to the devices that it's ready to receive interrupts."
MC,_________ method is used to establish priority by serially connecting all devices that request an interrupt.,Vectored-interrupting,Daisy chain,Priority,Polling,2,2,"Daisy chain method is used to establish priority by serially connecting all devices that request an interrupt,"
MC,In daisy chaining device 0 will pass the signal only if it has _______,Interrupt request,No interrupt request,Both No interrupt and Interrupt request,None of the mentioned,2,2,"In daisy chaining, device 0 passes the signal only if it has no interrupt request. This prevents cascading interrupts. ,"
MC,If during the execution of an instruction an exception is raised then __________,The instruction is executed and the exception is handled,The instruction is halted and the exception is handled,The processor completes the execution and saves the data and then handle the exception,None of the mentioned,2,2,"The instruction is halted and the exception is handled,"
MC,_____ is/are types of exceptions.,Trap,Interrupt,System calls,All of the mentioned,4,2,"Interrupt and system calls are types of exceptions, while trap is a mechanism related to exception handling."
MC,A privilege exception is raised __________,When a process tries to change the mode of the system,When a process tries to change the priority level of the other processes,When a process tries to access the memory allocated to other users,All of the mentioned,4,3,A privilege exception is raised when a process tries to access the memory allocated to other users.
MC,To resolve the clash over the access of the system BUS we use ______,Multiple BUS,BUS arbitrator,Priority access,None of the mentioned,2,2,"To resolve the conflict over system BUS access, we use a BUS arbitrator, which prioritizes requests."
MC,______ BUS arbitration approach uses the involvement of the processor.,Centralised arbitration,Distributed arbitration,Random arbitration,All of the mentioned,1,1,Centralised BUS arbitration approach uses the involvement of the processor.
MC,The primary function of the BUS is __________,To connect the various devices to the cpu,To provide a path for communication between the processor and other devices,To facilitate data transfer between various devices,All of the mentioned,4,4,The BUS facilitates communication and data transfer among devices and the CPU.
MC,The classification of BUSes into synchronous and asynchronous is based on __________,The devices connected to them,The type of data transfer,The Timing of data transfers,None of the mentioned,3,3,The classification of BUSes into synchronous and asynchronous is based on the Timing of data transfers.
MC,The device which interacts with the initiator is __________,Slave,Master,Responder,Friend,1,3,The device that responds to the initiator's request is a responder.
MC,"In synchronous BUS, the devices get the timing signals from __________",Timing generator in the device,A common clock line,Timing signals are not used at all,None of the mentioned,2,2,"In synchronous BUS, the devices get the timing signals from a common clock line,"
MC,The time for which the data is to be on the BUS is affected by __________,Propagation delay of the circuit,Setup time of the device,Memory access time,Propagation delay of the circuit & Setup time of the device,4,4,The time for which the data is to be on the BUS is affected by propagation delay of the circuit and setup time of the device.  This is because the data needs to be stable during the propagation delay and must meet the setup time requirements of the receiving device.
MC,The duration between the read and the mfc signal is ______,Access time,Latency,Delay,Cycle time,1,2,"The duration between the read and the mfc signal is Latency,"
MC,The minimum time delay between two successive memory read operations is ______,Cycle time,Latency,Delay,None of the mentioned,1,1,The minimum time delay between two successive memory read operations is Cycle time.
MC,"__________ is the bottleneck, when it comes computer performance.",Memory access time,Memory cycle time,Delay,Latency,2,1,"Memory access time is the bottleneck in computer performance, because the CPU needs to fetch data from memory to perform calculations."
MC,The number of external connections required in 16 X 8 memory organisation is _____,14,19,15,12,1,4,"To determine the number of external connections in a 16x8 memory organization,  we need to add the number of address lines (4) and the number of data lines (8), resulting in 12 connections."
MC,"In a 4K-bit chip organisation has a total of 19 external connections, then it has _______ address if 8 data lines are there.",10,8,9,12,3,1,"To calculate the number of addresses, subtract the number of data lines from the total external connections: 19 - 8 = 11."
MC,The drawback of building a large memory with DRAM is ______________,The large cost factor,The inefficient memory organisation,The Slow speed of operation,All of the mentioned,3,4,"The drawback of building a large memory with DRAM is the large cost factor, inefficient memory organisation, and slow speed of operation."
MC,"The memory which is used to store the copy of data or instructions stored in larger memories, inside the CPU is called _______",Level 1 cache,Level 2 cache,Registers,TLB,1,3,"Registers are small, fast storage locations inside the CPU used to store frequently accessed data or instructions."
MC,The next level of memory hierarchy after the L2 cache is _______,Secondary storage,TLB,Main memory,Register,4,3,Main memory is the next level of memory hierarchy after the L2 cache.
MC,The effectiveness of the cache memory is based on the property of ________,Locality of reference,Memory localisation,Memory size,None of the mentioned,1,1,"The effectiveness of cache memory relies heavily on the principle of locality of reference, meaning that programs frequently access data and instructions located near previously accessed ones."
MC,The temporal aspect of the locality of reference means ________,That the recently executed instruction won't be executed soon,That the recently executed instruction is temporarily not referenced,That the recently executed instruction will be executed soon again,None of the mentioned,3,3,"That the recently executed instruction will be executed soon again,"
MC,The spatial aspect of the locality of reference means ________,That the recently executed instruction is executed again next,That the recently executed won't be executed again,That the instruction executed will be executed at a later time,That the instruction in close proximity of the instruction executed will be executed in future,4,4,"That the instruction in close proximity of the instruction executed will be executed in future,"
MC,The correspondence between the main memory blocks and those in the cache is given by _________,Hash function,Mapping function,Locale function,Assign function,2,2,Mapping function establishes the correspondence between main memory blocks and cache blocks.
MC,The algorithm to remove and place new contents into the cache is called _______,Replacement algorithm,Renewal algorithm,Updation,None of the mentioned,1,1,"Replacement algorithm is the algorithm to remove and place new contents into the cache,"
MC,The write-through procedure is used ________,To write onto the memory directly,To write and read from memory simultaneously,To write directly on the memory and the cache simultaneously,None of the mentioned,3,1,"The write-through procedure is used to write onto the memory directly,"
MC,The bit used to signify that the cache location is updated is ________,Dirty bit,Update bit,Reference bit,Flag bit,1,1,"The bit used to signify that the cache location is updated is the Dirty bit,"
MC,The copy-back protocol is used ________,To copy the contents of the memory onto the cache,To update the contents of the memory from the cache,To remove the contents of the cache and push it on to the memory,None of the mentioned,2,2,"The copy-back protocol is used to update the contents of the memory from the cache,"
MC,The approach where the memory contents are transferred directly to the processor from the memory is called ______,Read-later,Read-through,Early-start,None of the mentioned,3,4,The approach where the memory contents are transferred directly to the processor from the memory is called a direct memory access or DMA. This avoids the processor constantly being involved in the data transfer.
MC,During a write operation if the required block is not present in the cache then ______ occurs.,Write latency,Write hit,Write delay,Write miss,4,4,"During a write operation, if the required block is not present in the cache, a write miss occurs. This results in a delay while fetching the data from main memory."
MC,"In memory interleaving, the lower order bits of the address is used to _____________",Get the data,Get the address of the module,Get the address of the data within the module,None of the mentioned,2,3,"In memory interleaving, the lower order bits of the address are used to get the address of the data within the module."
MC,The number successful accesses to memory stated as a fraction is called as _____,Hit rate,Miss rate,Success rate,Access rate,1,1,The number of successful memory accesses expressed as a fraction is called the hit rate.
MC,"The number failed attempts to access memory, stated in the form of a fraction is called as _________",Hit rate,Miss rate,Failure rate,Delay rate,2,2,"Miss rate is the fraction of failed memory access attempts,"
MC,"In associative mapping during LRU, the counter of the new block is set to '0' and all the others are incremented by one, when _____ occurs.",Delay,Miss,Hit,Delayed hit,2,2,"When a cache miss occurs, the counter of the new block is set to '0' and all the others are incremented by one in associative mapping during LRU,"
MC,"In LRU, the referenced blocks counter is set to'0' and that of the previous blocks are incremented by one and others remain same, in the case of ______",Hit,Miss,Delay,None of the mentioned,1,1,"In LRU, the referenced blocks counter is set to '0' and that of the previous blocks are incremented by one and others remain the same, in the case of a Hit."
MC,The program is divided into operable parts called as _________,Frames,Segments,Pages,Sheets,2,2,The program is divided into operable parts called as segments.
MC,The techniques which move the program blocks to or from the physical memory is called as ______,Paging,Virtual memory organisation,Overlays,Framing,2,1,Paging is the technique that moves program blocks between physical memory and secondary storage.
MC,The binary address issued to data or instructions are called as ______,Physical address,Location,Relocatable address,Logical address,4,1,Physical addresses are the actual memory locations where data or instructions are stored.
MC,______ translates the logical address into a physical address.,MMU,Translator,Compiler,Linker,1,1,MMU translates the logical address into a physical address.
MC,The main aim of virtual memory organisation is ________,To provide effective memory access,To provide better memory transfer,To improve the execution of the program,All of the mentioned,4,4,"Virtual memory aims to manage memory effectively, improving access and program execution."
MC,The numbers written to the power of 10 in the representation of decimal numbers are called as _____,Height factors,Size factors,Scale factors,None of the mentioned,3,3,"Scale factors are used to represent decimal numbers in scientific notation, where the power of 10 indicates the magnitude of the number,"
MC,________ constitute the representation of the floating number.,Sign,Significant digits,Scale factor,All of the mentioned,4,4,"All of the mentioned components, sign, significant digits, and scale factor, constitute the representation of a floating-number."
MC,The sign followed by the string of digits is called as ______,Significant,Determinant,Mantissa,Exponent,3,3,"The sign followed by the string of digits is called the mantissa,"
MC,The 32 bit representation of the decimal number is called as ___________,Double-precision,Single-precision,Extended format,None of the mentioned,2,2,"The 32 bit representation of a decimal number is called single-precision,"
MC,In 32 bit representation the scale factor as a range of ________,-128 to 127,-256 to 255,0 to 255,None of the mentioned,1,4,"In 32-bit representation, the scale factor is a range of -2,147,483,648 to 2,147,483,647."
MC,"In double precision format, the size of the mantissa is ______",32 bit,52 bit,64 bit,72 bit,2,2,"In double precision format, the size of the mantissa is 52 bit,"
MC,"Consider an instruction pipeline with five stages without any branch prediction: Fetch Instruction (FI), Decode Instruction (DI), Fetch Operand (FO), Execute Instruction (EI) and Write Operand (WO). The stage delays for FI, DI, FO, EI and WO are 5 ns, 7 ns, 10 ns, 8 ns and 6 ns, respectively. There are intermediate storage buffers after each stage and the delay of each buffer is 1 ns. A program consisting of 12 instructions I1, I2, I3, K, I12 is executed in this pipelined processor. Instruction I4 is the only branch instruction and its branch target is I9. If the branch is taken during the execution of this program, the time (in ns) needed to complete the program is",132,165,176,328,2,1,"The total time taken will be the number of stages, considering the longest path for all instructions that are not branch instructions + stages for the branch instructions.  In the given case, the total time taken without considering branch instruction is 12 instructions multiplied by 32 which equals 384.  However, when a branch is taken, the next instruction is 5 steps away (I9). 13 + (5 * 8) + 21 =132."
MC,A RAM chip has a capacity of 1024 words of 8 bits each (1K * 8). The number of 2 * 4 decoders with enable line needed to construct a 16K * 16 RAM from 1K * 8 RAM is,4,5,6,7,2,4,"To address 16K words, we need log2(16384) = 14 address lines. Each 1K RAM needs 10 address lines, so we need 16K/1K = 16 chips. 16 chips need 4 decoders, one for each 4 chips, to select the chip. So we need log2(4) = 2 decoders for selecting chips. Therefore 2*4 decoders are needed for 4 chips. Then we need 14 address lines to address 16K. The 10 lines from 1K RAM are connected to the address lines. The rest are 4. We need 4 decoders to select chips, and then each decoder needs to have 4 lines. So we need 4 decoders, and the total decoders with enables will be 4 * 2 * 4. To address 16K RAM, we need 14 address lines. Each 1K RAM has 10 address lines. To select one of the 16 chips, we need 4 address lines, log2(16) = 4. We need log2(16) = 4 address lines to select the 16 chips, so 4 decoders are used."
