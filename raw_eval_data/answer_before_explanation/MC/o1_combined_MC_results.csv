Global Question Number,Question,Choice A,Choice B,Choice C,Choice D,Correct Answer,LLM Answer,Explanation
1,Which of the following is not a type of NoSQL database?,Key-Value , Document ,Column ,Relational,1,,
2,Logical data independence can be defined as _________________.,The capacity to change the conceptual schema without having to change the external schema.,The capacity to change the external schema without having to change the physical schema.,The capacity to change the physical schema without having to change external schema or application programs.,All of the above.,1,1,It allows changing the conceptual schema without affecting external schemas.
3,An external schema is ______.,A collection of views like relations.,A collection of files.,A physical schema.,A collection of relations stored in the database.,1,1,"External schema represents user views, often as relations."
4,The HAVING clause does which of the following?,Acts like a WHERE clause but is used for groups rather than rows.,Acts like a WHERE clause but is used for rows rather than columns.,Acts like a WHERE clause but is used for columns rather than groups.,Acts EXACTLY like a WHERE clause.,1,1,HAVING filters group-level results like WHERE does rows.
5,An entity (E) has 5 attributes and 3 of them form the composite primary key. The entity has a recursive 1-to-many relationship. How many attributes should there be after transforming the entity (E) to the corresponding table?,4,5,6,None of the above,4,3,"One extra foreign key attribute is added, resulting in six."
6,"You have run an SQL statement that asked the DBMS to display data in a table named USER_TABLES. The results include columns of data labeled ""TableName,"" ""NumberOfColumns"" and ""PrimaryKey."" You are looking at:",user data,metadata,a report,indexes,2,2,It is metadata describing the structure of the table.
7,Which of the following searching algorithm is fastest?,binary search,linear search,jump search,all are equally fast,1,1,Binary search is faster for large sorted lists.
8,Where is linear searching used?,Used all the time,When the list has only a few elements,When performing a single search in an unordered list,When the list has only a few elements and When performing a single search in an unordered list,4,4,It's used for small or single searches in unsorted lists.
9,How can Jump Search be improved?,Step size should be other than sqrt(n),Cannot be improved,"Begin from the kth item, where k is the step size",Start searching from the end,3,2,Jump search with sqrt(n) steps generally cannot be improved.
10,Which of the following searching algorithm is used with exponential sort after finding the appropriate range?,Jump search,Fibonacci Search,Linear search,Binary search,4,4,Binary search is used after finding the range via exponential search.
11,Which of the following searching algorithm is fastest when the input array is not sorted but has uniformly distributed values?,linear search,jump search,interpolation search,binary search,1,1,"For an unsorted list, linear search is fastest among the given."
12,"What is the time complexity of Z algorithm for pattern searching (m = length of text,  n = length of pattern)?""",O(n),O(m),O(n + m),O(m * n),3,3,Z algorithm runs in O(n + m).
13,In which of the cases uniform binary search fails compared to binary search?,Complexity of code,Many searches will be performed on several arrays of the same length,Many searches will be performed on the same array,A table lookup is generally faster than an addition and a shift,1,1,Uniform binary search is more complex in code.
14,Interpolation search is a variation of?,Exponential search,Linear search,Binary search,Jump search,3,3,It is a modification of binary search.
15,Which of the following step is taken after finding an element having value greater than the element being searched?,binary search takes place in the forward direction,binary search takes place in a backward direction,linear search takes place in the forward direction,linear search takes place in the backward direction,4,2,Binary search continues in the lower segment (backward).
16,Which of the following is not an advantage of Fibonacci Search?,When the element being searched for has a non uniform access storage,It can be applied efficiently on unsorted arrays,Can be used for large arrays which do not fit in the CPU cache or in the RAM,Can be used in magnetic tapes,2,2,It cannot be applied efficiently on unsorted arrays.
17,In which of the following case jump search will be preferred over exponential search?,when the given array is very small in size,when the given array is very large in size,jumping backwards takes significantly more time than jumping forward,jumping forward takes significantly more time than jumping backwards,4,3,When backward jumps are significantly more expensive.
18,What is the best case for linear search?,O(nlogn),O(logn),O(n),O(1),4,4,"Best case is finding the element immediately, O(1)."
19,What is the worst case for linear search?,O(nlogn),O(logn),O(n),O(1),3,3,"Worst case checks all elements, O(n)."
20,What is the best case and worst case complexity of ordered linear search?,"O(nlogn), O(logn)","O(logn), O(nlogn)","O(n), O(1)","O(1), O(n)",4,4,"Best is O(1), worst is O(n)."
21,"What does the following piece of code do? ""for (int i = 0; i < arr.length-1; i++){for (int j = i+1; j < arr.length; j++){if( (arr[i].equals(arr[j])) && (i != j) ){System.out.println(arr[i]);}}}""",Print the duplicate elements in the array,Print the element with maximum frequency,Print the unique elements in the array,Prints the element with minimum frequnecy,1,1,It identifies and prints duplicate array elements.
22,Which of the following is a disadvantage of linear search?,Requires more space,Greater time complexities compared to other searching algorithms,Not easy to understand,Not easy to implement,2,2,It has higher time complexity versus other methods.
23,What is the advantage of recursive approach than an iterative approach?,Consumes less memory,Less code and easy to implement,Consumes more memory,More code has to be written,2,2,Less code and simpler to implement.
24,"Given an input arr = {2,5,7,99,899}; key = 899; What is the level of recursion?",5,2,3,4,3,3,Three recursive calls in the process.
25,"Given an array arr = {45,77,89,90,94,99,100} and key = 99; what are the mid values(corresponding array elements) in the first and second levels of recursion?",90 and 99,90 and 94,89 and 99,89 and 94,1,1,Mid elements found are 90 then 99.
26,What is the worst case complexity of binary search using recursion?,O(nlogn),O(logn),O(n),O(n2),2,2,Worst case for binary search remains O(logn).
27,What is the average case time complexity of binary search using recursion?,O(nlogn),O(logn),O(n),O(n2),2,2,Average case is also O(logn).
28,Which of the following is not an application of binary search?,To find the lower/upper bound in an ordered sequence,Union of intervals,Debugging,To search in unordered list,4,4,It cannot search an unordered list efficiently.
29,Binary Search can be categorized into which of the following?,Brute Force technique,Divide and conquer,Greedy algorithm,Dynamic programming,2,2,Binary search divides the array recursively.
30,"Given an array arr = {5,6,77,88,99} and key = 88; How many iterations are done until the element is found?",1,3,4,2,4,4,It takes two iterations to locate 88.
31,"Given an array arr = {45,77,89,90,94,99,100} and key = 100; What are the mid values(corresponding array elements) generated in the first and second iterations?",90 and 99,90 and 100,89 and 94,94 and 99,1,1,The mids generated are 90 then 99.
32,What is the time complexity of binary search with iteration?,O(nlogn),O(logn),O(n),O(n2),2,2,Iterative binary search also has O(logn).
33,Which of the following sorting algorithms is the fastest for sorting small arrays?,Quick sort,Shell sort,Insertion sort,Heap sort,3,3,Insertion sort works fastest for small arrays.
34,What is the advantage of selection sort over other sorting techniques?,It is faster than any other sorting technique,It is scalable,It works best for inputs which are already sorted,It requires no additional storage space,4,4,Selection sort needs no extra storage.
35,Which of the following method is used for sorting in merge sort?,partitioning,merging,exchanging,selection,2,2,Merge sort combines sorted halves (merging).
36,Which of the following sorting algorithm does not use recursion?,bottom up merge sort,merge sort,heap sort,quick sort,1,3,Heap sort can be implemented without recursion.
37,Merge sort uses which of the following method to implement sorting?,selection,exchanging,merging,partitioning,3,3,Merge sortâ€™s core process is merging.
38,Which of the following sorting algorithms is the fastest?,Merge sort,Shell sort,Insertion sort,Quick sort,4,4,Quick sort is usually fastest in practice.
39,Quick sort uses which of the following method to implement sorting?,partitioning,selection,exchanging,merging,1,1,Quick sort partitions around a pivot.
40,"In heap sort, after deleting the last minimum element, the array will contain elements in?",increasing sorting order,tree preorder,tree inorder,decreasing sorting order,4,4,A min-heap approach ends in descending order.
41,Which of the following sorting algorithm is stable?,Introsort,Tim sort,Heap sort,Quick sort,2,2,Tim sort is a stable sorting algorithm.
42,Which of the following sorting algorithm uses the method of insertion?,selection sort,quick sort,bubble sort,cycle sort,4,3,Bubble sort effectively inserts each element by swapping.
43,Which of the following pair of sorting algorithms are stable?,gnome sort and merge sort,heap sort and merge sort,gnome sort and quick sort,merge sort and selection sort,1,1,Both gnome sort and merge sort are stable.
44,What is the worst case complexity of bubble sort?,O(nlogn),O(logn),O(n),O(n2),4,4,Worst case is O(n2).
45,What is the average case complexity of bubble sort?,O(nlogn),O(logn),O(n),O(n2),4,4,Average case is also O(n2).
46,Which of the following is not an advantage of optimised bubble sort over other sorting techniques in case of sorted elements?,It is faster,Consumes less memory,Detects whether the input is already sorted,Consumes less time,3,2,It does not necessarily reduce memory usage.
47,"The given array is arr = {1, 2, 4, 3}. Bubble sort is used to sort the array elements. How many iterations will be done to sort the array?",4,2,1,0,1,2,"Two passes are enough to sort {1,2,4,3}."
48,What is the average case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,Merge sort averages O(n log n).
49,What is the auxiliary space complexity of merge sort?,O(1),O(log n),O(n),O(n log n),3,3,Merge sort needs O(n) extra space.
50,What is the worst case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,Worst case is still O(n log n).
51,What will be the best case time complexity of merge sort?,O(n log n),O(n2),O(n2 log n),O(n log n2),1,1,Best case also O(n log n).
52,What is the worst case time complexity of a quick sort algorithm?,O(N),O(N log N),O(N2),O(log N),3,3,Quick sort degrades to O(N2) in worst case.
53,Which of the following methods is the most effective for picking the pivot element?,first element,last element,median-of-three partitioning,random element,3,3,Median-of-three partitioning picks a better pivot.
54,Which is the safest method to choose a pivot element?,choosing a random element as pivot,choosing the first element as pivot,choosing the last element as pivot,median-of-three partitioning method,1,4,Median-of-three is the safest pivot choice.
55,What is the average running time of a quick sort algorithm?,O(N2),O(N),O(N log N),O(log N),3,3,Average time is O(N log N).
56,Which is the worst method of choosing a pivot element?,first element as pivot,last element as pivot,median-of-three partitioning,random element as pivot,1,1,Choosing the first element often leads to worst splits.
57,Which among the following is the best cut-off range to perform insertion sort within a quick sort?,N=0-5,N=5-20,N=20-30,N>30,2,2,Switching to insertion sort for arrays of size 5-20 helps.
58,"The given array is arr = {2,3,4,1,6}. What are the pivots that are returned as a result of subsequent partitioning?",1 and 3,3 and 1,2 and 6,6 and 2,1,1,The pivots end up being 1 and 3.
59,What is the average case complexity of QuickSort?,O(nlogn),O(logn),O(n),O(n2),1,1,QuickSort has an average of O(nlogn).
60,Depth First Search is equivalent to which of the traversal in the Binary Trees?,Pre-order Traversal,Post-order Traversal,Level-order Traversal,In-order Traversal,1,1,DFS matches pre-order traversal in a binary tree.
61,"Time Complexity of DFS is? (V ??number of vertices, E ??number of edges)",O(V + E),O(V),O(E),O(V*E),1,1,DFS runs in O(V + E).
62,The Data structure used in standard implementation of Breadth First Search is?,Stack,Queue,Linked List,Tree,1,2,BFS typically uses a queue.
63,The Depth First Search traversal of a graph will result into?,Linked List,Tree,Graph with back edges,Array,2,2,It forms a spanning tree of visited nodes.
64,Which of the following is not an application of Depth First Search?,For generating topological sort of a graph,For generating Strongly Connected Components of a directed graph,Detecting cycles in the graph,Peer to Peer Networks,4,4,Not commonly used for peer-to-peer searches via DFS.
65,When the Depth First Search of a graph is unique?,When the graph is a Binary Tree,When the graph is a Linked List,When the graph is a n-ary Tree,When the graph is a ternary Tree,2,2,"If the graph is basically a linked list, DFS is unique."
66,"Regarding implementation of Depth First Search using stacks, what is the maximum distance between two nodes present in the stack? (considering each edge length 1)",Can be anything,0,At most 1,Insufficient Information,1,3,"Nodes in a stack follow each other, distance at most 1."
67,"In Depth First Search, how many times a node is visited?",Once,Twice,Equivalent to number of indegree of the node,Thrice,3,1,A node is processed exactly once.
68,Breadth First Search is equivalent to which of the traversal in the Binary Trees?,Pre-order Traversal,Post-order Traversal,Level-order Traversal,In-order Traversal,3,3,BFS corresponds to level-order traversal.
69,"Time Complexity of Breadth First Search is? (V ??number of vertices, E ??number of edges)",O(V + E),O(V),O(E),O(V*E),1,1,BFS also runs in O(V + E).
70,"Regarding implementation of Breadth First Search using queues, what is the maximum distance between two nodes present in the queue? (considering each edge length 1)",Can be anything,0,At most 1,Insufficient Information,3,3,Nodes enqueued maintain adjacency distance at most 1.
71,"In BFS, how many times a node is visited?",Once,Twice,Equivalent to number of indegree of the node,Thrice,3,1,Each node is visited once in BFS.
72,The first step in the naÃ¯ve greedy algorithm is?,adding flows with higher values,reversing flow if required,analysing the zero flow,calculating the maximum flow using trial and error,3,1,The naÃ¯ve method tries adding higher flow edges first.
73,Dijkstra's Algorithm is the prime example for ___________,Dynamic programming,Back tracking,Branch and bound,Greedy algorithm,4,4,Dijkstraâ€™s is a greedy algorithm.
74,Which of the following is/are property/properties of a dynamic programming problem?,Optimal substructure,Overlapping subproblems,Greedy approach,Both optimal substructure and overlapping subproblems,4,4,DP requires optimal substructure and overlapping subproblems.
75,Which of the following problems should be solved using dynamic programming?,Mergesort,Binary search,Longest common subsequence,Quicksort,3,3,Longest common subsequence is a DP classic.
76,Which of the following problems can't be solved using recursion?,Factorial of a number,Nth fibonacci number,Length of a string,Problems without base case,4,4,Recursion fails on problems lacking a base case.
77,Recursion is similar to which of the following?,Switch Case,Loop,If-else,if elif else,2,,
78,"What will happen when the below code snippet is executed? ""void my_recursive_function(){   my_recursive_function();}int main(){   my_recursive_function();   return 0;}""",The code will be executed successfully and no output will be generated,The code will be executed successfully and random output will be generated,The code will show a compile time error,The code will run for some time and stop when the stack overflows,4,4,Infinite recursion leads to stack overflow.
79,"How many times is the recursive function called, when the following code is executed? ""void my_recursive_function(int n){     if(n == 0)     return;     printf(""%d "",n);     my_recursive_function(n-1);}int main(){     my_recursive_function(10);     return 0;}""",9,10,11,12,3,3,The function is called 11 times including n=0.
80,Which of the following statements is true?,Recursion is always better than iteration,Recursion uses more memory compared to iteration,Recursion uses less memory compared to iteration,Iteration is always better and simpler than recursion,2,2,Recursive calls consume extra stack space.
81,When does the ArrayIndexOutOfBoundsException occur?,Compile-time,Run-time,Not an error,Not an exception at all,2,2,It occurs at run-time.
82,What are the advantages of arrays?,Objects of mixed data types can be stored,Elements in an array cannot be sorted,Index of first element of an array is 1,Easier to store elements of same data type,4,4,Arrays store elements of the same type more easily.
83,What are the disadvantages of arrays?,Data structure like queue or stack cannot be implemented,There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size,Index value of an array can be negative,Elements are sequentially accessed,2,2,Unused allocated space causes extra memory usage.
84,"Assuming int is of 4bytes, what is the size of int arr[15];?",15,19,11,60,4,4,15 * 4 bytes = 60 bytes.
85,"In general, the index of the first element in an array is __________",0,-1,2,1,1,1,The first element index is 0.
86,Elements in an array are accessed _____________,randomly,sequentially,exponentially,logarithmically,1,1,Array elements can be accessed randomly by index.
87,The postfix form of the expression (A+ B)*(C*D- E)*F / G is?,AB+ CD*E ??FG /**,AB + CD* E ??F **G /,AB + CD* E ??*F *G /,AB + CDE * ??* F *G /,3,3,Postfix is AB+CD*E-*F*G/.
88,What data structure would you most likely see in non recursive implementation of a recursive algorithm?,Linked List,Stack,Queue,Tree,2,2,A stack is typically used in place of recursion.
89,The prefix form of A-B/ (C * D ^ E) is?,-/*^ACBDE,-ABCD*^DE,-A/B*C^DE,-A/BC*^DE,3,3,The prefix form is -A/B*C^DE.
90,"What is the result of the following operation? Top (Push (S, X))",X,X+S,S,XS,1,1,"After pushing X, Top returns X."
91,The prefix form of an infix expression (p+q)-(r*t) is?,+pq-*rt,#NAME?,#NAME?,-+*pqrt,3,1,The correct prefix is -+pq*rt.
92,Which data structure is used for implementing recursion?,Queue,Stack,Array,List,2,2,Recursion uses an implicit stack.
93,Linked list data structure offers considerable saving in _____________,Computational Time,Space Utilization,Space Utilization and Computational Time,Speed Utilization,3,2,Linked lists can efficiently use space by allocation.
94,Which of the following points is/are not true about Linked List data structure when it is compared with an array?,Arrays have better cache locality that can make them better in terms of performance,It is easy to insert and delete elements in Linked List,Random access is not allowed in a typical implementation of Linked Lists,Access of elements in linked list takes less time than compared to arrays,4,4,Linked lists take more time than arrays for direct access.
95,"What does the following function do for a given Linked List with first node as head? ""void fun1(struct node* head){    if(head == NULL)    return;    fun1(head->next);    printf(""%d  "", head->data);}""",Prints all nodes of linked lists,Prints all nodes of linked list in reverse order,Prints alternate nodes of Linked List,Prints alternate nodes in reverse order,2,2,It prints list nodes in reverse order.
96,Which of the following sorting algorithms can be used to sort a random linked list with minimum time complexity?,Insertion Sort,Quick Sort,Heap Sort,Merge Sort,4,4,Merge sort is efficient for linked lists.
97,Which of the following is not a disadvantage to the usage of array?,Fixed size,There are chances of wastage of memory space if elements inserted in an array are lesser than the allocated size,Insertion based on position,Accessing elements at specified positions,4,4,"Random access is actually an advantage, not a disadvantage."
98,What is the time complexity of inserting at the end in dynamic arrays?,O(1),O(n),O(logn),Either O(1) or O(n),4,4,"Amortized O(1), worst case O(n)."
99,What is the time complexity to count the number of elements in the linked list?,O(1),O(n),O(logn),O(n2),2,2,Counting requires linear traversal.
100,What is the space complexity for deleting a linked list?,O(1),O(n),Either O(1) or O(n),O(logn),1,1,It just needs constant extra space.
101,Which of these is not an application of a linked list?,To implement file systems,For separate chaining in hash-tables,To implement non-binary trees,Random Access of elements,4,4,Random access is not a typical linked list use.
102,_________________ operations do not preserve non-matched tuples.,Left outer join,Inner join,Natural join,Right outer join,2,2,Inner join excludes non-matching tuples.
103,Which forms have a relation that contains information about a single entity?,4NF,2NF,5NF,3NF,4,4,Generally a single entity relation is in 3NF.
104,The top level of the hierarchy consists of ______ each of which can contain _____.,"Schemas, Catalogs","Schemas, Environment","Environment, Schemas","Catalogs, Schemas",4,4,"The top level is catalogs, each containing schemas."
105,_______ indicates the maximum number of entities that can be involved in a relationship.,Greater Entity Count,Minimum cardinality,Maximum cardinality,ERD,3,3,Maximum cardinality describes the upper limit.
106,"Why the following statement is erroneous? {SELECT dept_name, ID, avg (salary)FROM instructorGROUP BY dept_name;}",Dept_id should not be used in group by clause,Group by clause is not valid in this query,Avg(salary) should not be selected,None,1,4,The real error is missing GROUP BY for ID.
107,Which of the following is not the utility of DBMS?,Backup,Data Loading,Process Organization,File organization,3,3,Process organization is not a DBMS utility.
108,For designing a normal RDBMS which of the following normal form is considered adequate?,4NF,3NF,2NF,5NF,2,2,3NF is generally sufficient.
109,"__________ command is used in SQL to issue multiple CREATE TABLE, CREATE VIEW and GRANT statements in a single transaction.",CREATE CLUSTER,CREATE PACKAGE,CREATE SCHEMA,All of the mentioned,3,3,CREATE SCHEMA can bundle multiple statements.
110,A table is in BCNF if it is in 3NF and if every determinant is a ___________ key.,Dependent,Normal,Candidate,Both Normal and Candidate,3,3,In BCNF every determinant is a candidate key.
111,A table is in 3NF if it is in 2NF and if it has no ____________,Functional Dependencies,Transitive Dependencies,Trivial Functional Dependency,Multivalued Dependencies,2,2,3NF requires no transitive dependencies.
112,Every constraint on the table is a logical consequence of the table?,Fourth normal form,Fifth normal form,Domain/key normal form,None of the Mentioned,3,3,Domain/key normal form satisfies all constraints logically.
113,"Anomalies are avoided by splitting the offending relation into multiple relations, is also known as",Accupressure,Decomposition,Precomposition,Both Decomposition and Precomposition,2,2,Splitting relations is called decomposition.
114,"Every time attribute A appears, it is matched with the same value of attribute B, but not the same value of attribute C. Therefore, it is true that:",A -> B,A -> C,"A -> (B,C)","(B,C) -> A",1,1,A->B but not necessarily A->C.
115,"When the values in one or more attributes being used as a foreign key must exist in another set of one or more attributes in another table, we have created a(n):",Transitive Dependency,Insertion Anomaly,Referential Integrity Constraint,Normal Form,3,3,It's a referential integrity constraint.
116,Which of the following is not a restriction for a table to be a relation?,The cells of the table must contain a single value,All of the entries in any column must be of the same kind,The columns must be ordered,No two rows in a table may be identical,3,3,Column order is not mandated.
117,Which of the following gives a logical structure of the database graphically?,Entity-relationship diagram,Entity diagram,Database diagram,Architectural representation,1,1,An ER diagram shows the database structure.
118,The entity relationship set is represented in E-R diagram as,Double diamonds,Undivided rectangles,Dashed lines,Diamond,4,4,A relationship set is shown with a diamond.
119,The Rectangles divided into two parts represents,Entity set,Relationship set,Attributes of a relationship set,Primary key,1,1,A rectangle with two parts represents an entity set.
120,Consider a directed line(->) from the relationship set advisor to both entity sets instructor and student. This indicates _________ cardinality,One to many,One to one,Many to many,Many to one,2,2,Arrows to both sides indicate one-to-one.
121,We indicate roles in E-R diagrams by labeling the lines that connect ___________ to __________,"Diamond , diamond","Rectangle, diamond","Rectangle, rectangle","Diamond, rectangle",4,4,Roles are labeled on lines from diamond to rectangle.
122,An entity set that does not have sufficient attributes to form a primary key is termed a __________,Strong entity set,Variant set,Weak entity set,Variable set,3,3,It is called a weak entity set.
123,"For a weak entity set to be meaningful, it must be associated with another entity set, called the",Identifying set,Owner set,Neighbour set,Strong entity set,1,2,That entity set is called the owner set.
124,Weak entity set is represented as,Underline,Double line,Double diamond,Double rectangle,4,4,A weak entity set has a double rectangle.
125,"If you were collecting and storing information about your music collection, an album would be considered a(n) _____",Relation,Entity,Instance,Attribute,2,2,Album would be an entity.
126,What term is used to refer to a specific record in your music database; for instance; information stored about a specific album?,Relation,Instance,Table,Column,2,2,A specific album record is an instance.
127,Does RDBMS have ACID properties?,Follows ACID properties,Doesn't follow ACID properties,Depends on the data stored in the database,Can't say,3,1,RDBMS follows ACID properties.
128,What is a relation in RDBMS?,Key,Table,Row,Data Types,2,2,A relation in RDBMS is a table.
129,Dynamic hashing allows us to?,Accommodate the growth of the database,Accommodate the shrinkage of the database,Allows modification of hash function,All of the mentioned,4,4,"Dynamic hashing adapts to growth, shrinkage, and more."
130,Which of the following constraints RDBS doesn't check before creating the tables?,Not null,Primary keys,Data Structure,Data integrity,3,3,Data structure is not checked as a constraint.
131,Which of the following is the correct option for the given query? {SELECT DISTINCT name FROM RDBMSWHERE ID IS NOT NULL;},The query gives all the possible RDBMS names where a finite value exists for ID,The query gives the RDBMS names where a finite value exists for ID and it excludes identical names,The query gives the names of the RDBMS that have a null ID and it also excludes identical names,The query is syntactically wrong,2,2,It lists unique names with non-null ID.
132,Which of the following is the correct output for the given query? {(SELECT databaseid FROM RDBMS  WHERE SECTION = 'c') EXCEPT (SELECT databaseid FROM RDBMS WHERE id < 10);},All the values of the databaseid for which section is c and id > 10,All the values of the databaseid for which section not c and id > 10,All the values of the databaseid for which section is c and id < 10,All the values of the databaseid for which section not c and id < 10,1,1,Those with SECTION='c' and ID>=10 remain.
133,Which of the following commands do we use to delete a relation (RDBMS) from a database?,delete table RDBMS,drop table RDBMS,delete from RDBMS,drop relation RDBMS,2,2,DROP TABLE removes the relation.
134,"If RDBMS1, RDBMS2, RDBMS3 are attributes in a relation and S is another relation, which of the following is an incorrect specification of an integrity constraint?","foreign key(RDBMS1, RDBMS2)","foreign key(RDBMS1, RDBMS2) references S","primary key(RDBMS1, RDBMS2, RDBMS3)",primary key(RDBMS1),1,1,A foreign key must reference another table.
135,Which of the following is the time of temporal data that record when a fact was recorded in a database?,Enter time,Exit time,Valid time,Transaction time,4,4,Transaction time is when it's recorded.
136,________ deletes a data item from a database.,Insert(RDBMS),Drop(RDBMS),Delete(RDBMS),None of the mentioned,3,3,DELETE removes a data item.
137,Which of the following is a good database management practice?,Adding redundant attributes,Not specifying primary keys,Removing redundant attributes,None of the mentioned,3,3,Removing redundant attributes is recommended.
138,What is an Instance of a Database?,The state of the database system at any given point of time,The entire set of attributes of the Database put together in a single relation,The initial values inserted into the Database immediately after its creation,The logical design of the database system,1,1,It's the database state at a point in time.
139,"If the database modifications occur while the transaction is still active, the transaction is said to use the __________ modification technique",Immediate,Deferred,More than one of the mentioned,None of the mentioned,1,1,Updating while active is immediate modification.
140,If a transaction does not modify the database until it has committed it is said to use a _______ modification technique,Immediate,Deferred,More than one of the mentioned,None of the mentioned,2,2,No changes until commit is deferred modification.
141,The dependency rules specified by the database designer are known as _______,Functional dependencies,Designer dependencies,Database rules,None of the mentioned,1,1,They are called functional dependencies.
142,What does the following query do? {UPDATE student SET marks = marks*1.10;},It decreases the marks of all the students by 90%,It increases the marks of all the students by 10%,It is syntactically wrong,It increases the marks of all the students by 110%,2,2,It raises all marks by 10 percent.
143,"Observe the given SQL query and choose the correct option.{SELECT database_name, RDBMS (DISTINCT bankuser_name) FROM depositor, account WHERE depositor.account_number = account.account_number GROUP BY branch_id}",The query is syntactically correct and gives the correct answer,The query is syntactically wrong,The query is syntactically correct but gives the wrong answer,The query contains one or more wrongly named clauses,2,2,The query has invalid syntax (RDBMS(...) is wrong).
144,"for each tuple tr in r do begin {FOR each tuple ts IN s do BEGIN test pair (tr , ts ) TO see IF they satisfy the JOIN condition _ IF they do, ADD tr ??ts TO the RESULT; END END} What type of join is this?",Block nested loop join,Nested loop join,Hash join,Equi join,2,2,It is a nested loop join approach.
145,Which product is returned in a join query have no join condition:,Equijoins,Cartesian,Both Equijoins and Cartesian,None of the mentioned,2,2,No join condition yields a Cartesian product.
146,Which is a join condition contains an equality operator:,Equijoins,Cartesian,Both Equijoins and Cartesian,None of the mentioned,1,1,Equijoin uses the equality operator.
147,Which join refers to join records from the write table that have no matching key in the left table are include in the result set:,Left outer join,Right outer join,Full outer join,Half outer join,2,2,Right outer join includes unmatched rows from right.
148,Which operation are allowed in a join view:,UPDATE,INSERT,DELETE,All of the mentioned,4,4,"UPDATE, INSERT, and DELETE can be done on join views."
149,Which view that contains more than one table in the top-level FROM clause of the SELECT statement:,Join view,Datable join view,Updatable join view,All of the mentioned,3,1,A join view references multiple tables.
150,Which of the following is a fundamental operation in relational algebra?,Set intersection,Natural join,Assignment,None of the mentioned,4,4,None listed are strictly fundamental.
151,"The ___________ operation, denoted by - allows us to find tuples that are in one relation but are not in another.",Union,Set-difference,Difference,Intersection,2,2,Set-difference is denoted by minus (-).
152,Which is a unary operation:,Selection operation,Primitive operation,Projection operation,Generalized selection,4,1,Selection is a unary relational operation.
153,"In precedence of set operators, the expression is evaluated from",Left to left,Left to right,Right to left,From user specification,2,,
154,Which of the following is not outer join?,Left outer join,Right outer join,Full outer join,All of the mentioned,4,4,"Left, right, and full are outer joins; ""all of the mentioned"" is not"
155,"An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A.This is called as",One-to-many,One-to-one,Many-to-many,Many-to-one,2,2,Each entity in A matches one in B and vice versa
156,"An entity in A is associated with at most one entity in B. An entity in B, however, can be associated with any number (zero or more) of entities in A.",One-to-many,One-to-one,Many-to-many,Many-to-one,4,4,"Many As can relate to one B, so it's many-to-one"
157,Data integrity constraints are used to:,Control who is allowed access to the data,Ensure that duplicate records are not entered into the table,Improve the quality of data entered for a specific property,Prevent users from changing the values stored in the table,3,3,Constraints ensure valid data for defined properties
158,"Establishing limits on allowable property values, and specifying a set of acceptable, predefined options that can be assigned to a property are examples of:",Attributes,Data integrity constraints,Method constraints,Referential integrity constraints,2,2,Such rules are examples of data integrity constraints
159,______ is a special type of integrity constraint that relates two relations & maintains consistency across the relations.,Entity Integrity Constraints,Referential Integrity Constraints,Domain Integrity Constraints,Domain Constraints,2,2,Referential integrity ensures foreign keys map correctly
160,Which one of the following uniquely identifies the elements in the relation?,Secondary Key,Primary key,Foreign key,Composite key,2,2,Primary key uniquely identifies each tuple
161,Drop Table cannot be used to drop a table referenced by a _________ constraint.,Local Key,Primary Key,Composite Key,Foreign Key,4,4,Must drop or disable foreign key constraints first
162,____________ is preferred method for enforcing data integrity,Constraints,Stored Procedure,Triggers,Cursors,1,1,Constraints are the standard mechanism for data integrity
163,The total participation by entities is represented in E-R diagram as,Dashed line,Double line,Double rectangle,Circle,2,2,Total participation is shown by a double line
164,"Given the basic ER and relational models, which of the following is INCORRECT?",An attribute of an entity can have more than one value,An attribute of an entity can be composite,"In a row of a relational table, an attribute can have more than one value","In a row of a relational table, an attribute can have exactly one value or a NULL value",3,3,"In a table, an attribute cannot have multiple values"
165,Which of the following indicates the maximum number of entities that can be involved in a relationship?,Minimum cardinality,Maximum cardinality,ERD,Greater Entity Count,2,2,Maximum cardinality shows the upper entity limit in a relationship
166,In E-R diagram generalization is represented by,Ellipse,Dashed ellipse,Rectangle,Triangle,4,4,Generalization appears as a triangle in E-R diagrams
167,What is a relationship called when it is maintained between two entities?,Unary,Binary,Ternary,Quaternary,2,2,A relationship between two entities is binary
168,Key to represent relationship between tables is called,Primary key,Secondary Key,Foreign Key,None of the mentioned,3,3,A foreign key links related tables
169,A window into a portion of a database is,Schema,View,Query,Data dictionary,2,2,A view is a virtual window to data
170,We can use the following three rules to find logically implied functional dependencies. This collection of rules is called,Axioms,Armstrong's axioms,Armstrong,Closure,2,2,These are known as Armstrong's axioms
171,Which of the following is not Armstrong's Axiom?,Reflexivity rule,Transitivity rule,Pseudotransitivity rule,Augmentation rule,3,3,Pseudotransitivity is not one of the basic axioms
172,"The relation employee(ID,name,street,Credit,street,city,salary) is decomposed into {employee1 (ID, name), employee2 (name, street, city, salary)} This type of decomposition is called",Lossless decomposition,Lossless-join decomposition,All of the mentioned,None of the mentioned,4,2,It is a lossless-join decomposition
173,"Inst_dept (ID, name, salary, dept name, building, budget) is decomposed into {instructor (ID, name, dept name, salary), department (dept name, building, budget)} This comes under",Lossy-join decomposition,Lossy decomposition,Lossless-join decomposition,Both Lossy and Lossy-join decomposition,4,3,Also a lossless-join decomposition
174,There are two functional dependencies with the same set of attributes on the left side of the arrow:,A->BC,A->B,B->C,None of the mentioned,1,1,A->B and A->C together imply A->BC
175,"Consider a relation R(A,B,C,D,E) with the following functional dependencies: {ABC -> DE, D -> AB} The number of superkeys of R is:",2,7,10,12,3,3,There are 10 distinct superkeys in total
176,"Suppose we wish to find the ID's of the employees that are managed by people who are managed by the employee with ID 123. Here are two possible queries: I.{SELECT ee.empID FROM Emps ee, Emps ff WHERE ee.mgrID = ff.empID AND ff.mgrID = 123;} II.{SELECT empID FROM Emps WHERE mgrID IN (SELECT empID FROM Emps WHERE mgrID = 123);} Which, if any, of the two queries above will correctly (in SQL2) get the desired set of employee ID?'s?",Both I and II,I only,II only,Neither I nor I,1,1,Both queries correctly find those employees
177,"Suppose now that R(A,B) and S(A,B) are two relations with r and s tuples, respectively (again, not necessarily distinct). If m is the number of (not necessarily distinct) tuples in the result of the SQL query: {R intersect S;} Then which of the following is the most restrictive, correct condition on the value of m?","m = min(r,s)",0 <= m <= r + s,"min(r,s) <= m <= max(r,s)","0 <= m <= min(r,s)",4,4,"Intersection size ranges from 0 up to min(r,s)"
178,"Suppose relation R(A,B,C,D,E) has the following functional dependencies: {A -> B, B -> C, BC -> A, A -> D, E -> A, D -> E}",A,E,"B, C",None of the mentioned,4,1,A alone can determine all attributes in R
179,Which of the following is an attribute that can uniquely identify a row in a table?,Secondary key,Candidate key,Foreign key,Alternate key,2,2,A candidate key uniquely identifies rows
180,Which of the following terms does refer to the correctness and completeness of the data in a database?,Data security,Data constraint,Data independence,Data integrity,4,4,Data integrity ensures accuracy and completeness
181,The relationship between DEPARTMENT and EMPLOYEE is a,One-to-one relationship,One-to-many relationship,Many-to-many relationship,Many-to-one relationship,2,2,One department can have many employees
182,A table can be logically connected to another table by defining a,Super key,Candidate key,Primary key,Unique key,3,3,A primary key in one table connects to another
183,"If the state of the database no longer reflects a real state of the world that the database is supposed to capture, then such a state is called",Consistent state,Parallel state,Durable state,Inconsistent state,4,4,Such mismatch leads to an inconsistent state
184,Ensuring isolation property is the responsibility of the,Recovery-management component of the DBMS,Concurrency-control component of the DBMS,Transaction-management component of the DBMS,Buffer management component in DBMS,2,2,Concurrency control ensures the isolation property
185,Which of the following is a NoSQL Database Type?,SQL,Document databases,JSON,All of the mentioned,2,2,Document databases are a NoSQL type
186,Point out the wrong statement.,Non Relational databases require that schemas be defined before you can add data,NoSQL databases are built to allow the insertion of data without a predefined schema,NewSQL databases are built to allow the insertion of data without a predefined schema,All of the mentioned,1,3,NewSQL generally still requires a predefined schema
187,"""Sharding"" a database across many server instances can be achieved with _______________",LAN,SAN,MAN,All of the mentioned,2,4,Sharding can occur over various networks
188,Most NoSQL databases support automatic __________ meaning that you get high availability and disaster recovery.,processing,scalability,replication,all of the mentioned,3,3,Most NoSQL databases support automatic replication
189,Which of the following are the simplest NoSQL databases?,Key-value,Wide-column,Document,All of the mentioned,1,1,Key-value databases are the simplest NoSQL type
190,"________ stores are used to store information about networks, such as social connections.",Key-value,Wide-column,Document,Graph,4,4,Graph stores model relationships like social networks
191,NoSQL databases is used mainly for handling large volumes of ______________ data.,unstructured,structured,semi-structured,all of the mentioned,1,1,They primarily handle large unstructured data
192,What does the BCNF decomposition algorithm do?,States a method to decompose a relation satisfying BCNF,States a method for joining two relations satisfying BCNF,States a method to decompose a relational schema such that there are no multiple occurrences,None of the mentioned,1,1,Outlines how to decompose a relation into BCNF
193,The 3NF decomposition algorithm is also called as _______,3NF normal algorithm,3NF synthesis algorithm,3NF generator,Functional dependence algorithm,2,2,It's called the 3NF synthesis algorithm
194,Which of the following is desirable in a database design with functional dependencies?,BCNF,Losslessness,Dependency preservation,All of the mentioned,4,4,"BCNF, losslessness, and dependency preservation are all desired"
195,The _______ is a set of all functional and multi values dependencies implied by a set of functional dependencies,Star,Closure,Derivation,Evolution,2,2,Closure is the set of all implied dependencies
196,A functional dependency f on R is _______ by a set of functional dependencies F on r if every instance of r(R) that satisfies f also satisfies F.,Logically Defined,Logically Derived,Logically implied,None of the mentioned,3,3,F logically implies f if it's always satisfied
197,"If F is a set of functional dependencies, then the closure of F is denoted by?",F*,Fo,F+,F,3,3,The closure of F is denoted F+
198,"If a functional dependency is reflexive, B is a subset of A and A is the set of attributes, then",B->A holds,A->B holds,AB->C holds,None of the mentioned,2,2,"If B subset of A, then A->B (reflexivity)"
199,"If A->B, A-> C then which of the following is true?",A->BC,A->B,A->C,All of the mentioned,4,1,"By union rule, A->B and A->C implies A->BC"
200,"If B is an attribute and A->B, Then B is said to be ________ by a.",Logically implied,Functionally implied,Logically determined,Functionally determined,4,4,B is functionally determined by A
201,We say that a decomposition having the property F'+ = F+ is a __________ decomposition.,Dependency losing,Dependency preserving,Lossless,None of the mentioned,2,2,"If F'+=F+, the decomposition is dependency preserving"
202,"A _________ Fc for F is a set of dependencies such that F logically implies all dependencies in Fc, and Fc logically implies all dependencies in F.",Canonical cover,Complete cover,Canonical dependency,Canonical clause,1,1,That minimal set is called the canonical cover
203,Which data structure is needed to convert infix notation to postfix notation?,Tree,Hashing,Stack,Queue,3,3,A stack is used to convert infix to postfix
204,What data structure would you most likely see in the non-recursive implementation of a recursive algorithm?,Stack,Linked List,Tree,Queue,1,1,Non-recursive versions use an explicit stack
205,"In a linked list, each node contains a minimum of two fields. One field is the data field; the second field is?",Pointer to character,Pointer to integer,Pointer to node,Node,3,3,Each node also stores a pointer to the next node
206,Which of the following real-world scenarios would you associate with a stack data structure?,Piling up of chairs,People standing in a line,Offer services based on priority,Tatkal Ticket Booking in IRCTC,1,1,Stacks operate like piling up chairs (LIFO)
207,What does 'stack underflow' refer to?,Accessing item from an undefined stack,Adding items to a full stack,Removing items from an empty stack,Index out of bounds exception,3,3,Underflow means popping from an empty stack
208,Array implementation of a stack is not dynamic. Which of the following statements supports this argument?,Space allocation for array is fixed,User unable to give input for stack ops,A runtime exception halts execution,Improper program compilation,1,1,"Array size is fixed, so it's not dynamic"
209,"In linked list implementation of a queue, where does a new element get inserted?",At the head of link list,At the center position in the link list,At the tail of the link list,At any position in the linked list,3,3,Insertions (enqueue) occur at the tail in a list-based queue
210,"In a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into a NONEMPTY queue?",Only front pointer,Only rear pointer,Both front and rear pointer,No pointer will be changed,2,2,Only the rear pointer changes in a nonempty queue insertion
211,"In a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into an EMPTY queue?",Only front pointer,Only rear pointer,Both front and rear pointer,No pointer will be changed,3,3,Both front and rear change when inserting into an empty queue
212,"In linked list implementation of a queue, from where is the item deleted?",At the head of link list,At the center position in the link list,At the tail of the link list,Node before the tail,1,1,Items are deleted from the head in a list-based queue
213,"In a queue, the important condition for a queue to be empty is?",FRONT is null,REAR is null,LINK is empty,FRONT==REAR-1,1,1,A null front pointer indicates an empty queue
214,The elements of a linked list are stored,In a structure,In an array,Anywhere the computer has space for them,In contiguous memory locations,3,3,They can reside anywhere in memory
215,The type of expression in which the operator succeeds its operands is?,Infix Expression,Prefix Expression,Postfix Expression,Both Prefix and Postfix Expressions,3,3,Postfix has operators after operands
216,"In infix to postfix conversion algorithm, the operators are associated from?",Right to left,Left to right,Center to left,Center to right,2,2,Generally operators have left-to-right associativity
217,What is a hash table?,A structure that maps values to keys,A structure that maps keys to values,A structure used for storage,A structure used to implement stack and queue,2,2,A hash table maps keys to values
218,What is direct addressing?,Distinct array position for every possible key,Fewer array positions than keys,Fewer keys than array positions,Same array position for all keys,1,1,Each key has a unique array index
219,What is a hash function?,A function has allocated memory to keys,A function that computes the location of the key in the array,A function that creates an array,A function that computes the location of the values in the array,2,2,It computes the index from the key
220,Which of the following is not a technique to avoid a collision?,Make the hash function appear random,Use the chaining method,Use uniform hashing,Increasing hash table size,4,4,Increasing table size is not a standard resolution method
221,What is the advantage of the hash table over a linked list?,Faster access of data,Easy to implement,Very efficient for less number of entries,Exhibit good locality of reference,1,1,Hashing enables fast lookups compared to linked lists
222,Which of the following trait of a hash function is most desirable?,It should cause less collisions,It should cause more collisions,It should occupy less space,It should be easy to implement,1,1,Fewer collisions means better hash performance
223,What is the hash function used in the division method?,h(k) = k/m,h(k) = k mod m,h(k) = m/k,h(k) = m mod k,2,2,Division method uses k mod m
224,Which of the following schemes does quadratic probing come under?,Rehashing,Extended hashing,Separate chaining,Open addressing,4,4,Quadratic probing is a form of open addressing
225,Which among the following is the best technique to handle collision?,Quadratic probing,Linear probing,Double hashing,Separate chaining,1,4,Separate chaining is often considered the best approach
226,What is the formula used in quadratic probing?,Hash key = key mod table size,Hash key=(hash(x)+F(i)) mod table size,Hash key=(hash(x)+F(i2)) mod table size,H(x) = x mod 17,3,3,"Quadratic probing uses hash(x)+i^2, modulo table size"
227,What is the hash function used in Double Hashing?,(h1(k) - i*h2(k))mod m,h1(k) + h2(k),(h1(k) + i*h2(k))mod m,(h1(k) + h2(k))mod m,3,3,Double hashing uses (h1(k)+i*h2(k)) mod m
228,Which of the following is not a collision resolution technique?,Separate chaining,Linear probing,Quadratic probing,Extendible hashing,4,4,"Extendible hashing is a dynamic hashing approach, not a basic collision resolution"
229,Which of the following operations are done in a hash table?,Insert only,Search only,Insert and search,Replace,3,,
230,Which of the following is identical to that of a separate chaining hash node?,Linked list,Array,Stack,Queue,1,1,Separate chaining hash nodes resemble linked lists.
231,Which of the following is a disadvantage of using separate chaining using linked lists?,It requires many pointers,It requires linked lists,It uses array,It does not resolve collision,1,1,"It requires extra pointers, increasing overhead."
232,What is a skip list?,A linked list with size value in nodes,A linked list that allows faster search within an ordered sequence,A linked list that allows slower search within an ordered sequence,A tree which is in the form of linked list,2,2,It is a linked list allowing faster searches.
233,The nodes in a skip list may have many forward references. Their number is determined,Probabilistically,Randomly,Sequentially,Orthogonally,1,1,The number of forward references is decided probabilistically.
234,Which of the following is an advantage of open addressing over separate chaining?,It is simpler to implement,Table never gets full,It is less sensitive to hash function,It has better cache performance,1,4,Open addressing has better cache performance than separate chaining.
235,How many children does a binary tree have?,2,Any number of children,0 or 1 or 2,0 or 1,3,3,"A binary tree node can have 0,1, or 2 children."
236,"To represent hierarchical relationship between elements, Which data structure is suitable?",Queue,Stack,Tree,Graph,3,3,Trees represent hierarchical relationships effectively.
237,What is/are the disadvantages of implementing tree using normal arrays?,Difficulty in knowing children nodes,Difficulty in finding the parent of a node,Have to know the maximum number of nodes before creation of trees,Difficult to implement,3,3,You must know the tree size beforehand with arrays.
238,Advantages of linked list representation of binary trees over arrays?,Dynamic size,Ease of insertion/deletion,Ease in randomly accessing a node,Both dynamic size and ease in insertion/deletion,4,4,Linked lists offer dynamic size and easy insertion or deletion.
239,Disadvantages of linked list representation of binary trees over arrays?,Randomly accessing is not possible,Extra memory for a pointer is needed,Difficulty in deletion,Random access is not possible and extra memory with every element,4,4,No random access and extra pointer memory per node.
240,"If binary trees are represented in arrays, what formula can be used to locate a left child, if the parent node has an index i?",2i+1,2i+2,i+1,i+2,1,1,Left child index is 2i+1 in array representation.
241,Using what formula can a parent node be located in an array?,(i+1)/2,(i-1)/2,i/2,2i/2,2,2,Parent index is (i-1)/2 in array representation.
242,Which of the following properties are obeyed by all three tree - traversals?,Left subtrees are visited before right subtrees,Right subtrees are visited before left subtrees,Root node is visited before left subtree,Root node is visited before right subtree,1,1,All traversals visit left subtree before right subtree.
243,"A binary search tree contains values 7, 8, 13, 26, 35, 40, 70, 75. Which one of the following is a valid post-order sequence of the tree provided the pre-order sequence as 35, 13, 7, 8, 26, 70, 40 and 75?","7, 8, 26, 13, 75, 40, 70, 35","26, 13, 7, 8, 70, 75, 40, 35","7, 8, 13, 26, 35, 40, 70, 75","8, 7, 26, 13, 40, 75, 70, 35",4,4,"Valid post-order is 8,7,26,13,40,75,70,35."
244,"In a binary search tree, which of the following traversals would print the numbers in the ascending order?",Level-order traversal,Pre-order traversal,Post-order traversal,In-order traversal,4,4,In-order traversal yields ascending order in a BST.
245,What is a full binary tree?,Each node has exactly zero or two children,Each node has exactly two children,All the leaves are at the same level,Each node has exactly one or two children,1,1,A full binary tree has zero or two children per node.
246,What is a complete binary tree?,Each node has exactly zero or two children,"A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from right to left","A binary tree, which is completely filled, with the possible exception of the bottom level, which is filled from left to right",A tree in which all nodes have degree 2,3,3,It's filled except possibly the last level from left to right.
247,Which of the following is false about a binary search tree?,The left child is always lesser than its parent,The right child is always greater than its parent,The left and right sub-trees should also be binary search trees,In order sequence gives decreasing order of elements,4,4,"In-order of a BST gives ascending, not descending order."
248,What is the main characteristic of a B Tree?,Each node has a variable number of children within a specified range,Nodes are arranged in a binary structure,Tree height is logarithmic in the number of elements,All nodes store the same number of keys,1,1,A B Tree node can have variable numbers of children.
249,"In a B Tree, what property does the order m define?",Maximum number of children a node can have,Maximum height of the tree,Maximum number of keys a node can have,Maximum number of nodes in the tree,1,1,Order m limits the maximum children in each B Tree node.
250,Which of the following operations can be performed efficiently using a B Tree?,Multiplication of sparse matrices,"Insertion, deletion, and search of keys in a database",Finding the shortest path in a graph,Balancing a binary search tree,2,2,"B Trees efficiently handle insertion, deletion, and search in databases."
251,What is a significant advantage of using B Trees in database systems?,They require less memory than binary search trees,They ensure minimal disk I/O operations,They do not require balancing,They can store any type of data without conversion,2,2,"B Trees minimize disk I/O operations, crucial for databases."
252,How do B+ Trees differ from B Trees?,"B+ Trees are binary trees, while B Trees are multi-way trees","In B+ Trees, all keys are stored in leaf nodes and internal nodes act as routing guides","B+ Trees do not allow duplicates, while B Trees do","B+ Trees have a fixed height, while B Trees have variable height",2,2,B+ Trees store keys in leaves; internal nodes are guides.
253,What is the advantage of B+ Trees over B Trees in terms of range queries?,B+ Trees require fewer comparisons for range queries,B+ Trees provide faster access to individual keys,"Leaf nodes of B+ Trees are linked, providing efficient full-range scans","B+ Trees have a simpler structure, making range queries more straightforward",3,3,Linked leaves in B+ Trees allow efficient range queries.
254,"In a B+ Tree, where are the actual records pointed to by the keys stored?",In every node,Only in root nodes,Only in internal nodes,Only in leaf nodes,4,4,B+ Trees keep actual records in their leaf nodes only.
255,Why are B+ Trees preferred in database indexing over B Trees?,B+ Trees provide faster insertion and deletion operations,The linked leaf nodes in B+ Trees make sequential access faster,B+ Trees require less disk space,B+ Trees are easier to implement,2,2,Linked leaf nodes in B+ Trees speed up sequential access.
256,What is the key property of an AVL Tree?,Every node has at most two children,The tree is a complete binary tree,The difference in height between the left and right subtrees of any node is at most 1,All leaf nodes are at the same level,3,3,An AVL Tree's height difference between subtrees is at most 1.
257,What is the time complexity of insertion in an AVL Tree?,O(1),O(log n),O(n),O(n log n),2,2,AVL insertion works in O(log n) time.
258,Which of the following operations can cause an AVL Tree to become unbalanced?,Searching for a node,Inserting a node,Traversing the tree,Computing the height of the tree,2,2,Inserting a node can unbalance an AVL Tree.
259,What mechanism is used to maintain the balance of an AVL Tree after insertion or deletion?,Red-Black balancing,Splay operation,Tree rotations,B-tree splitting,3,3,Rotations are used to rebalance an AVL Tree.
260,"In the context of AVL Trees, what is a rotation?",Swapping the values of two nodes,Moving a subtree to a different location,Changing the structure of the tree without altering the in-order sequence of elements,Changing the root of the tree,3,3,A rotation changes structure without altering in-order sequence.
261,What is the maximum number of rotations needed to balance an AVL Tree after a single insertion?,1,2,3,4,2,2,At most two rotations are needed after insertion.
262,How does the height of an AVL Tree compare to the height of a perfectly balanced binary tree?,It is always the same,It can be up to twice as large,"It can be larger, but no more than log n","It can be smaller, but no less than log n",3,3,AVL Trees are slightly taller but still O(log n).
263,Which of the following is true about the deletion operation in an AVL Tree?,It cannot cause the tree to become unbalanced,It may require rebalancing through rotations,It is always performed without rotations,It is less complex than deletion in a binary search tree,2,2,Deletion can require AVL Tree rebalancing using rotations.
264,What is a distinctive feature of a Red-Black Tree?,Each node is colored either red or black,Each node can have up to three children,The tree is always perfectly balanced,All leaf nodes are at the same depth,1,1,Red-Black Trees color each node either red or black.
265,Which of these properties must a Red-Black Tree satisfy?,Every red node must have two black child nodes,Every path from a node to its descendant NIL nodes has the same number of black nodes,All leaf nodes are black,All of the above,4,4,All listed properties apply to a Red-Black Tree.
266,What is the time complexity of insertion and deletion operations in a Red-Black Tree?,O(1),O(log n),O(n),O(n log n),2,2,Red-Black insert and delete run in O(log n).
267,What action is performed to maintain the Red-Black properties after an insertion or deletion?,Splitting the tree,Recoloring nodes and performing rotations,Swapping sibling nodes,Converting the tree to a binary search tree and then back to a red-black tree,2,2,Recoloring and rotations keep Red-Black properties after changes.
268,"In a Red-Black Tree, what does the property ""the tree has the same number of black nodes on any path from a node to a descendant leaf"" ensure?",The tree is perfectly balanced,"The tree is height-balanced, with the longest path no more than twice the length of the shortest path",All paths have the same length,The tree is a full binary tree,2,2,It ensures height balance by restricting black-node counts per path.
269,Which of the following operations may cause a violation of Red-Black Tree properties?,Searching for a node,Inserting a node,Traversing the tree,Computing the height of the tree,2,2,Inserting a node can break Red-Black rules.
270,What is the maximum height of a Red-Black Tree with n nodes?,2log?2(n+1),log?2n,n,2n,1,1,The maximum height is up to 2log2(n+1).
271,Why are Red-Black Trees important in computer science?,"They provide a worst-case guarantee for insertion, deletion, and search operations",They are easier to implement than binary search trees,They require less memory than AVL trees,They do not require rebalancing after every insertion or deletion,1,1,They guarantee worst-case O(log n) for basic operations.
272,What is a Splay Tree?,A tree where recently accessed elements are quick to access again,A perfectly balanced binary search tree,A binary tree with unique height properties,A tree where each node has exactly two children,1,1,A Splay Tree prioritizes recent elements for quicker access.
273,What is the key operation used in Splay Trees to maintain tree properties?,Splitting,Coloring,Splaying,Rotating,3,3,Splaying is the key operation in Splay Trees.
274,What does the splaying operation in a Splay Tree do?,Moves a node to the root through a series of rotations,Swaps two child nodes,Ensures all leaf nodes are at the same depth,Balances the tree perfectly after every operation,1,1,Splaying moves an accessed node to the root via rotations.
275,"What is the time complexity of search, insert, and delete operations in a Splay Tree in the amortized case?",O(1),O(log n),O(n),O(n log n),2,2,Splay Tree operations run in O(log n) amortized time.
276,Which of the following scenarios best demonstrates the advantage of a Splay Tree?,When the tree is accessed randomly and there are no frequently accessed nodes,When certain nodes are accessed frequently and need to be accessed quickly,When the tree is used for one-time write and read operations,When the tree requires frequent rebalancing to maintain strict height balance,2,2,Splay Trees excel when certain nodes are accessed frequently.
277,What property does a Splay Tree use to ensure that recently accessed elements are quick to access again?,The tree rebalances itself after every operation,Nodes are colored red or black to indicate their access frequency,Frequently accessed nodes are moved closer to the root,Leaf nodes are linked together for faster sequential access,3,3,They move frequently accessed nodes closer to the root.
278,"In a Splay Tree, what happens after an element is accessed (searched, inserted, or deleted)?",The tree is left unchanged,The accessed element is moved to the root of the tree,The tree is completely rebuilt,The accessed element is moved to a leaf position,2,2,The accessed node is splayed to the root.
279,Why might Splay Trees not be suitable in an environment with parallel or concurrent operations?,"Because the structure of the tree changes frequently, making it hard to predict",Because they are more memory-intensive than other trees,Because splay operations are not thread-safe,Because they do not support concurrent modifications well due to the restructuring after operations,4,1,Frequent structural changes complicate parallel or concurrent operations.
280,Which of the following is true about Depth-First Search (DFS) of a graph?,It traverses by exploring the highest-depth nodes first before backtracking,It can be implemented using a queue data structure,It is used to compute the shortest path in a graph,It can get trapped in loops or cycles if the graph is cyclic and not properly handled,4,1,DFS explores deeper layers first then backtracks.
281,What is the time complexity of Breadth-First Search (BFS) on a graph?,O(V),O(V + E),O(E),O(log V),2,2,BFS runs in O(V+E) time on a graph.
282,"In Breadth-First Search (BFS), which data structure is typically used to hold the nodes that are next to be visited?",Stack,Queue,Priority Queue,Linked List,2,2,A queue holds nodes to visit next in BFS.
283,Which of the following scenarios is more efficiently solved using Depth-First Search (DFS)?,Finding the shortest path in a weighted graph,Finding connected components in a graph,Finding the minimum spanning tree,Implementing Dijkstra`s algorithm,2,2,DFS efficiently finds connected components in a graph.
284,What is a key characteristic of Breadth-First Search (BFS)?,It is recursive,It visits nodes as far from the root as possible before backtracking,It can be used to detect cycles in a directed graph,It explores all neighbors of a node before moving on to the next level of nodes,4,4,BFS explores all neighbors before moving to the next level.
285,In which case would you prefer BFS over DFS?,When you need to find paths with the minimum number of edges,When the graph has cycles and you want to avoid getting trapped,When the solution is likely to be far from the root node,When memory usage is a critical concern,1,1,Use BFS to find a path with the least edges.
286,Which of the following statements about graph traversal is FALSE?,BFS can be used to find the shortest path in an unweighted graph,DFS can be implemented both recursively and iteratively,BFS always requires more memory than DFS,"In DFS, if a graph is tree-structured, the traversal visits every edge exactly twice",3,3,It's false that BFS always uses more memory than DFS.
287,Which data structure is used to implement a graph using an adjacency list?,Array,Linked List,Hash Table,Tree,2,2,Linked lists are commonly used in adjacency list graphs.
288,"In an adjacency matrix representation of a graph, how is an edge between vertices u and v represented?","By setting the value at position (u, v) to 0","By setting the value at position (u, v) to the weight of the edge or 1 if the graph is unweighted","By incrementing the value at position (u, v)",By inserting the value at the end of the matrix,2,2,"Position (u,v) is set to 1 or weight to indicate an edge."
289,What is the time complexity of adding a new edge in the adjacency list representation?,O(1),O(V),O(E),O(V + E),1,1,Adding an edge in adjacency list is O(1).
290,Which of the following statements is true for a dense graph (a graph where the number of edges is close to the maximum number of edges)?,Adjacency list representation is more space-efficient than adjacency matrix,Adjacency matrix representation is more space-efficient than adjacency list,Adjacency matrix representation takes more time for adding a new edge compared to adjacency list,Adjacency list representation takes more time for checking the existence of an edge compared to adjacency matrix,2,2,Adjacency matrix is more space-efficient for dense graphs.
291,"In an adjacency list representation, what does each index of the array represent?",An edge in the graph,A vertex in the graph,The weight of an edge,The total number of vertices,2,2,Each index represents a vertex in adjacency lists.
292,What is the space complexity of a graph with V vertices and E edges when using an adjacency matrix representation?,O(V),O(E),O(V + E),O(V^2),4,4,Adjacency matrix requires O(V^2) space.
293,Which representation is generally preferred for graphs with lots of vertices but few edges (sparse graphs)?,Adjacency Matrix,Adjacency List,Both are equally preferable,Neither of them is preferable,2,2,Adjacency lists are preferred for sparse graphs.
294,How is a self-loop (an edge that connects a vertex to itself) represented in an adjacency matrix?,"By setting the value at position (u, u) to 0","By setting the value at position (u, u) to 1 or the weight of the edge","By leaving the position (u, u) undefined","By setting the value at position (u, u) to -1",2,2,"Set (u,u) to 1 or weight for a self-loop."
295,What is the average time complexity of Quick Sort?,O(n^2),O(n log n),O(log n),O(n),2,2,Quick Sort averages O(n log n) time.
296,What is the worst-case time complexity of Quick Sort?,O(n^2),O(n log n),O(log n),O(n),1,1,Quick Sort's worst-case time is O(n^2).
297,"In Quick Sort, what is the purpose of the partition operation?",To divide the array into two halves,To sort the entire array,"To rearrange the elements so that all elements less than the pivot are on the left, and all greater are on the right",To find the maximum element of the array,3,3,The partition step rearranges elements around the pivot.
298,Which of the following is not a strategy for choosing a pivot in Quick Sort?,Always pick the first element as the pivot,Pick a random element as the pivot,Pick the median as the pivot,Pick the element with the highest value as the pivot,4,4,Picking the highest-value pivot is uncommon.
299,What is the main advantage of Quick Sort over other sorting algorithms like Merge Sort?,Quick Sort is easier to implement,Quick Sort uses less memory,Quick Sort is stable,Quick Sort has a better worst-case time complexity,2,2,Quick Sort generally uses less memory than Merge Sort.
300,What is a characteristic of Quick Sort when the pivot element is always the greatest or the smallest element?,It results in the best performance,It results in the worst performance,It does not change the performance,It makes Quick Sort a stable sort,2,2,Using extreme pivots leads to worst performance.
301,Which of the following is true about Quick Sort?,It is a stable sorting algorithm,It is a comparison-based sorting algorithm,It is not a comparison-based sorting algorithm,It uses a divide and conquer strategy but does not combine the results,2,2,Quick Sort is a comparison-based sorting method.
302,What is the space complexity of Quick Sort in its general implementation (not the in-place version)?,O(n),O(log n),O(1),O(n log n),2,1,General Quick Sort may use O(n) space.
303,What is the time complexity of building a heap for Heap Sort?,O(n log n),O(n),O(log n),O(n^2),2,2,Building a heap takes O(n) in Heap Sort.
304,What is the worst-case time complexity of Heap Sort?,O(n),O(n log n),O(log n),O(n^2),2,2,Heap Sort's worst-case time is O(n log n).
305,Heap Sort is primarily implemented using which data structure?,Array,Linked List,Binary Tree,Complete Binary Heap,4,,
306,Which of the following is a characteristic of a max heap used in Heap Sort?,The value of each node is greater than or equal to the values of its children,The value of each node is less than or equal to the values of its children,All leaf nodes are at the same level,"All levels of the tree, except possibly the last one, are fully filled",1,1,A max heap ensures the parent is larger than or equal to its children.
307,"In Heap Sort, after the initial build heap phase, where is the largest element of the heap?",At the end of the array,At the start of the array,At the middle of the array,At the root of the heap,2,4,"After build heap, the largest element is at the root."
308,What does the Heapify process do in Heap Sort?,It sorts the entire array,It swaps the first and last elements of the heap,It creates a new heap from an unordered array,It maintains the heap property by adjusting the position of elements in the heap,4,4,Heapify keeps the heap property by rearranging elements.
309,What is the space complexity of Heap Sort?,O(n),O(log n),O(1),O(n log n),3,3,"Heap Sort requires constant extra space, O(1)."
310,Which of the following statements is true regarding Heap Sort?,Heap Sort is a stable sorting algorithm,Heap Sort is not a comparison-based sorting algorithm,Heap Sort is an in-place sorting algorithm,Heap Sort performs better than Quick Sort in all cases,3,3,Heap Sort is in-place but not stable.
311,What is the time complexity of Merge Sort in the worst-case scenario?,O(n),O(n log n),O(log n),O(n^2),2,2,Merge Sortâ€™s worst-case time is O(n log n).
312,Merge Sort is a classic example of which algorithmic principle?,Dynamic Programming,Greedy Algorithm,Divide and Conquer,Backtracking,3,3,It follows divide and conquer to split and merge.
313,Which of the following is true about the space complexity of Merge Sort?,It`s in-place and uses O(1) extra space,It uses O(n) extra space,It uses O(log n) extra space,It uses O(n log n) extra space,2,2,Merge Sort needs O(n) extra space for merging.
314,"During the merge process in Merge Sort, what happens?",The array is divided into two halves,The individual elements are sorted,Two sorted arrays are combined into one sorted array,The entire array is sorted at once,3,3,The merge step combines two sorted arrays into one.
315,What is a significant advantage of Merge Sort?,It is the fastest sorting algorithm,It has the least space complexity among all sorting algorithms,It is a stable sort,It works best on linked lists,3,3,"Merge Sort is stable, preserving element order."
316,Which of the following is NOT a characteristic of Merge Sort?,It has a consistent running time regardless of the initial order of the elements,It is usually faster than Quick Sort for small datasets,It requires additional memory for the temporary array used during the merge process,It is an in-place sorting algorithm,4,4,"Merge Sort is not in-place, requiring extra space."
317,"In the context of Merge Sort, what does the conquer step involve?",Dividing the array into smaller subarrays,Combining the sorted subarrays into a single sorted array,Sorting the individual subarrays,Swapping elements to ensure the array is sorted,2,3,Conquer step sorts the subarrays after division.
318,How does Merge Sort perform on linked lists compared to arrays?,It performs worse because it`s not a stable sort,It performs better because it doesn`t require random access,Performance is the same as arrays,It cannot be applied to linked lists,2,2,Merge Sort performs better on linked lists due to no random access.
319,What is the time complexity of the Brute Force Pattern Matching algorithm in the worst-case scenario?,O(n),O(m),O(n + m),O(nm),4,4,"Brute Force worst-case matches each position, O(nm)."
320,"In the context of Brute Force Pattern Matching, what does n represent?",The length of the pattern,The length of the text,The number of matches found,The number of comparisons made,2,2,"In pattern matching, n is the text length."
321,Which of the following best describes the Brute Force Pattern Matching algorithm?,It pre-processes the pattern to improve matching efficiency,It matches the pattern against the text by checking for a match starting at each position in the text,It uses a hash function to match the pattern with the text,It requires additional memory proportional to the size of the pattern,2,2,It checks for a match at every text position.
322,"In Brute Force Pattern Matching, what happens if a mismatch is found?",The algorithm tries to match the next character of the pattern,The pattern is shifted by one position in the text and the matching process starts again,The text is pre-processed again,The algorithm terminates immediately,2,2,"On mismatch, shift pattern by one and retry."
323,What is a major disadvantage of the Brute Force Pattern Matching algorithm?,It cannot handle large patterns,It is too complex to implement,It has a high time complexity in the worst-case scenario,It requires additional space equal to the size of the text,3,3,It suffers from high worst-case time complexity.
324,When is the Brute Force Pattern Matching algorithm considered efficient?,When the pattern is significantly longer than the text,When the pattern and the text are of similar length,When the pattern is short and the alphabet size is large,When multiple patterns need to be matched in the same text,3,3,Itâ€™s efficient when pattern is short and alphabet is large.
325,Which of the following is true about the Brute Force Pattern Matching algorithm?,It requires pre-processing of the text,It is the most efficient pattern matching algorithm in all cases,It does not require any additional memory,It can be optimized to skip some comparisons,3,3,Brute Force needs no extra memory beyond pattern and text.
326,What is the space complexity of the Brute Force Pattern Matching algorithm?,O(1),O(n),O(m),O(nm),1,1,Its space complexity is O(1).
327,What aspect of the Boyer-Moore algorithm makes it perform faster than the Brute Force Pattern Matching algorithm in many cases?,The use of a prefix table,The use of hash functions,The use of Bad Character and Good Suffix heuristics,The use of dynamic programming,3,3,Boyer-Moore uses Bad Character and Good Suffix heuristics.
328,What is the best-case time complexity of the Boyer-Moore Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(m),1,1,Its best-case time can be O(n/m).
329,What does the Bad Character Heuristic in the Boyer-Moore algorithm do?,It shifts the pattern by one position when a mismatch occurs,It shifts the pattern to align the last occurrence of the mismatched character in the pattern with the text,It skips alignments that would result in a mismatch,It pre-processes the pattern to find all bad characters,2,2,Bad Character Heuristic aligns pattern with last occurrence of mismatched character.
330,What does the Good Suffix Heuristic in the Boyer-Moore algorithm do?,It shifts the pattern based on the information gathered from the matched part of the pattern,It compares the characters from the start of the pattern,It ignores the suffix of the pattern,It shifts the pattern by the length of the good suffix,1,1,Good Suffix Heuristic shifts pattern using info from matched suffix.
331,Which of the following is true about the preprocessing phase of the Boyer-Moore algorithm?,It only computes the bad character table,It only computes the good suffix table,It computes both the bad character and good suffix tables,No preprocessing is done in Boyer-Moore algorithm,3,3,It preprocesses both bad character and good suffix tables.
332,"In the context of the Boyer-Moore algorithm, what is the significance of the rightmost occurrence of a character?",It determines how the pattern should be aligned upon a mismatch,It is used to compute the good suffix table,It indicates the end of the pattern,It is used to start the search from the right end of the pattern,1,1,It guides how far the pattern shifts on mismatch.
333,What is the worst-case time complexity of the Boyer-Moore Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(mn),2,4,Boyer-Mooreâ€™s worst-case time is O(mn).
334,Why is the Boyer-Moore algorithm generally faster than other pattern matching algorithms for long patterns?,Because it always processes every character of the text,Because it does not process every character of the text in the worst case,Because it uses extra memory to store the pattern,Because it uses a hash function to match the pattern with the text,2,2,"It often skips many characters, avoiding full scans."
335,What is the key concept behind the KMP algorithm that improves its efficiency compared to brute force pattern matching?,Skipping comparisons based on partial matches,Using a hash function to match the pattern,Shifting the pattern by the length of the mismatch,Recursively dividing the text into smaller parts,1,1,KMP skips redundant comparisons by leveraging partial matches.
336,What does the prefix table (also known as the failure function or LPS array) in the KMP algorithm store?,The length of the longest prefix which is also a suffix for each substring of the pattern,The index of the next character to be compared in the text,The number of characters to be skipped for each mismatch,The hash values of all the prefixes of the pattern,1,1,It stores lengths of longest prefix-suffix matches at each position.
337,What is the time complexity of the preprocessing phase (building the prefix table) in the KMP algorithm?,O(n),O(m),O(n + m),O(m^2),2,2,Building the prefix table costs O(m).
338,"During the pattern matching phase, if a mismatch occurs at position m in the pattern and position n in the text, how does the KMP algorithm proceed?",It starts matching again from the beginning of the pattern,It shifts the pattern by m positions and continues matching,It uses the prefix table to determine the next position in the pattern to compare,It reverses the pattern and starts matching again,3,3,KMP uses the prefix table to pick the next pattern position.
339,What is the worst-case time complexity of the KMP Pattern Matching algorithm?,O(n/m),O(n + m),O(n),O(mn),2,2,Its worst-case time is O(n + m).
340,"In the KMP algorithm, if the prefix table at a position i has a value k, what does it imply?",The next character to match in the text is at position k,The next character to match in the pattern is at position k,The length of the longest proper prefix which is also a suffix up to position i is k,k characters should be skipped in the text,3,3,Itâ€™s the length of the longest proper prefix which is also a suffix.
341,How does the KMP algorithm handle the occurrence of a mismatch?,By backtracking in the text,By backtracking in the pattern,By using the prefix table to skip unnecessary comparisons in the pattern,By restarting the search from the next character in the text,3,3,KMP uses the prefix table to avoid re-checking text chars.
342,Why is the KMP algorithm considered efficient for pattern matching in strings?,It never reexamines a character in the text that has already been examined,It uses a binary search mechanism,It sorts the pattern and the text before matching,It compares the pattern and text character by character without skipping,1,1,KMP never re-reads characters in the text.
343,What is the primary advantage of using a standard trie for storing strings?,Efficient memory usage,Fast search times for prefixes,In-order traversal of strings,Quick sort of strings,2,2,Standard tries let fast prefix lookups.
344,"In a standard trie, each node typically represents what?",A full string from the root to the node,A single character,The end of a string,A hash value of the string,2,2,Each trie node usually represents one character.
345,What is the main difference between a standard trie and a compressed trie (also known as a radix tree)?,Compressed tries store entire strings at each node,Compressed tries combine a sequence of nodes with only one child into a single node,Compressed tries do not allow for the insertion of new strings,Compressed tries require more memory than standard tries,2,2,Compressed tries merge paths with a single child into one node.
346,How does a compressed trie (radix tree) improve upon the space efficiency of a standard trie?,By eliminating all leaf nodes,By using a linked list instead of tree nodes,By merging nodes with single children into one node,By storing characters as bits instead of full characters,3,3,"They merge single-child chains, saving space."
347,What does a suffix trie of a string S represent?,All prefixes of S,All suffixes of S,All substrings of S,All anagrams of S,2,2,A suffix trie represents all suffixes of the string.
348,Which of the following operations can be performed efficiently using a suffix trie?,Finding the longest repeated substring in a string,Sorting a list of unrelated strings,Finding the minimum element in a numeric array,Balancing a binary search tree,1,1,Finding longest repeated substrings is efficient with a suffix trie.
349,What is a potential drawback of using suffix tries?,They cannot store certain types of strings,They can be space-inefficient due to storing all suffixes,They do not support search operations,They only work with binary alphabets,2,2,They can use large space storing every suffix.
350,"In the context of suffix tries, how is the substring search operation performed?",By checking each node for the substring,By traversing the path that corresponds to the characters of the substring,By reversing the trie and searching from the end,By converting the trie into a suffix array and searching,2,2,Search by traversing the path for each character of the substring.
351,"In an E-R diagram, double lines indicate",Total participation,Multiple participation,Cardinality N,None of the above,1,1,Double lines in E-R denote total participation.
352,Relationships among relationships can be represented in an E-R model using,Aggregation,Association,Weak entity sets,Weak relationship sets,1,1,Aggregation represents relationships among relationships.
353,"In the relational model, cardinality is termed as:",Number of tuples,Number of attributes,Number of tables,Number of constraints,1,1,Cardinality in relational model is the number of tuples.
354,"In the architecture of a database system, external level is the",Physical level,Logical level,Conceptual level,View level,4,4,The external level is the view level.
355,An entity set that does not have sufficient attributes to form a primary key is a,Strong entity set,Weak entity set,Simple entity set,Primary entity set,2,2,A weak entity set lacks sufficient attributes for a key.
356,"In a Hierarchical model, records are organized as",Graph,List,Links,Tree,4,4,Hierarchical model arranges records in a tree structure.
357,"In an E-R diagram, attributes are represented by",Rectangle,Square,Ellipse,Triangle,3,3,Attributes in E-R diagrams are shown as ellipses.
358,"In an E-R diagram, an entity set is represented by a",Rectangle,Ellipse,Diamond box,Circle,1,1,An entity set is represented by a rectangle.
359,A relational database developer refers to a record as,A criteria,A relation,A tuple,An attribute,3,3,A record in a relational model is a tuple.
360,Which of the following are the properties of entities?,Groups,Table,Attributes,Switchboards,3,3,Entities have attributes that describe them.
361,Which operation is used if we are interested in only certain columns of a table?,PROJECTION,SELECTION,UNION,JOIN,1,1,PROJECTION picks specific columns from a table.
362,Which database level is closest to the users?,External,Internal,Physical,Conceptual,1,1,External level is closest to users.
363,Which are the two ways in which entities can participate in a relationship?,Passive and active,Total and partial,Simple and Complex,All of the above,2,2,Entities can have total or partial participation.
364,"In an E-R diagram, derived attributes are represented by",Ellipse,Dashed ellipse,Rectangle,Triangle,2,2,Derived attributes appear as dashed ellipses.
365,"In an E-R diagram, a relationship type is represented by",Ellipse,Dashed ellipse,Rectangle,Diamond,4,4,A relationship is shown in a diamond.
366,Hierarchical model is also called,Tree structure,Plex structure,Normalize structure,Table structure,1,1,Hierarchical model is called a tree structure.
367,"In an E-R diagram, generalization is represented by",Ellipse,Dashed ellipse,Rectangle,Triangle,4,4,Generalization is shown using a triangle.
368,"The attribute name could be structured as an attribute consisting of first name, middle initial, and last name. This type of attribute is called",Simple attribute,Composite attribute,Multivalued attribute,Derived attribute,2,2,An attribute split into subdivisions is composite.
369,The attribute AGE is calculated from DATE_OF_BIRTH. The attribute AGE is,Single valued,Multi valued,Composite,Derived,4,4,AGE is derived from DATE_OF_BIRTH.
370,"Student(ID, name, dept_name, tot_credits): In this schema, which attributes form the primary key?",Name,Dept,Tot_cred,ID,4,4,ID is the primary key for Student.
371,"The operation allows the combining of two relations by merging pairs of tuples, one from each relation, into a single tuple.",Select,Join,Union,Intersection,2,2,Join merges related tuples into one result.
372,"The result of which operation contains all pairs of tuples from the two relations, regardless of whether their attribute values match?",Join,Cartesian product,Intersection,Set difference,2,2,Cartesian product pairs all tuples without matching requirement.
373,Which of the following creates a virtual relation for storing the query?,Function,View,Procedure,None of the mentioned,2,2,A view creates a virtual relation.
374,Which of the following is the syntax for views where v is the view name?,"Create view v as ""query name"";","Create ""query expression"" as view;","Create view v as ""query expression"";","Create view ""query expression"";",3,3,"Correct syntax: Create view v as ""query expression"";"
375,Updating the value of the view,Will affect the relation from which it is defined,Will not change the view definition,Will not affect the relation from which it is defined,Cannot determine,1,1,Changing an updatable view updates the base relation.
376,SQL view is said to be updatable if which of the following conditions are satisfied by the query defining the view?,The from clause has only one database relation,The query does not have a group by or having clause,"The select clause contains only attribute names of the relation and does not have any expressions, aggregates, or distinct specification",All of the mentioned,4,4,All conditions must be met for an updatable view.
377,"An entity in A is associated with at most one entity in B, and an entity in B is associated with at most one entity in A. This is called as",One-to-many,One-to-one,Many-to-many,Many-to-one,2,2,This describes a one-to-one relationship.
378,A key which is a set of one or more columns that can identify a record uniquely is called?,Natural key,Candidate key,Not Null key,Alternate key,2,2,A candidate key uniquely identifies a record.
379,"If two relations R and S are joined, then the non-matching tuples of both R and S are ignored in",Left outer join,Right outer join,Full outer join,Inner join,4,4,Inner join ignores non-matching tuples in both relations.
380,The common column is eliminated in,Theta join,Outer join,Natural join,Composed join,3,3,Natural join removes the duplicate common column.
381,Which of the following makes the transaction permanent in the database?,View,Commit,Rollback,Flashback,2,,
382,"In order to undo the work of a transaction after the last commit, which one should be used?",View,Commit,Rollback,Flashback,3,3,Reverts changes after the last commit.
383,What is ACID properties of Transactions?,"Atomicity, Consistency, Isolation, Database","Atomicity, Consistency, Isolation, Durability","Atomicity, Consistency, Inconsistent, Durability","Automatically, Concurrency, Isolation, Durability",2,2,"Atomicity, Consistency, Isolation, Durability."
384,"In order to maintain the consistency during transactions, database provides",Commit,Atomic,Flashback,Retain,2,2,Ensures transactions operate as a single unit.
385,Database locking concept is used to solve the problem of,Lost Update,Uncommitted Dependency,Inconsistent Data,All of the above,4,4,Locks help prevent all these anomalies.
386,A lock that allows concurrent transactions to access different rows of the same table is known as a,Field-level lock,Row-level lock,Table-level lock,Database-level lock,1,2,Locks individual rows for concurrent access.
387,Which of the following systems is responsible for ensuring durability?,Recovery system,Atomic system,Concurrency control system,Compiler system,1,1,Recovery system secures committed data.
388,Which of the following systems is responsible for ensuring isolation?,Recovery system,Atomic system,Concurrency control system,Compiler system,3,3,Concurrency control maintains transaction isolation.
389,A transaction for which all committed changes are permanent is called:,Atomic,Consistent,Isolated,Durable,4,4,Changes remain permanent once committed.
390,Concurrency control is important for which of the following reasons?,To ensure data integrity when updates occur to the database in a multiuser environment,To ensure data integrity when updates occur to the database in a single-user environment,To ensure data integrity while reading data occurs to the database in a multiuser environment,To ensure data integrity while reading data occurs to the database in a single-user environment,1,1,Maintains data integrity in multiuser environments.
391,Locking may cause which of the following problems?,Erroneous updates,Deadlock,Versioning,All of the above,2,2,Locking can lead to deadlock situations.
392,When is a timestamp allotted?,When execution begins,When execution is taking place,When execution is completed,None of the mentioned,1,1,The timestamp is assigned at start.
393,"If a schedule S can be transformed into a schedule S' by a series of swaps of non-conflicting instructions, then S and S' are",Non-conflict equivalent,Equal,Conflict equivalent,Isolation equivalent,3,3,They are conflict equivalent schedules.
394,What is the primary purpose of an index in a database?,To sort data,To speed up data retrieval operations,To enforce data integrity,To create backups,2,2,Designed to speed data retrieval.
395,Which indexing method is best suited for exact-match queries?,Tree-based indexing,Hash-based indexing,Bitmap indexing,None of the above,2,2,Hash-based indexing suits exact matches.
396,Which data structure is commonly used in Tree-based indexing?,Array,Linked List,B-Tree or B+ Tree,Hash Table,3,3,Typically uses B-Tree or B+Tree structures.
397,Which of the following queries is Hash-based indexing NOT well-suited for?,Equality queries,Range queries,Point queries,Both A and C,2,2,Hashing is weak for range queries.
398,What is a 'bucket' in the context of Hash-based indexing?,A collection of databases,A collection of keys,A collection of tables,A slot where data can be inserted or retrieved,4,4,A slot used for insertion/retrieval.
399,What is the key feature of B-Trees?,The tree is always balanced,The tree allows duplicates,The tree is unbalanced but can be balanced manually,The tree grows in a random fashion,1,1,B-Trees remain balanced automatically.
400,Which of the following is NOT a type of indexing in DBMS?,Clustered Indexing,Unclustered Indexing,Bounded Indexing,Composite Indexing,3,3,Bounded Indexing is not used.
401,What does a leaf node in a B+ Tree contain?,Only keys,Only data pointers,Both keys and data pointers,Neither keys nor data pointers,3,3,Leaf nodes have keys and pointers.
402,Which of the following can be a disadvantage of indexing?,Faster data retrieval,Increased storage space,Improved data integrity,Faster data insertion,2,2,It consumes extra storage space.
403,In which type of index are data and index entries stored together?,Clustered Index,Non-Clustered Index,Hash Index,Bitmap Index,1,1,Clustered index stores data with index.
404,A unit of storage that can store one or more records in a hash file organization is denoted as:,Buckets,Disk pages,Blocks,Nodes,1,1,Known as buckets in hash files.
405,The file organization which allows us to read records that would satisfy the join condition by using one block read is:,Heap file organization,Sequential file organization,Clustering file organization,Hash file organization,3,3,Clustering allows quicker join reads.
406,Which file organization allows records to be stored in any available location?,Sequential,Direct,Heap,Clustered,3,3,Heap stores records anywhere available.
407,In which file organization are records stored sequentially based on a key field?,Sequential,Indexed Sequential,Direct,Heap,1,1,Stored sequentially by a key field.
408,Which file organization is efficient for range queries?,Hashing,Heap,Indexed Sequential,Direct,3,3,Indexed Sequential is good for ranges.
409,"In Hashing, the function used to determine the storage location of a record is called:",Hash Function,Key Function,Address Function,Sorting Function,1,1,The hash function decides location.
410,Which of the following file organizations allows for quick retrieval based on a unique key?,Heap,Hashing,Indexed Sequential,Sequential,2,2,Hashing provides quick key-based access.
411,"In Indexed Sequential Access Method (ISAM), what is used to locate primary and secondary records?",Key values,Indices,Hash Values,Memory Addresses,2,2,ISAM uses indices for record lookup.
412,Which file organization does not require sorting of data?,Sequential,Indexed Sequential,Heap,Clustered,3,3,Heap needs no data sorting.
413,"In which file organization is data stored in a sorted manner, but allows for additional data to be added easily?",Sequential,Direct,Heap,Dynamic Sequential,4,4,Dynamic Sequential is sorted yet flexible.
414,What is a drawback of sequential file organization?,Slow read,High storage cost,Slow insert and update,All of the above,3,3,Sequential files slow inserts and updates.
415,"In a Clustered file organization, records from multiple tables that share a common field are stored together in:",Blocks,Buckets,Pages,Clusters,4,4,Such groups are called clusters.
416,Which type of index is created automatically when a primary key constraint is defined?,Clustered Index,Non-Clustered Index,Composite Index,Bitmap Index,1,1,A primary key often creates clustered index.
417,What is the primary purpose of query optimization?,Reduce disk storage,Reduce query execution time,Ensure data integrity,None of the above,2,2,The goal is faster query processing.
418,What is the disadvantage of using too many indexes on a table?,Reduced disk storage,Faster data retrieval,Slower data modification operations,Improved data integrity,3,3,Excess indexes slow modifications.
419,What is heap file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,1,1,Places records wherever space is free.
420,What is sequential file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,2,2,Records follow a specified sequence.
421,What is hashing file organization?,Any record can be placed wherever there is a space for the record,Records are stored in a sequential order according to a search key,A hash function is computed on some attribute and that decides the block,None of the mentioned,3,3,Hash function determines the block.
422,What is the primary disadvantage of a clustered index?,Slower updates and inserts,Increased storage space,Slower data retrieval,None of the above,1,1,Physical ordering slows inserts and updates.
423,What is a secondary index primarily used for?,To enforce data integrity,To speed up data retrieval without affecting physical data order,To reduce storage space,To sort the data physically in the table,2,2,Improves lookup without affecting ordering.
424,"In a secondary index, each entry is a pair consisting of:",A secondary key and a list of block pointers,A primary key and a data pointer,A secondary key and a data pointer,A primary key and a list of block pointers,1,3,It pairs secondary key with data pointer.
425,Which of the following types of index allows for non-unique values?,Primary Index,Clustered Index with a primary key,Secondary Index,None of the above,3,3,Secondary indexes can have duplicates.
426,What does a clustered index do?,Sorts the data rows in the table,Creates a separate structure to hold index and data,Allows for faster bitmap operations,Stores data out-of-order for optimized retrieval,1,1,Physically arranges rows by key.
427,"SC is incremented with every positive clock transition, unless its ____________________ is active.",CLK input (1),CLR input (2),INC input (3),Enable input (4),2,2,SC stops incrementing if CLR is active.
428,1010 1100 (logic operand) using this digits find out Selective Complement,1000 (NOR Micro Operation)(1),0110 (Ex-OR Micro Operation)(2),0111 (OR Micro Operation)(3),1110 (NAND Micro Operation)(4),2,2,XORing 1010 and 1100 yields 0110.
429,A computer system is sometimes subdivided into _______________________ and ______________________.,Hardware and Software (1),Hardware and Microware (2),Software and Registers (3),None of the above (4),1,1,Typically divided into hardware and software.
430,Register instructions & Input-output instructions have an operation code recognized by the control when D7=and I =,"110, 0/1 (1)","101, 0/1 (2)","111, 0/1 (3)","000, 0/1 (4)",3,3,Opcode 111 for register/I-O with I=0/1.
431,One way of constructing a common bus system is with,Tri State Buffer (1),Multiplexer (2),Both a & b (3),None of the above (4),3,3,Either tri-state buffers or multiplexers.
432,Symbolic representation of Subtraction operation,R3 <- R1 - R2 (1),"R3 <- R1, R2 (2)",R3 <- R1 * R2 (3),R3 <- R1 (4),1,1,R3 <- R1 - R2 represents subtraction.
433,P: R1 <-- R1 + R2 in this statement P: is a,Symbol (1),Notation (2),Control Signal (3),Control Point (4),3,3,P: is the control signal for operation.
434,RTL stands for:,Random transfer language (1),Register transfer language (2),Arithmetic transfer language (3),All of these (4),2,2,RTL is register transfer language.
435,"Which operations are used for addition, subtraction, increment, decrement, and complement function:",Bus (1),Memory transfer (2),Arithmetic operation (3),All of these (4),4,3,These are arithmetic micro-operations.
436,Which language is termed as the symbolic depiction used for indicating the series:,Random transfer language (1),Register transfer language (2),Arithmetic transfer language (3),All of these (4),2,2,Register transfer language is symbolic notation.
437,In which transfer the computer register are indicated in capital letters for depicting its function:,Memory transfer (1),Register transfer (2),Bus transfer (3),None of these (4),2,2,Register transfer shows registers in caps.
438,The register that includes the address of the memory unit is termed as the ____:,MAR (1),PC (2),IR (3),None of these (4),1,1,MAR holds the memory address.
439,The register for the program counter is signified as_____:,MAR (1),PC (2),IR (3),None of these (4),2,2,PC is the program counter register.
440,In register transfer the instruction register as:,MAR (1),PC (2),IR (3),None of these (4),3,3,IR stores the current instruction.
441,How many types of micro operations:,2 (1),4 (2),6 (3),8 (4),2,2,There are four types of micro-operations.
442,Which are the operations that a computer performs on data that is put in a register:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),4,4,"Register, arithmetic, and logical operations."
443,Which micro-operation carries information from one register to another:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),1,1,Moves content from one register to another.
444,Micro operation is shown as:,R1 -> R2 (1),R1 <- R2 (2),Both (3),None (4),2,3,Both notations R1->R2 or R1<-R2 are used.
445,"In memory read, the operation puts memory address onto a register known as:",PC (1),ALU (2),MAR (3),All of these (4),3,3,MAR receives the address on read.
446,Which operation puts memory address in memory address register and data in DR:,Memory read (1),Memory write (2),Both (3),None (4),2,1,"Memory read loads address in MAR, data in DR."
447,Arithmetic operations are carried out by such micro-operations on stored numeric data available in:,Register (1),Data (2),Both (3),None (4),1,1,Arithmetic uses data already in registers.
448,"In arithmetic operation, numbers of registers and the circuits for addition are at _____:",ALU (1),MAR (2),Both (3),None (4),1,1,The ALU holds registers and adders.
449,A micro-operation every bit of a register is a:,Constant (1),Variable (2),Both (3),None (4),2,2,Each bit is treated as a variable.
450,Which operation is extremely useful in the serial transfer of data:,Logical micro-operation (1),Arithmetic micro-operation (2),Shift micro-operation (3),None of these (4),3,3,Shift operations aid serial data transfer.
451,Which language specifies a digital system that uses specified notation:,Register transfer (1),Arithmetic (2),Logical (3),All of these (4),1,1,Register transfer language uses specified notation.
452,Which addressing mode executes its instructions within CPU without the necessity of reference memory for operands?,Implied Mode (1),Immediate Mode (2),Direct Mode (3),Register Mode (4),4,4,Register mode avoids extra memory references.
453,How is the effective address of base-register calculated?,By addition of index register contents to the partial address in instruction (1),By addition of implied register contents to the partial address in instruction (2),By addition of index register contents to the complete address in instruction (3),By addition of implied register contents to the complete address in instruction (4),1,1,Sum base register plus partial address.
454,EA stands for:,Effective add (1),Effective absolute (2),Effective address (3),End address (4),3,3,EA stands for effective address.
455,In which addressing the operand is actually present in instruction:,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),1,1,Immediate mode embeds operand in code.
456,In which addressing the simplest addressing mode where an operand is fetched from memory is_____,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),2,2,Direct mode fetches operand from memory.
457,Which addressing is a way of direct addressing:,Immediate addressing (1),Direct addressing (2),Register addressing (3),None of these (4),3,,
458,In which mode the main memory location holds the EA of the operand:,Immediate addressing (1),Direct addressing (2),Register addressing (3),Indirect addressing (4),4,4,The memory location stores the effective address in indirect addressing.
459,Which control refers to the track of the address of instructions:,Data control (1),Register control (2),Program control (3),None of these (4),3,3,Program control tracks instruction addresses via the program counter.
460,In program control the instruction is set for the statement in a:,Parallel (1),Sequence (2),Both (3),None (4),2,2,Instructions typically execute in a sequence.
461,How many types of unconditional jumps used in program control are follows:,1 (1),2 (2),3 (3),4 (4),3,2,There are generally two types of unconditional jumps.
462,Which carry is similar to rotate without carry operations:,Rotate carry (1),Rotate through carry (2),Both (3),None (4),2,1,Rotate carry is essentially rotate without reinserting carry.
463,"In the case of a left arithmetic shift, zeros are shifted to the ______:",Left (1),Right (2),Up (3),Down (4),2,2,A left arithmetic shift inserts zeros on the right side.
464,"In the case of a right arithmetic shift, the sign bit values are shifted to the_____",Left (1),Right (2),Up (3),Down (4),1,2,A right arithmetic shift replicates the sign bit on the right.
465,"In micro-programmed approach, the signals are generated by ______",Machine instructions (1),System programs (2),Utility tools (3),None of the mentioned (4),1,4,Microinstructions (not listed) produce the signals in micro-programmed control.
466,The 2's complement of 1101100 is,0010011 (1),0010100 (2),1100011 (3),0010110 (4),2,2,Inverting 1101100 and adding 1 yields 0010100.
467,"The first part represents a signed, fixed-point number called the",Signed (1),Magnitude (2),Exponent (3),Mantissa (4),4,4,The first part is the mantissa in floating-point format.
468,The string of digits 101101 convert into decimal number,43 (1),47 (2),45 (3),41 (4),3,3,101101 in binary is 45 decimal.
469,Convert the 237 of octal number into Hexadecimal number,0F9 (1),09E (2),09F (3),08F (4),3,3,"Octal 237 is decimal 159, which is 9F in hex."
470,A code in which the total number of 1s in a valid (n+1)bit code word is odd and this code is called an?,Error detecting code,Even parity code,Odd parity code,None of these,3,3,Odd parity code ensures the total number of 1 bits is odd.
471,Which method/s of representation of numbers occupies large amount of memory than others?,Sign-magnitude (1),1's complement (2),2's complement (3),1's & 2's complement (4),1,1,Sign-magnitude representation uses an additional sign mechanism.
472,Which representation is most efficient to perform arithmetic operations on the numbers?,Sign-magnitude (1),1's complement (2),2's complement (3),None of the mentioned (4),3,3,2's complement is most efficient for arithmetic operations.
473,Which method of representation has two representations for '0'?,Sign-magnitude (1),1's complement (2),2's complement (3),None of the mentioned (4),1,2,1's complement has separate +0 and -0 forms.
474,When we perform subtraction on -7 and 1 the answer in 2's complement form is ?,1010 (1),1110 (2),0110 (3),1000 (4),4,4,"-7 minus 1 is -8, which is 1000 in 4 bits."
475,Add the two BCD numbers: 1001 + 0100 = ?,10101111 (1),01010000 (2),00010011 (3),00101011 (4),3,3,"9 plus 4 equals 13, or 00010011 in BCD."
476,Carry out BCD subtraction for (68) ï¿½V (61) using 10's complement method.,00000111 (1),01110000 (2),100000111 (3),011111000 (4),1,1,68 minus 61 in BCD using 10's complement gives 00000111.
477,Perform BCD addition of (23)BCD + (20)BCD.,00110100 (1),01000011 (2),10011 (3),11100 (4),2,2,(23)BCD + (20)BCD = 01000011 in BCD.
478,The Excess-3 representation of (0100)BCD is ?,0110 (1),1110 (2),0111 (3),1100 (4),3,3,0100 plus 0011 is 0111 in Excess-3 code.
479,When we perform subtraction on -7 and -5 the answer in 2's complement form is ?,11110 (1),1110 (2),1010 (3),0010 (4),2,2,"-7 minus -5 is -2, shown as 1110 in 4-bit 2's complement."
480,"When we subtract -3 from 2, the answer in 2's complement form is ?",0001 (1),1101 (2),0101 (3),1001 (4),3,3,"2 minus -3 is 5, which is 0101 in 4 bits."
481,When 1101 is used to divide 100010010 the remainder is ?,101 (1),11 (2),0 (3),1 (4),4,4,100010010 is 274 decimal; 274 mod 13 is 1.
482,Binary coded decimal is a combination of ?,Two binary digits (1),Three binary digits (2),Four binary digits (3),Five binary digits (4),3,3,BCD digits are groups of four binary bits.
483,The decimal number 10 is represented in its BCD form as ?,10100000 (1),01010111 (2),00010000 (3),00101011 (4),3,3,Decimal 10 in BCD is 00010000.
484,In memory-mapped I/O ____________,The I/O devices and the memory share the same address space (1),The I/O devices have a separate address space (2),The memory and I/O devices have an associated address space (3),A part of the memory is specifically set aside for the I/O operation (4),1,1,I/O devices share memory address space in memory-mapped I/O.
485,The advantage of I/O mapped devices to memory mapped is,The former offers faster transfer of data (1),The devices connected using I/O mapping have a bigger buffer space (2),The devices have to deal with fewer address lines (3),No advantage as such (4),3,3,I/O mapped devices use fewer address lines.
486,To overcome the lag in the operating speeds of the I/O device and the processor we use,Buffer spaces (1),Status flags (2),Interrupt signals (3),Exceptions (4),2,1,Buffers handle speed mismatches between device and processor.
487,The method which offers higher speeds of I/O transfers is,Interrupts (1),Memory mapping (2),Program-controlled I/O (3),DMA (4),4,4,DMA allows the fastest I/O transfers.
488,The process where in the processor constantly checks the status flags is called as,Polling (1),Inspection (2),Reviewing (3),Echoing (4),1,1,Polling means the CPU repeatedly checks device status.
489,"Process that periodically checks status of an I/O devices, is known as",Cold swapping (1),I/O instructions (2),Polling (3),Dealing (4),3,3,Polling periodically checks I/O device status.
490,A unit on bus that initiates bus requests is called,Slave (1),Controller master (2),Striping (3),Bus master (4),4,4,A bus master initiates bus requests.
491,"A scheme in which portions of I/O address space are given to I/O devices, is called",Data mapped (1),Memory-mapped I/O (2),Backplane (3),Both a and b (4),4,2,Memory-mapped I/O dedicates portions of address space to devices.
492,The DMA differs from the interrupt mode by,The involvement of the processor for the operation (1),The method accessing the I/O devices (2),The amount of data transfer possible (3),None of the mentioned (4),4,1,"In DMA, the CPU is largely uninvolved compared to interrupt mode."
493,The DMA transfers are performed by a control circuit called as,Device interface (1),DMA controller (2),Data controller (3),Overlooker (4),2,2,DMA transfers are controlled by the DMA controller.
494,"In DMA transfers, the required signals and addresses are given by the",Processor (1),Device drivers (2),DMA controllers (3),The program itself (4),3,3,The DMA controller signals and addresses the bus.
495,After the completion of the DMA transfer the processor is notified by,Acknowledge signal (1),Interrupt signal (2),WMFC signal (3),None of the mentioned (4),2,2,An interrupt informs the processor once DMA completes.
496,The DMA controller has _______ registers,4 (1),2 (2),3 (3),1 (4),3,1,The DMA controller typically has 4 registers.
497,When the R/W bit of the status register of the DMA controller is set to 1.,Read operation is performed (1),Write operation is performed (2),Read & Write operation is performed (3),None of the mentioned (4),1,2,R/W=1 means a write operation is performed.
498,The controller is connected to the ____,Processor BUS (1),System BUS (2),External BUS (3),None of the mentioned (4),2,2,The controller resides on the system bus.
499,Can a single DMA controller perform operations on two different disks simultaneously?,True (1),False (2),May be (3),None of the above (4),1,2,A single DMA controller cannot handle two disks at once.
500,The technique whereby the DMA controller steals the access cycles of the processor to operate is called,Fast conning (1),Memory Con (2),Cycle stealing (3),Memory stealing (4),3,3,Cycle stealing temporarily borrows CPU cycles.
501,The technique where the controller is given complete access to main memory is ________________________,Cycle stealing (1),Memory stealing (2),Memory Con (3),Burst mode (4),4,4,Burst mode grants the DMA full memory control.
502,The controller uses _____ to help with the transfers when handling network interfaces.,Input Buffer storage (1),Signal enhancers (2),Bridge circuits (3),All of the mentioned (4),1,4,"Various aids (buffers, circuits) assist network transfers."
503,To overcome the conflict over the possession of the BUS we use ______,Optimizers (1),BUS arbitrators (2),Multiple BUS structure (3),None of the mentioned (4),2,2,A bus arbitrator resolves bus control conflicts.
504,"If a unit completes its task before the allotted time period, then _______",It'll perform some other task in the remaining time,Its time gets reallocated to a different task,It'll remain idle for the remaining time,None of the mentioned,3,3,The unit remains idle if it finishes early.
505,"To increase the speed of memory access in pipelining, we make use of _______",Special memory locations,Special purpose registers,Cache,Buffers,3,3,Cache memory helps speed up pipeline accesses.
506,"The instruction, Add #45,R1 does _______",Adds the value of 45 to the address of R1 and stores 45 in that address,Adds 45 to the value of R1 and stores it in R1,Finds the memory location 45 and adds that content to that of R1,None of the mentioned,2,2,It adds the immediate value 45 to R1's contents.
507,"In the case of, Zero-address instruction method the operands are stored in _____",Registers,Accumulators,Push down stack,Cache,3,3,Zero-address instructions use a stack for operands.
508,"In the following indexed addressing mode instruction, MOV 5(R1), LOC the effective address is ______",EA = 5+R1,EA = R1,EA = [R1],EA = 5+[R1],4,1,The effective address is R1 + 5.
509,"When we use auto increment or auto decrements, which of the following is/are true? 
1) In both, the address is used to retrieve the operand and then the address gets altered 
2) In auto increment, the operand is retrieved first and then the address altered
3) Both of them can be used on general purpose registers as well as memory locations","1, 2, 3",2,"1, 3","2, 3",4,2,"Only auto-increment retrieves operand first, then increments address."
510,"The effective address of the following instruction is MUL 5(R1,R2).",5+R1+R2,5+(R1*R2),5+[R1]+[R2],5*([R1]+[R2]),3,1,The address is 5 plus R1 plus R2.
511,Which method/s of representation of numbers occupies a large amount of memory than others?,Sign-magnitude,1's complement,2's complement,1's & 2's compliment,1,1,Sign-magnitude typically requires extra sign-bit handling.
512,Which method of representation has two representations for '0'?,Sign-magnitude,1's complement,2's complement,Both Sign-magnitude and 1's complement,4,4,Both sign-magnitude and 1's complement have +0 and -0.
513,When we perform subtraction on -7 and 1 the answer in 2's complement form is _________,1010,1110,110,1000,4,4,"-7 minus 1 is -8, displayed as 1000."
514,When we perform subtraction on -7 and -5 the answer in 2's complement form is ________,11110,1110,1010,10,2,2,"-7 minus -5 is -2, which is 1110."
515,"For the addition of large integers, most of the systems make use of ______",Fast adders,Full adders,Carry look-ahead adders,None of the mentioned,3,3,Carry look-ahead adders are used for large sums.
516,The register used to store the flags is called as _________,Flag register,Status register,Test register,Log register,2,2,The status register holds the processor flags.
517,In the implementation of a Multiplier circuit in the system we make use of _______,Counter,Flip flop,Shift register,Push down stack,3,3,Shift registers are used for multiplication steps.
518,An 24 bit address generates an address space of ______ locations.,1024,4096,2^48,16777216,4,4,2^24 is 16777216 addresses.
519,"If a system is 64 bit machine, then the length of each word will be _______",4 bytes,8 bytes,16 bytes,12 bytes,2,2,64 bits equals 8 bytes per word.
520,"When using the Big Endian assignment to store a number, the sign bit of the number is stored in _____",The higher order byte of the word,The lower order byte of the word,Can't say,None of the mentioned,1,1,Big-endian stores the sign bit in the highest byte.
521,To get the physical address from the logical address generated by CPU we use ____________,MAR,MMU,Overlays,TLB,2,2,The MMU translates logical to physical addresses.
522,_____ method is used to map logical addresses of variable length onto physical memory.,Paging,Overlays,Segmentation,Paging with segmentation,3,3,Segmentation handles variable-length logical blocks.
523,When generating physical addresses from a logical address the offset is stored in __________,Translation look-aside buffer,Relocation register,Page table,Shift register,2,3,The page table stores the offset for address translation.
524,The technique used to store programs larger than the memory is ____________,Overlays,Extension registers,Buffers,Both Extension registers and Buffers,1,1,Overlays allow running programs bigger than RAM.
525,The unit which acts as an intermediate agent between memory and backing store to reduce process time is ___________,TLB's,Registers,Page tables,Cache,4,4,Cache acts as a fast intermediary.
526,Does the Load instruction do the following operation/s?,Loads the contents of a disc onto a memory location,Loads the contents of a location onto the accumulators,Load the contents of the PCB onto the register,None of the mentioned,2,2,Load brings data from memory into a register.
527,Which of the following techniques used to effectively utilize main memory?,Address binding,Dynamic linking,Dynamic loading,Both Dynamic linking and loading,3,4,Both dynamic linking and loading help main memory usage.
528,__________ converts the programs written in assembly language into machine instructions.,Machine compiler,Interpreter,Assembler,Converter,3,3,An assembler converts assembly to machine code.
529,The return address of the Sub-routine is pointed to by _______,IR,PC,MAR,Special memory registers,2,2,The program counter points to the return address on subroutine exit.
530,The order in which the return addresses are generated and used is _________,LIFO,FIFO,Random,Highest priority,1,1,Return addresses use a LIFO stack discipline.
531,In case of nested subroutines the return addresses are stored in __________,System heap,Special memory buffers,Processor stack,Registers,3,3,Nested subroutine returns are on the processor stack.
532,When parameters are being passed on to the subroutines they are stored in ________,Registers,Memory locations,Processor stacks,All of the mentioned,4,4,"Parameters can be passed in registers, memory, or stack."
533,The most efficient way of handling parameter passing is by using ______,General purpose registers,Stacks,Memory locations,None of the mentioned,1,,
534,The most Flexible way of logging the return addresses of the subroutines is by using _______,Registers,Stacks,Memory locations,None of the mentioned,2,2,"Stacks allow flexible, dynamic storage of return addresses."
535,______ pointer is used to point to parameters passed or local parameters of the subroutine.,Stack pointer,Frame pointer,Parameter register,Log register,2,2,The frame pointer holds subroutine parameters and locals.
536,The reserved memory or private space of the subroutine gets deallocated when _______,The stop instruction is executed by the routine,The pointer reaches the end of the space,When the routine's return statement is executed,None of the mentioned,3,3,"On return, the subroutine's stack space is freed."
537,_____ the most suitable data structure used to store the return addresses in the case of nested subroutines.,Heap,Stack,Queue,List,2,2,Nested subroutines store return addresses on a stack.
538,The data structure suitable for scheduling processes is _______,List,Heap,Queue,Stack,3,3,A queue manages scheduling for multiple processes.
539,The sub-routine service procedure is similar to that of the interrupt service routine in ________,Method of context switch,Returning,Process execution,Method of context switch & Process execution,4,4,Both context switch and process execution methods resemble interrupts.
540,The usual BUS structure used to connect the I/O devices is ___________,Star BUS structure,Multiple BUS structure,Single BUS structure,Node to Node BUS structure,3,3,A single bus is the usual structure for I/O transfers.
541,The method of accessing the I/O devices by repeatedly checking the status flags is ___________,Program-controlled I/O,Memory-mapped I/O,I/O mapped,None of the mentioned,1,1,Program-controlled I/O repeatedly checks device status.
542,The process wherein the processor constantly checks the status flags is called as ___________,Polling,Inspection,Reviewing,Echoing,1,1,Polling is the repeated checking of device flags.
543,The interrupt-request line is a part of the ___________,Data line,Control line,Address line,None of the mentioned,2,2,The interrupt-request line is carried on control lines.
544,The return address from the interrupt-service routine is stored on the ___________,System heap,Processor register,Processor stack,Memory,3,3,The processor stack stores the interrupt return address.
545,The signal sent to the device from the processor to the device after receiving an interrupt is ___________,Interrupt-acknowledge,Return signal,Service signal,Permission signal,1,1,An interrupt-acknowledge signal is sent once an interrupt is recognized.
546,The time between the receiver of an interrupt and its service is ______,Interrupt delay,Interrupt latency,Cycle time,Switching time,2,2,Interrupt latency is the delay before servicing starts.
547,Interrupts form an important part of _____ systems.,Batch processing,Multitasking,Real-time processing,Multi-user,3,3,Real-time systems rely heavily on interrupts.
548,The resistor which is attached to the service line is called _____,Push-down resistor,Pull-up resistor,Break down resistor,Line resistor,2,2,A pull-up resistor is attached to the service line.
549,An interrupt that can be temporarily ignored is ___________,Vectored interrupt,Non-maskable interrupt,Maskable interrupt,High priority interrupt,3,3,A maskable interrupt can be ignored temporarily.
550,CPU as two modes privileged and non-privileged. In order to change the mode from privileged to non-privileged.,A hardware interrupt is needed,A software interrupt is needed,Either hardware or software interrupt is needed,A non-privileged instruction (which does not generate an interrupt)is needed,2,2,A software interrupt can switch privileged to non-privileged mode.
551,How can the processor ignore other interrupts when it is servicing one ___________,By turning off the interrupt request line,By disabling the devices from sending the interrupts,BY using edge-triggered request lines,All of the mentioned,4,4,All mentioned methods can stop interrupts during service.
552,"In vectored interrupts, how does the device identify itself to the processor?",By sending its device id,By sending the machine code for the interrupt service routine,By sending the starting address of the service routine,None of the mentioned,3,1,The device sends its ID to identify itself.
553,The processor indicates to the devices that it is ready to receive interrupts ________,By enabling the interrupt request line,By enabling the IRQ bits,By activating the interrupt acknowledge line,None of the mentioned,3,3,The processor uses interrupt acknowledge to signal readiness.
554,_________ method is used to establish priority by serially connecting all devices that request an interrupt.,Vectored-interrupting,Daisy chain,Priority,Polling,2,2,The daisy chain method sets priority by serial connection.
555,In daisy chaining device 0 will pass the signal only if it has _______,Interrupt request,No interrupt request,Both No interrupt and Interrupt request,None of the mentioned,2,2,Device 0 only passes the signal if it has no request.
556,If during the execution of an instruction an exception is raised then __________,The instruction is executed and the exception is handled,The instruction is halted and the exception is handled,The processor completes the execution and saves the data and then handle the exception,None of the mentioned,2,2,The instruction halts and the exception is handled immediately.
557,_____ is/are types of exceptions.,Trap,Interrupt,System calls,All of the mentioned,4,4,"Traps, interrupts, and system calls are exceptions."
558,A privilege exception is raised __________,When a process tries to change the mode of the system,When a process tries to change the priority level of the other processes,When a process tries to access the memory allocated to other users,All of the mentioned,4,4,A privilege exception occurs if a process attempts restricted actions.
559,To resolve the clash over the access of the system BUS we use ______,Multiple BUS,BUS arbitrator,Priority access,None of the mentioned,2,2,A bus arbitrator resolves system bus access conflicts.
560,______ BUS arbitration approach uses the involvement of the processor.,Centralised arbitration,Distributed arbitration,Random arbitration,All of the mentioned,1,1,Centralised arbitration requires processor involvement.
561,The primary function of the BUS is __________,To connect the various devices to the cpu,To provide a path for communication between the processor and other devices,To facilitate data transfer between various devices,All of the mentioned,4,4,"The bus connects devices, communicates with CPU, and transfers data."
562,The classification of BUSes into synchronous and asynchronous is based on __________,The devices connected to them,The type of data transfer,The Timing of data transfers,None of the mentioned,3,3,Synchronous or asynchronous depends on data transfer timing.
563,The device which interacts with the initiator is __________,Slave,Master,Responder,Friend,1,1,The responding device is considered the slave.
564,"In synchronous BUS, the devices get the timing signals from __________",Timing generator in the device,A common clock line,Timing signals are not used at all,None of the mentioned,2,2,A common clock line provides synchronization.
565,The time for which the data is to be on the BUS is affected by __________,Propagation delay of the circuit,Setup time of the device,Memory access time,Propagation delay of the circuit & Setup time of the device,4,4,Propagation and setup times affect data duration on the bus.
566,The duration between the read and the mfc signal is ______,Access time,Latency,Delay,Cycle time,1,1,The interval from read to MFC is access time.
567,The minimum time delay between two successive memory read operations is ______,Cycle time,Latency,Delay,None of the mentioned,1,1,Cycle time is the minimum gap between memory reads.
568,"__________ is the bottleneck, when it comes computer performance.",Memory access time,Memory cycle time,Delay,Latency,2,1,Memory access time is often the main performance bottleneck.
569,The number of external connections required in 16 X 8 memory organisation is _____,14,19,15,12,1,1,"16x8 memory needs 4 address, 8 data, and 2 controls = 14."
570,"In a 4K-bit chip organisation has a total of 19 external connections, then it has _______ address if 8 data lines are there.",10,8,9,12,3,3,8 data lines give 9 address lines for 4K bits.
571,The drawback of building a large memory with DRAM is ______________,The large cost factor,The inefficient memory organisation,The Slow speed of operation,All of the mentioned,3,3,Large DRAM is slower in operation.
572,"The memory which is used to store the copy of data or instructions stored in larger memories, inside the CPU is called _______",Level 1 cache,Level 2 cache,Registers,TLB,1,1,Level 1 cache stores recently used data for quick access.
573,The next level of memory hierarchy after the L2 cache is _______,Secondary storage,TLB,Main memory,Register,4,3,"After L2 cache, data goes to main memory."
574,The effectiveness of the cache memory is based on the property of ________,Locality of reference,Memory localisation,Memory size,None of the mentioned,1,1,Cache works well due to locality of reference.
575,The temporal aspect of the locality of reference means ________,That the recently executed instruction won't be executed soon,That the recently executed instruction is temporarily not referenced,That the recently executed instruction will be executed soon again,None of the mentioned,3,3,Temporal locality means recently used instructions are likely reused soon.
576,The spatial aspect of the locality of reference means ________,That the recently executed instruction is executed again next,That the recently executed won't be executed again,That the instruction executed will be executed at a later time,That the instruction in close proximity of the instruction executed will be executed in future,4,4,Spatial locality means nearby instructions will likely be accessed.
577,The correspondence between the main memory blocks and those in the cache is given by _________,Hash function,Mapping function,Locale function,Assign function,2,2,A mapping function matches main memory blocks to cache lines.
578,The algorithm to remove and place new contents into the cache is called _______,Replacement algorithm,Renewal algorithm,Updation,None of the mentioned,1,1,A replacement algorithm handles new entries in cache.
579,The write-through procedure is used ________,To write onto the memory directly,To write and read from memory simultaneously,To write directly on the memory and the cache simultaneously,None of the mentioned,3,3,Write-through updates both cache and memory simultaneously.
580,The bit used to signify that the cache location is updated is ________,Dirty bit,Update bit,Reference bit,Flag bit,1,1,The dirty bit indicates a modified cache entry.
581,The copy-back protocol is used ________,To copy the contents of the memory onto the cache,To update the contents of the memory from the cache,To remove the contents of the cache and push it on to the memory,None of the mentioned,2,2,Copy-back updates memory only when cache blocks are replaced.
582,The approach where the memory contents are transferred directly to the processor from the memory is called ______,Read-later,Read-through,Early-start,None of the mentioned,3,2,Read-through sends memory data directly to the CPU.
583,During a write operation if the required block is not present in the cache then ______ occurs.,Write latency,Write hit,Write delay,Write miss,4,4,A write miss occurs if the block is absent in cache.
584,"In memory interleaving, the lower order bits of the address is used to _____________",Get the data,Get the address of the module,Get the address of the data within the module,None of the mentioned,2,2,Lower address bits select the memory module in interleaving.
585,The number successful accesses to memory stated as a fraction is called as _____,Hit rate,Miss rate,Success rate,Access rate,1,1,Hit rate is successful memory accesses over total.
586,"The number failed attempts to access memory, stated in the form of a fraction is called as _________",Hit rate,Miss rate,Failure rate,Delay rate,2,2,Miss rate is failed accesses over total attempts.
587,"In associative mapping during LRU, the counter of the new block is set to '0' and all the others are incremented by one, when _____ occurs.",Delay,Miss,Hit,Delayed hit,2,2,"On a miss, new block counter is 0, others increment."
588,"In LRU, the referenced blocks counter is set to'0' and that of the previous blocks are incremented by one and others remain same, in the case of ______",Hit,Miss,Delay,None of the mentioned,1,1,"On a hit, referenced block counter is 0, others are incremented."
589,The program is divided into operable parts called as _________,Frames,Segments,Pages,Sheets,2,3,Programs are divided into pages for paging.
590,The techniques which move the program blocks to or from the physical memory is called as ______,Paging,Virtual memory organisation,Overlays,Framing,2,3,Overlays move program parts in and out of memory.
591,The binary address issued to data or instructions are called as ______,Physical address,Location,Relocatable address,Logical address,4,4,The CPU issues logical addresses.
592,______ translates the logical address into a physical address.,MMU,Translator,Compiler,Linker,1,1,The MMU converts logical to physical addresses.
593,The main aim of virtual memory organisation is ________,To provide effective memory access,To provide better memory transfer,To improve the execution of the program,All of the mentioned,4,4,"Virtual memory improves execution, access, and transfers."
594,The numbers written to the power of 10 in the representation of decimal numbers are called as _____,Height factors,Size factors,Scale factors,None of the mentioned,3,3,Powers of 10 in decimal are scale factors.
595,________ constitute the representation of the floating number.,Sign,Significant digits,Scale factor,All of the mentioned,4,4,"Floating representation has sign, digits, and scale factor."
596,The sign followed by the string of digits is called as ______,Significant,Determinant,Mantissa,Exponent,3,3,Mantissa is the signed digit string.
597,The 32 bit representation of the decimal number is called as ___________,Double-precision,Single-precision,Extended format,None of the mentioned,2,2,32-bit format is called single-precision.
598,In 32 bit representation the scale factor as a range of ________,-128 to 127,-256 to 255,0 to 255,None of the mentioned,1,3,The exponent field ranges from 0 to 255.
599,"In double precision format, the size of the mantissa is ______",32 bit,52 bit,64 bit,72 bit,2,2,Double precision mantissa is 52 bits long.
600,"Consider an instruction pipeline with five stages without any branch prediction: Fetch Instruction (FI), Decode Instruction (DI), Fetch Operand (FO), Execute Instruction (EI) and Write Operand (WO). The stage delays for FI, DI, FO, EI and WO are 5 ns, 7 ns, 10 ns, 8 ns and 6 ns, respectively. There are intermediate storage buffers after each stage and the delay of each buffer is 1 ns. A program consisting of 12 instructions I1, I2, I3, ï¿½K, I12 is executed in this pipelined processor. Instruction I4 is the only branch instruction and its branch target is I9. If the branch is taken during the execution of this program, the time (in ns) needed to complete the program is",132,165,176,328,2,3,The total pipelined execution time is 176 ns.
601,A RAM chip has a capacity of 1024 words of 8 bits each (1K * 8). The number of 2 * 4 decoders with enable line needed to construct a 16K * 16 RAM from 1K * 8 RAM is,4,5,6,7,2,2,Five 2x4 decoders with enable are needed.
