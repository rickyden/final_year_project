Global Question Number,Question,Correct Answer,LLM Answer,Explanation
1,"In a database, normalization is a process used to minimize redundancy and dependency of data, which ultimately helps in maintaining data consistency. However, it does not have any role in improving the performance of query execution.",FALSE,FALSE,"Normalization can impact query performance, sometimes negatively due to increased joins."
2,Merge sort can be implemented using O(1) auxiliary space.,TRUE,FALSE,Merge sort typically requires O(n) auxiliary space for merging.
3,Merge sort is preferred for arrays over linked lists.,FALSE,FALSE,Merge sort is preferred for linked lists due to easier merging.
4,Quick sort follows Divide-and-Conquer strategy.,TRUE,TRUE,"Quick sort divides array, conquers sub-arrays, combines results."
5,Quick sort uses join operation rather than merge operation.,TRUE,FALSE,"Quick sort uses partitioning, not joining or merging."
6,"When dynamic programming is applied to a problem, it takes far less time as compared to other methods that dont take advantage of overlapping subproblems.",TRUE,TRUE,Dynamic programming reduces time by solving overlapping subproblems once.
7,A greedy algorithm can be used to solve all the dynamic programming problems.,FALSE,FALSE,Greedy algorithms don't always solve dynamic programming problems optimally.
8,The schema for the relationship set linking a weak entity set to its corresponding strong entity set is redundant.,TRUE,FALSE,The schema for weak entity sets includes a foreign key.
9,SQL specifies a way of mentioning functional dependencies,FALSE,FALSE,SQL does not specify a way to mention functional dependencies directly.
10,Most current database systems do not support constraints on materialized view,TRUE,FALSE,Many database systems support constraints on materialized views.
11,Armstrong's axioms allow us to generate all F+ for any given F,TRUE,TRUE,Armstrong's axioms are complete for generating functional dependency closures.
12,Functional dependencies are transitive,TRUE,TRUE,"Functional dependencies can be transitive, leading to further dependencies."
13,Hashing is the problem of finding an appropriate mapping of keys into addresses,TRUE,TRUE,Hashing maps keys to addresses to facilitate quick data retrieval.
14, good hash approach is to derive the hash value that is expected to be dependent of any patterns that might exist in the data,FALSE,TRUE,A good hash function minimizes patterns to reduce collisions.
15,Collisions can be reduced by choosing a hash function randomly in a way that is independent of the keys that are actually to be stored,TRUE,FALSE,Random hash functions might not minimize collisions for actual keys.
16,State true or false: If I = read(Q) and J = write(Q) then the order of I and J does not matter.,FALSE,FALSE,Order matters to prevent race conditions and ensure data consistency.
17,Binary search is always faster than linear search,FALSE,FALSE,"Binary search is faster on sorted data, not always."
18,An objective way to compare two algorithms is by comparing their execution time irrespective of the machines,FALSE,FALSE,Execution time depends on hardware; asymptotic analysis is more objective.
19,"When an array is passed to a function, the function receives a copy of the array (call by value)",FALSE,FALSE,"Arrays are passed by reference, not by value."
20,An O(log N) algorithm is slower than an O(N) algorithm,FALSE,FALSE,O(log N) is faster than O(N) for large N.
21,Most appropriate data structure to print a list of elements in reverse order is Queue data structure,FALSE,FALSE,"Stack, not Queue, is best for reverse order printing."
22,The parameter to a copy constructor must be passed by reference,TRUE,TRUE,Copy constructor requires reference to avoid infinite recursion.
23,The largest value in a binary search tree is always stored at the rightmost node of the tree,TRUE,TRUE,The largest value in a BST is at the rightmost node.
24,"To delete a dynamically allocated tree, the best traversal method is post-order traversal",TRUE,TRUE,Post-order traversal ensures children are deleted before parents.
25,Maximum number of nodes in a binary tree that has N levels is 2N,FALSE,FALSE,Maximum nodes in a binary tree with N levels is 2^N - 1.
26,"In a binary tree, every node has exactly two children",FALSE,FALSE,"In a binary tree, nodes can have zero, one, or two children."
27,"O(1), O(n), O(n log n), O(n^2) is the correct ascending order of time complexities (low to high time complexities)",TRUE,TRUE,O(1) < O(n) < O(n log n) < O(n^2) in time complexity.
28,Let f(n) = 2n^2 + 5n + 12. Then f(n) is O(2^n).,TRUE,FALSE,"f(n) = 2n^2 + 5n + 12 is O(n^2), not O(2^n)."
29,Queue and Stack are the linear data structures,TRUE,TRUE,Both Queue and Stack are linear data structures.
30,Average case running time of Bubble sort is O(n log n).,FALSE,FALSE,"Average case of Bubble sort is O(n^2), not O(n log n)."
31,O(n^2) ? O(2^n/4) is true for any value of n.,FALSE,FALSE,O(n^2) grows slower than O(2^n/4) for large n.
32,The tightest bound time complexity of function T(N) = T(N/2) + 100 is O(N).,FALSE,FALSE,"T(N) = T(N/2) + 100 is O(log N), not O(N)."
33,Queue is the suitable data structure for the application that tracks the customer orders in an ice cream parlor.,TRUE,TRUE,"Queue follows FIFO, suitable for tracking customer orders."
34,A complete binary tree with a height of h can have more nodes than a full binary tree with a height of h.,FALSE,FALSE,A full binary tree always has more nodes than a complete one at the same height.
35,O(1) is the worst-case time complexity of dequeue in a queue containing M elements implemented using an array.,TRUE,FALSE,Dequeue in an array-based queue is O(1) in the worst case.
36,"If we have two algorithms A1 and A2, and A1 takes time O(N) while A2 is O(N^2), then A1 always runs faster than A2.",FALSE,FALSE,A1 may not always run faster due to constant factors and small inputs.
37,The running time of inserting an item into an unsorted list is O(n).,FALSE,FALSE,"Inserting into an unsorted list is O(1), not O(n)."
38,"Suppose an array X is declared as int X[5]. The base address of the array is 100, and integers take up 4 bytes. Then, the address of X[2] is 110.",FALSE,FALSE,"Address of X[2] is 108, not 110 (100 + 2*4)."
39,Stack follows First In First Out (FIFO) rule.,FALSE,FALSE,"Stack follows Last In First Out (LIFO), not FIFO."
40,"In a circular doubly linked list with 10 nodes, we will need to change 4 links if we want to delete a node other than the head node.",FALSE,FALSE,Deleting a node in a circular doubly linked list requires changing 2 links.
41,"When using a linked list to perform insertion sort, each time we remove an element from the input list and insert it into the correct position in the linked list. Assume that we have n numbers to be sorted. The time complexity for sorting these numbers using the insertion sort algorithm is O(n^2).",TRUE,TRUE,Insertion sort on a linked list has O(n^2) time complexity.
42,The time complexity of adding 5 to each element of an array of N numbers is O(N).,TRUE,TRUE,Adding 5 to each element in an array is O(N).
43,"Let us suppose that there is a variable declaration int x = 50, *ptr. Then, the statement *ptr = &x is a valid statement in main() function.",FALSE,FALSE,*ptr = &x is invalid; should be ptr = &x.
44,Minimum and maximum height of a binary heap with N keys will be ? log?N ?.,TRUE,TRUE,Min and max height of a binary heap with N keys is ⌊log₂N⌋.
45,"Inserting an element to the beginning of an array (that is, A[0] element) is more difficult than inserting an element to the beginning of a linked list.",TRUE,TRUE,"Array insertion at the start requires shifting, linked list does not."
46,The largest value in a binary search tree is always stored at the root of the tree.,FALSE,FALSE,"Largest value in a BST is at the rightmost node, not the root."
47,Structured data types include operations performed on data types.,FALSE,TRUE,Structured data types include operations as part of their definition.
48,One disadvantage of the hash algorithm is inefficient memory usage.,TRUE,TRUE,"Hash tables can have unused space, leading to inefficient memory use."
49,A program can always be terminated.,FALSE,TRUE,Programs can be terminated by the operating system or user intervention.
50,The complexities are ADDED for nested loops.,FALSE,FALSE,"For nested loops, complexities are multiplied, not added."
51,"When an element needs to be removed from the stack, the pop operation is performed.",TRUE,TRUE,Pop operation removes the top element from a stack.
52,"In a preorder traversal, the root node is visited first.",TRUE,TRUE,Preorder traversal visits the root node before its subtrees.
53,All nodes in a list point to some other node.,FALSE,FALSE,"In a list, the last node typically points to null."
54,There is no head in circular node.,TRUE,FALSE,A circular list has no distinct head but a reference point.
55,A Stack is a data structure in which insertions and deletions are restricted to one end.,TRUE,TRUE,Stacks operate with LIFO principle at one end.
56,A Stack uses only one pointer.,FALSE,TRUE,A stack typically uses one pointer for the top.
57,The representation of queues in C is similar to that of stacks.,TRUE,FALSE,Queues use two pointers; stacks use one.
58,"In a queue, elements are both inserted and deleted from one end.",FALSE,FALSE,"In a queue, elements are inserted at one end and deleted at the other."
59,The specially designated node is called the root.,TRUE,TRUE,The root is the topmost node in a tree.
60,"In a tree diagram, a circle represents nodes.",TRUE,TRUE,Circles in tree diagrams typically represent nodes.
61,"In a Binary Tree, a node may have a degree greater than 2.",FALSE,FALSE,A binary tree node has a maximum degree of 2.
62,"In a Binary Search Tree, the left and right subtrees of a node are also binary search trees.",TRUE,TRUE,Both subtrees must satisfy the BST property.
63,AVL Trees are variations of Binary Search Trees.,TRUE,TRUE,AVL trees are self-balancing binary search trees.
64,Searching is more efficient in Binary Search Trees than in AVL Trees.,FALSE,FALSE,"AVL trees ensure O(log n) search time, more efficient than unbalanced BSTs."
65,A node of n children should have n values.,FALSE,FALSE,A node's number of children doesn't dictate its values.
66,Searching is more efficient in B-trees than in Binary Search Trees.,TRUE,TRUE,"B-trees are designed for disk access, improving search efficiency."
67,A tree can represent many-to-many relationships.,FALSE,FALSE,"Trees represent hierarchical, not many-to-many, relationships."
68,Acyclic graphs do not have cycles.,TRUE,TRUE,Acyclic graphs have no cycles by definition.
69,Traversal in a graph is visiting each node at least once.,FALSE,FALSE,Traversal visits each node exactly once.
70,"In DFS, all the nodes adjacent to the current node are visited.",FALSE,FALSE,DFS explores as far as possible along each branch before backtracking.
71,"In the Shortest Path Problem, the distance of other nodes is recomputed when the current node is added to the tree.",TRUE,TRUE,Dijkstra's algorithm updates distances when a node is added.
72,"In Dijkstra's Algorithm, a minimal spanning tree can be constructed considering any vertex as the initial vertex.",FALSE,FALSE,"Dijkstra's constructs a shortest path tree, not a minimal spanning tree."
73,Sorting is always performed on the elements stored in primary memory.,FALSE,FALSE,Sorting can also be performed on external storage.
74,Minimal storage sorts are optimal for arrays having a large number of elements.,TRUE,FALSE,Minimal storage sorts are less efficient for large arrays.
75,The sort is performed according to the key value of each record.,TRUE,TRUE,Sorting algorithms compare and arrange based on key values.
76,Bubble Sort is so named because it bubbles the smallest element to the middle of the array.,FALSE,FALSE,"Bubble Sort moves the largest element to the end, not the smallest to the middle."
77,"The Quick Sort Algorithm works by partitioning the array to be sorted, then recursively sorting each partition.",TRUE,TRUE,Quick Sort uses partitioning and recursion to sort.
78,The Sequential Search method on sorted lists is faster than the indexed method.,FALSE,FALSE,Indexed search is faster on sorted lists.
79,The search technique which loads only a part of the database into main memory is known as external search.,TRUE,TRUE,External search involves processing data not fully in main memory.
80,A Binary Search can only be applied to sorted records.,TRUE,TRUE,Binary Search requires a sorted array to function.
81,"In Binary Search, when the key is less than the middle element in a sorted array, the higher limit is modified for the next iteration.",TRUE,FALSE,The upper limit is modified when the key is less than the middle element.
82,"In the Folding method, the key is squared to generate the hash value.",FALSE,FALSE,Folding method involves adding or folding parts of the key.
83,Primary clustering occurs in the Double Hashing method.,FALSE,FALSE,"Primary clustering occurs in linear probing, not double hashing."
84,Data and information are essentially the same thing.,FALSE,FALSE,Data are raw facts; information is processed data.
85,Data processing can be as simple as organizing data to reveal patterns.,TRUE,TRUE,Data processing can involve organizing data to find patterns.
86,We are now said to be entering the knowledge age.,TRUE,TRUE,Transitioning from information to knowledge age is widely acknowledged.
87,"Information implies familiarity, awareness, and understanding knowledge as it applies to an environment.",FALSE,TRUE,Information involves understanding and applying knowledge contextually.
88,Data constitute the building blocks of information.,TRUE,TRUE,Data are the fundamental units that form information.
89,Metadata present a more complete picture of the data in the database than the data itself.,TRUE,TRUE,Metadata provide context and details about the data.
90,The only way to access the data in a database is through the DBMS.,TRUE,FALSE,"Data can also be accessed directly, bypassing the DBMS."
91,Database programming languages receive all application requests and translate them into the complex operations required to fulfill those requests.,FALSE,TRUE,Database languages handle complex operations from application requests.
92,The DBMS reveals much of the databases internal complexity to the application programs and users.,FALSE,FALSE,DBMS hides internal complexity from users and applications.
93,One disadvantage of the DBMS is that it increases the risk of data security breaches.,FALSE,TRUE,DBMS can increase security risks due to centralized data.
94,An operational database is sometimes referred to as an enterprise database.,FALSE,TRUE,Operational databases support enterprise operations and are thus named.
95,A data warehouse can store data derived from many sources.,TRUE,TRUE,Data warehouses aggregate data from multiple sources.
96,The same data might be simultaneously structured and unstructured depending on the intended processing.,TRUE,TRUE,Data structure can vary based on intended use or processing.
97,Corporations use only structured data.,FALSE,FALSE,Corporations use both structured and unstructured data.
98,"Historically, a manual file system was composed of a system of file folders and filing cabinets.",TRUE,TRUE,Manual file systems used physical folders and cabinets.
99,"Initially, the files within a computer file system were similar to manual files.",TRUE,TRUE,Early computer files mirrored the structure of manual files.
100,Structural dependence exists when it is possible to make changes in the file structure without affecting the application programs ability to access the data.,FALSE,FALSE,Structural dependence means changes affect application programs.
101,A query language is a procedural language.,FALSE,FALSE,Query languages are typically non-procedural.
102,One disadvantage of a database system over previous data management approaches is increased costs.,TRUE,TRUE,Database systems often incur higher setup and maintenance costs.
103,One advantage of a database system over previous data management approaches is that the database system is considerably less complex.,FALSE,FALSE,Database systems can be more complex due to their advanced features and management capabilities.
104,Properties of an object are stored as rows in a table.,FALSE,FALSE,"Properties of an object are typically stored as columns in a table, not rows."
105,It is not possible to access data stored in a database using a program written in Visual Basic or COBOL.,FALSE,FALSE,"Data in databases can be accessed using programs written in various languages, including Visual Basic and COBOL."
106,De Morgan's Law is used to simplify complex constraints.,TRUE,TRUE,De Morgan's Law helps simplify complex logical expressions and constraints.
107,DBMS stores data efficiently with little wasted space.,TRUE,TRUE,"DBMS are designed to store data efficiently, minimizing wasted space."
108,"If a table is in 1NF and does not have a composite key, then it is in 2NF.",TRUE,TRUE,A table in 1NF with a non-composite key satisfies 2NF requirements.
109,A primary goal of a database system is to share data with multiple users.,TRUE,TRUE,A primary goal of database systems is to facilitate data sharing among multiple users.
110,Multiple constraints can be included in a single query.,TRUE,TRUE,SQL allows multiple constraints to be included within a single query.
111,Specifying an asterisk (*) for the association multiplicity on a class diagram indicates that the item is required.,FALSE,FALSE,"An asterisk (*) indicates zero or more items, not that the item is required."
112,Specifying a zero (0) for the lower bound for the association multiplicity on a class diagram indicates that the item is required.,FALSE,FALSE,"A zero lower bound indicates the item is optional, not required."
113,SQL does not allow you to use the same table in a subquery as is being used in the outer query.,FALSE,FALSE,SQL allows the use of the same table in both a subquery and the outer query.
114,"If a table is in 3NF, it is also in 2NF.",TRUE,TRUE,3NF implies 2NF; a table in 3NF automatically satisfies 2NF requirements.
115,The primary key does not necessarily have to be unique for a given table.,FALSE,FALSE,A primary key must be unique for each row in a table.
116,A subquery uses the same syntax as a regular query.,TRUE,TRUE,Subqueries use the same basic syntax as regular queries in SQL.
117,Procedural code is often placed within forms and reports.,TRUE,TRUE,Procedural code is commonly embedded within forms and reports for dynamic functionality.
118,A View is a saved query.,TRUE,TRUE,A View in SQL is essentially a saved query that can be referenced.
119,"If you use a GROUP BY command, you cannot see the non-aggregated data in the same query.",TRUE,TRUE,"GROUP BY focuses on aggregated data, excluding non-aggregated columns from the output."
120,Including the DISTINCT operator in a query will always result in less than or equal to the number of records returned when the DISTINCT operator is not used.,TRUE,TRUE,"DISTINCT removes duplicates, resulting in the same or fewer records."
121,A bad choice for a primary key for the university's student database is the student phone number.,TRUE,TRUE,"Phone numbers can change, making them a poor choice for a primary key."
122,The employee-manager association is an example of a reflexive relationship.,TRUE,TRUE,An employee-manager relationship is reflexive as it involves the same entity type.
123,"In procedural languages, the developer must specify the sequence of a set of commands.",TRUE,TRUE,Procedural languages require developers to define the sequence of operations.
124,The sort order of SQL query results can be changed according to user requirements.,TRUE,TRUE,SQL allows sorting of query results using the ORDER BY clause.
125,"General-purpose programming languages, such as Java and C#, are still used in relational database application development despite the invention of SQL.",TRUE,TRUE,General-purpose languages are still used alongside SQL for database application development.
126,There is no way to store procedural code persistently within the database.,FALSE,FALSE,Stored procedures allow procedural code to be stored persistently within the database.
127,"Unlike tables created using the INSERT INTO statement, the output obtained by views will always be up-to-date in response to changes in the underlying data.",TRUE,TRUE,"Views dynamically reflect changes in the underlying data, unlike static INSERT INTO results."
128,Data triggers can only be set to activate after a change occurs in a value in a row.,FALSE,FALSE,Data triggers can be set to activate before or after changes occur.
129,Views can be used exactly like tables in any retrieval query.,TRUE,TRUE,Views can be used in retrieval queries just like tables.
130,"When a class participates in a reflexive relationship, it should always use the same role on both ends of the association.",FALSE,FALSE,Different roles can be used on each end of a reflexive relationship.
131,The primary key can never have the null value but may be duplicated if necessary.,FALSE,FALSE,A primary key must be unique and cannot have null values.
132,A class should never be linked back to itself as this creates endless loops in class diagrams.,FALSE,FALSE,Reflexive relationships are valid and do not inherently create loops in diagrams.
133,The relations in a relational database should be designed to appeal to the end user since the user may use them directly without forms.,FALSE,FALSE,"Relations are designed for efficient data management, not direct user interaction."
134,Normalization usually results in fewer tables in the database and therefore a simpler and better design.,FALSE,FALSE,"Normalization typically results in more tables, increasing complexity but improving data integrity."
135,Including computed attributes in database tables is always a good idea as they save computation time.,FALSE,FALSE,Computed attributes can lead to data redundancy and should be used cautiously.
136,"If a user wishes to print a category name next to each row of output of a SQL query depending on certain classification criteria, the CASE function can be used.",TRUE,TRUE,The CASE function in SQL can categorize and label data based on criteria.
137,"Overlapping subclasses in a class diagram result in the same object appearing in more than one subclass, and therefore should not be allowed.",FALSE,FALSE,Overlapping subclasses are allowed and can be useful in class diagrams.
138,"The UNION operation requires the operand tables to be union-compatible, while the INTERSECT command does not require them to have this property.",FALSE,FALSE,Both UNION and INTERSECT require the operand tables to be union-compatible.
139,A view cannot be used exactly like a table when there is a need to update the view.,TRUE,TRUE,Views cannot always be updated like tables due to potential data integrity issues.
140,A row alias is a well-known mechanism to control the naming of rows in query results.,FALSE,FALSE,Row aliases do not exist; column aliases are used for naming output columns.
141,"In database technology, existing applications should always be re-coded in response to changes in storage structures and/or access techniques.",FALSE,FALSE,Database systems aim to insulate applications from changes in storage or access methods.
142,"Dependency information can never be accidentally lost in a table through deletion anomaly, even if the table is not in 2NF.",FALSE,FALSE,"Deletion anomalies can occur if tables are not normalized properly, even in 2NF."
143,Columnar forms differ from tabular forms in the way they present the data to the user.,TRUE,TRUE,"Columnar forms display data in a vertical list, unlike tabular forms' grid layout."
144,2NF does not necessarily require the table to have a simple primary key.,TRUE,FALSE,"2NF requires the table to have a simple, non-composite primary key."
145,Class diagrams used in relational modeling are related to the object-oriented approach.,TRUE,TRUE,Class diagrams are a part of object-oriented modeling used in database design.
146,Report headers differ from page headers in the frequency and locations in which the headers will appear in the final report.,TRUE,TRUE,"Report headers appear once at the start, while page headers repeat on each page."
147,PC holds the address of the data which is to be executed next.,TRUE,TRUE,The Program Counter (PC) holds the address of the next instruction to execute.
148,Stack pointer is not a sequence of memory locations defined by the user.,FALSE,TRUE,"Stack pointer is a register, not a user-defined memory sequence."
149,Control bus is a group of lines used for the purpose of data flow.,FALSE,FALSE,"The control bus manages control signals, not data flow."
150,A stack can be placed in a portion of a large memory.,TRUE,TRUE,A stack can be implemented in a designated portion of memory.
151,LIFO is a stack organization.,TRUE,TRUE,"LIFO (Last In, First Out) is a fundamental characteristic of stack data structures."
152,ROM is a volatile memory.,FALSE,FALSE,"ROM (Read-Only Memory) is non-volatile, retaining data without power."
153,1011-1001-1001 = -0011.,FALSE,FALSE,"Binary subtraction of 1011-1001-1001 results in 0001, not -0011."
154,Grey value of (10110)? is 11101.,TRUE,FALSE,"Grey value of (10110) is 11100, not 11101."
155,EBCDIC was represented by 256 characters.,TRUE,FALSE,"EBCDIC uses 256 different bit patterns but represents 8-bit characters, not 256 characters."
156,9s complement of 86 is 14.,FALSE,FALSE,"9s complement of 86 is 12, not 14."
157,Sum of product form of a logical expression is in canonical form. Each product term is called MINTERM.,TRUE,TRUE,"Sum of products is in canonical form, each product term is a minterm."
158,The basic circuit for storing information in a digital machine is called flip-flop.,TRUE,TRUE,Flip-flops are basic circuits for storing information in digital machines.
159,Registers are digital circuits used for permanent storage and shifting of information.,FALSE,FALSE,"Registers are used for temporary storage and shifting, not permanent storage."
160,"In shift register, the output of each flip-flop is not connected to the input of the adjacent flip-flop.",FALSE,FALSE,"In shift registers, flip-flop outputs are connected to adjacent flip-flop inputs."
161,There are only three types of shift registers.,FALSE,FALSE,"There are more than three types of shift registers, including serial-in/serial-out, serial-in/parallel-out, etc."
162,Fetch cycle is also a type of instruction cycle.,TRUE,TRUE,"Fetch cycle is part of the instruction cycle, fetching instructions from memory."
163,The register that holds address for the stack is called a stack pointer.,TRUE,TRUE,Stack pointer holds the address of the top of the stack.
164,The operation of insertion is called pop.,FALSE,FALSE,"Insertion operation is called push, not pop."
165,The operation of deletion is called push.,FALSE,FALSE,"Deletion operation is called pop, not push."
166,OPR stands for Opcode Register.,TRUE,FALSE,"OPR stands for Operation Register, not Opcode Register."
167,PROM can be erasable.,FALSE,TRUE,"Some types of PROM, like EPROM, are erasable."
168,A website is an individual page.,FALSE,FALSE,"A website is a collection of web pages, not a single page."
169,The satellite acts as a reflector.,TRUE,TRUE,Satellites often act as reflectors to relay signals.
170,"In white box testing, the code itself is tested, without considering the specifications.",TRUE,TRUE,"White box testing focuses on code internals, not just specifications."
171,A word always contains an even number only.,FALSE,FALSE,"A word can contain any number of bits, not just even."
172,Verification is the process of checking that all has been specified as the user actually wanted.,FALSE,FALSE,"Verification checks if the system meets specifications, not user desires."
173,A computer can store and recall any amount of information as long as desired by the user.,TRUE,FALSE,"Computers have finite storage capacity, not unlimited as desired."
174,The memory is the brain of the computer.,FALSE,FALSE,"The CPU, not memory, is considered the brain of the computer."
175,Machine language is easy to modify.,FALSE,FALSE,Machine language is difficult to modify due to its binary nature.
176,Assembly language is easily understandable.,TRUE,FALSE,Assembly language uses mnemonics but is not easily understandable without training.
177,100111 + 11011 = 1001010.,FALSE,TRUE,100111 + 11011 = 1001010 in binary arithmetic.
178,10101 - 1110 = 00111.,TRUE,FALSE,"10101 - 1110 = 0111, not 00111."
179,The decimal value of 110101.11 is 53.7510.,TRUE,TRUE,110101.11 in binary equals 53.75 in decimal.
180,ASCII 7 is a type of ASCII.,TRUE,TRUE,ASCII-7 is a 7-bit version of the ASCII character encoding.
181,EBCDIC is a 4-bit code used for the internal representation of characters.,FALSE,FALSE,"EBCDIC is an 8-bit code, not a 4-bit code."
182,The flag register carry indicates whether the result contains an odd number or even number.,FALSE,FALSE,"Carry flag indicates an overflow, not whether the result is odd or even."
183,"In flip-flop, the High is also called reset.",FALSE,FALSE,"In flip-flops, High is called set, not reset."
184,Keyboard is an input device.,TRUE,TRUE,Keyboard is an input device for entering data into a computer.
185,BASIC is a programming language.,TRUE,TRUE,BASIC is a high-level programming language.
186,The hard disk can be transferred from one place to another.,TRUE,TRUE,Hard disks can be physically transferred between locations.
187,The capacity of a floppy disk is 1.44MB.,TRUE,TRUE,The capacity of a standard floppy disk is 1.44MB.
188,Ripple is a two-bit asynchronous binary counter.,TRUE,FALSE,"Ripple counter is a multi-bit asynchronous counter, not two-bit."
189,Implicit addressing is also called inherent addressing.,TRUE,TRUE,Implicit addressing is also known as inherent addressing.
190,"In direct access file, addition and deletion of records is very complicated.",FALSE,TRUE,"In direct access files, adding or deleting records can be complex."
191,A key field is a unique field in a record used to identify one record from another.,TRUE,TRUE,A key field uniquely identifies records within a file.
192,"In sequential file, updation is not easy.",TRUE,TRUE,Updating sequential files is not easy due to their structure.
193,The Master strobes the slave at the end of each clock cycle in Synchronous BUS.,TRUE,FALSE,"In Synchronous BUS, master strobes slave at the start, not end, of cycle."
194,The devices with variable speeds are usually connected using asynchronous BUS.,TRUE,TRUE,Asynchronous BUS connects devices with variable speeds.
195,Asynchronous mode of transmission is suitable for systems with multiple peripheral devices.,TRUE,TRUE,Asynchronous transmission suits systems with multiple peripherals.
196,The asynchronous BUS mode of transmission allows for a faster mode of data transfer.,FALSE,FALSE,"Asynchronous BUS is slower due to handshaking, not faster."
197,The Interface circuits generate the appropriate timing signals required by the BUS control scheme.,TRUE,TRUE,Interface circuits generate necessary timing signals for BUS control.
198,"If the transistor gate is closed, then the ROM stores a value of 1.",FALSE,FALSE,"A closed transistor gate in ROM stores a value of 0, not 1."
199,To overcome the slow operating speeds of the secondary memory we make use of faster flash drives.,TRUE,FALSE,"Flash drives are used to increase portability, not to overcome slow speeds."
200,"In the memory hierarchy, as the speed of operation increases the memory size also increases.",FALSE,FALSE,"In memory hierarchy, as speed increases, memory size typically decreases."
201,In direct mapping the presence of the block in memory is checked with the help of block field.,FALSE,TRUE,Direct mapping uses a block field to check presence in memory.
